<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
             xmlns:CtrlKit1="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit"
             xmlns:CtrlKit2="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit"
             xmlns:layoutPrimitivesToolkit="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls.Layout.Toolkit"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk" xmlns:System_Windows_Controls_Primitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls" mc:Ignorable="d" 
             x:Class="webprintDesigner.App"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             >
    <Application.Resources>

    	<ResourceDictionary>
    		<ResourceDictionary.MergedDictionaries>
    			<ResourceDictionary Source="styles/ArrowStyle.xaml"/>
                <ResourceDictionary Source="styles/ToolTipStyle.xaml"/>
                <ResourceDictionary Source="PreviewPaneStyles.xaml"/>
    		</ResourceDictionary.MergedDictionaries>

           

            <Style x:Key="FormTextBlockStyle" TargetType="TextBlock">
    			<Setter Property="FontSize" Value="10" />
    			<Setter Property="Foreground" Value="Black"/>
    			<Setter Property="Margin" Value="2,4,0,0"/>
    			<Setter Property="TextWrapping" Value="NoWrap"/>
    		</Style>

            <Style x:Key="INFEditableTextBoxStyle" TargetType="TextBox">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="#FFFFFFFF"/>
                <Setter Property="Foreground" Value="#FF000000"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontFamily" Value="Verdana"/>
                <Setter Property="FontSize" Value="11"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Margin" Value="5,0,0,0"/>

                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                            <GradientStop Color="#FF718597" Offset="0.375"/>
                            <GradientStop Color="#FF617584" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid x:Name="RootElement">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" To="ReadOnly"/>
                                            <VisualTransition GeneratedDuration="0" To="Normal"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <ColorAnimation Duration="0" To="#EBEAEAEA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border" d:IsOptimized="True"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="ReadOnly">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="Valid"/>
                                        <VisualState x:Name="InvalidUnfocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="InvalidFocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <System:Boolean>True</System:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border" CornerRadius="0" Opacity="1" Background="White">
                                    <Grid>
                                        <Border x:Name="ReadOnlyVisualElement" Opacity="0"/>
                                        <Border x:Name="MouseOverBorder" CornerRadius="0" BorderBrush="Transparent" BorderThickness="1">
                                            <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" Margin="5,0"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="DisabledVisualElement" CornerRadius="0" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
                                <Border x:Name="FocusVisualElement" CornerRadius="0" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="0" Opacity="0"/>
                                <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="0" Visibility="Collapsed">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                            <ToolTip.Triggers>
                                                <EventTrigger RoutedEvent="Canvas.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <System:Boolean>true</System:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ToolTip.Triggers>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                    <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            

            <ControlTemplate x:Key="ValidationToolTipTemplate">
                <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                    <Grid.RenderTransform>
                        <TranslateTransform x:Name="xform" X="-25"/>
                    </Grid.RenderTransform>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="OpenStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="0"/>
                                <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                    </Storyboard>
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Closed">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Open">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                    <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                    <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                    <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                    <Border Background="#FFDC000C" CornerRadius="2"/>
                    <Border CornerRadius="2">
                        <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
                    </Border>
                </Grid>
            </ControlTemplate>

            <Style TargetType="ToggleButton" x:Key="ToggleStyle">
    			<Setter Property="Background" Value="#A2B0DB"/>
    			<Setter Property="Foreground" Value="#FF000000"/>
    			<Setter Property="Padding" Value="3"/>
    			<Setter Property="BorderThickness" Value="0"/>
    			<Setter Property="BorderBrush" Value="Transparent" />
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="ToggleButton">

    						<Grid>
    							<ContentPresenter
    								x:Name="contentPresenter"
    								Content="{TemplateBinding Content}"
    								ContentTemplate="{TemplateBinding ContentTemplate}"
    								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
    								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
    								Margin="{TemplateBinding Padding}"/>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="ExpanderStyle" TargetType="CtrlKit1:Expander">
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="BorderBrush" Value="Transparent"/>
    			<Setter Property="BorderThickness" Value="0"/>
    			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="CtrlKit1:Expander">
    						<Grid Background="Transparent">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="Disabled">
    										<Storyboard>
    											<DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="FocusStates">
    									<VisualState x:Name="Focused">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Unfocused"/>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpansionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Collapsed"/>
    									<VisualState x:Name="Expanded">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpandDirectionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="ExpandDown">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd1" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandUp">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandLeft">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandRight">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd1" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Grid>
    								<Grid.RowDefinitions>
    									<RowDefinition Height="Auto" x:Name="rd0"/>
    									<RowDefinition Height="Auto" x:Name="rd1"/>
    								</Grid.RowDefinitions>
    								<Grid.ColumnDefinitions>
    									<ColumnDefinition Width="Auto" x:Name="cd0"/>
    									<ColumnDefinition Width="Auto" x:Name="cd1"/>
    								</Grid.ColumnDefinitions>
    								<ToggleButton Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{TemplateBinding IsExpanded}" Margin="0" MinHeight="0" MinWidth="0" x:Name="ExpanderButton" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" BorderThickness="0" Style="{StaticResource ToggleStyle}"  />
    								<ContentControl Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
    							</Grid>
                            
                            
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>

    		<Style x:Key="ExpanderStyle2" TargetType="CtrlKit1:Expander">
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="BorderBrush" Value="Transparent"/>
    			<Setter Property="BorderThickness" Value="1"/>
    			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="CtrlKit1:Expander">
    						<Grid Background="Transparent">
    							<Grid.Resources>
    								<LinearGradientBrush x:Key="ExpanderArrowFill" EndPoint="0,1" StartPoint="0,0">
    									<GradientStop Color="White" Offset="0"/>
    									<GradientStop Color="#FFBFBFBF" Offset="0.5"/>
    									<GradientStop Color="#FF878787" Offset="1"/>
    								</LinearGradientBrush>
    								<LinearGradientBrush x:Key="ExpanderArrowHoverFill" EndPoint="0,1" StartPoint="0,0">
    									<GradientStop Color="#FFF0F8FE" Offset="0"/>
    									<GradientStop Color="#FFE0F3FE" Offset="0.3"/>
    									<GradientStop Color="#FF6FA7C5" Offset="1"/>
    								</LinearGradientBrush>
    								<LinearGradientBrush x:Key="ExpanderArrowPressedFill" EndPoint="0,1" StartPoint="0,0">
    									<GradientStop Color="#FFDCF0FA" Offset="0"/>
    									<GradientStop Color="#FFC5E6F7" Offset="0.2"/>
    									<GradientStop Color="#FF5690D0" Offset="1"/>
    								</LinearGradientBrush>
    								<ControlTemplate x:Key="ExpanderDownHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:0.15"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<DoubleAnimation Storyboard.TargetName="RotateButtonTransform" 
    															Storyboard.TargetProperty="Angle" Duration="0:0:0.15" To="180" From="0"/>

    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="Disabled">
    													<Storyboard>
                                                        
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RotateButton" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="1" Background="#6F7B7B" CornerRadius="3 3 0 0">
    											<Grid Background="Transparent">
    												<Grid.ColumnDefinitions>
    													<ColumnDefinition Width="*"/>
    													<ColumnDefinition Width="21"/>
    												</Grid.ColumnDefinitions>
    												<Grid x:Name="RotateButton" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center">
    													<Grid.RenderTransform>
    														<RotateTransform x:Name="RotateButtonTransform" CenterX="9.5" CenterY="9.5" />
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    													<Path Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Left" Margin="4,4,0,4" x:Name="header" VerticalAlignment="Center"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green"  StrokeThickness="0" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    								<ControlTemplate x:Key="ExpanderUpHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:0.15"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<DoubleAnimation Storyboard.TargetName="RotateButtonTransform" 
    															Storyboard.TargetProperty="Angle" Duration="0:0:0.15" To="180" From="0"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="{TemplateBinding Padding}">
    											<Grid Background="Transparent">
    												<Grid.ColumnDefinitions>
    													<ColumnDefinition Width="*"/>
    													<ColumnDefinition Width="19"/>
    												</Grid.ColumnDefinitions>
    												<Grid Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top">
    													<Grid.RenderTransform>
    														<TransformGroup>
    															<TransformGroup.Children>
    																<TransformCollection>
    																	<RotateTransform x:Name="RotateButtonTransform" CenterX="9.5" CenterY="9.5" />
    																</TransformCollection>
    															</TransformGroup.Children>
    														</TransformGroup>
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    													<Path Data="M 1,4.5 L 4.5,1 L 8,4.5" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Left" Margin="4,0,0,0" x:Name="header" VerticalAlignment="Center"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green"  StrokeThickness="0" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    								<ControlTemplate x:Key="ExpanderLeftHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:0.15"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<DoubleAnimation Storyboard.TargetName="RotateButtonTransform" 
    															Storyboard.TargetProperty="Angle" Duration="0:0:0.15" To="180" From="0"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="{TemplateBinding Padding}">
    											<Grid Background="Transparent">
    												<Grid.RowDefinitions>
    													<RowDefinition Height="*"/>
    													<RowDefinition Height="19"/>
    												</Grid.RowDefinitions>
    												<Grid Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top">
    													<Grid.RenderTransform>
    														<TransformGroup>
    															<TransformGroup.Children>
    																<TransformCollection>
    																	<RotateTransform x:Name="RotateButtonTransform" CenterX="9.5" CenterY="9.5" />
    																</TransformCollection>
    															</TransformGroup.Children>
    														</TransformGroup>
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Width="19" Stroke="DarkGray" VerticalAlignment="Center"/>
    													<Path Data="M 4.5,1 L 1,4.5 L 4.5,8" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" Margin="0,4,0,0" x:Name="header" VerticalAlignment="Top"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green"  StrokeThickness="0" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    								<ControlTemplate x:Key="ExpanderRightHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:0.15"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<DoubleAnimation Storyboard.TargetName="RotateButtonTransform" 
    															Storyboard.TargetProperty="Angle" Duration="0:0:0.15" To="180" From="0"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="1" CornerRadius="3 3 0 0" Background="#6F7B7B">
    											<Grid Background="Transparent">
    												<Grid.RowDefinitions>
    													<RowDefinition Height="Auto"/>
    													<RowDefinition Height="*"/>
    												</Grid.RowDefinitions>
    												<Grid Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
    													<Grid.RenderTransform>
    														<TransformGroup>
    															<TransformGroup.Children>
    																<TransformCollection>
    																	<RotateTransform x:Name="RotateButtonTransform" CenterX="9.5" CenterY="9.5" />
    																</TransformCollection>
    															</TransformGroup.Children>
    														</TransformGroup>
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    													<Path Data="M 1,1 L 4.5,4.5 L 1,8" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" Margin="0,4,0,0" x:Name="header" VerticalAlignment="Top"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green"  StrokeThickness="0" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    							</Grid.Resources>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="Disabled">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="FocusStates">
    									<VisualState x:Name="Focused">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Unfocused"/>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpansionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Collapsed"/>
    									<VisualState x:Name="Expanded">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="100" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                             
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpandDirectionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="ExpandDown">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd1" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandUp">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderUpHeaderTemplate}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandLeft">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderLeftHeaderTemplate}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandRight">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
    												<DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource ExpanderRightHeaderTemplate}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd1" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
    								<Grid>
    									<Grid.RowDefinitions>
    										<RowDefinition Height="Auto" x:Name="rd0"/>
    										<RowDefinition Height="Auto" x:Name="rd1"/>
    									</Grid.RowDefinitions>
    									<Grid.ColumnDefinitions>
    										<ColumnDefinition Width="Auto" x:Name="cd0"/>
    										<ColumnDefinition Width="Auto" x:Name="cd1"/>
    									</Grid.ColumnDefinitions>
    									<ToggleButton IsTabStop="False" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{TemplateBinding IsExpanded}" Margin="0" MinHeight="0" MinWidth="0" x:Name="ExpanderButton" Padding="{TemplateBinding Padding}" Template="{StaticResource ExpanderDownHeaderTemplate}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    									<ContentControl IsTabStop="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
    								</Grid>
    							</Border>
                            
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>

    		<Style x:Key="ExpanderStyleX" TargetType="CtrlKit1:Expander">
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="BorderBrush" Value="Transparent"/>
    			<Setter Property="BorderThickness" Value="1"/>
    			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="CtrlKit1:Expander">
    						<Grid Background="Transparent">
    							<Grid.Resources>
    								<LinearGradientBrush x:Key="ExpanderArrowFill" EndPoint="0,1" StartPoint="0,0">
    									<GradientStop Color="White" Offset="0"/>
    									<GradientStop Color="#FFBFBFBF" Offset="0.5"/>
    									<GradientStop Color="#FF878787" Offset="1"/>
    								</LinearGradientBrush>
    								<LinearGradientBrush x:Key="ExpanderArrowHoverFill" EndPoint="0,1" StartPoint="0,0">
    									<GradientStop Color="#FFF0F8FE" Offset="0"/>
    									<GradientStop Color="#FFE0F3FE" Offset="0.3"/>
    									<GradientStop Color="#FF6FA7C5" Offset="1"/>
    								</LinearGradientBrush>
    								<LinearGradientBrush x:Key="ExpanderArrowPressedFill" EndPoint="0,1" StartPoint="0,0">
    									<GradientStop Color="#FFDCF0FA" Offset="0"/>
    									<GradientStop Color="#FFC5E6F7" Offset="0.2"/>
    									<GradientStop Color="#FF5690D0" Offset="1"/>
    								</LinearGradientBrush>
    								<ControlTemplate x:Key="ExpanderDownHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:0.15"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<DoubleAnimation Storyboard.TargetName="RotateButtonTransform" 
    															Storyboard.TargetProperty="Angle" Duration="0:0:0.15" To="180" From="0"/>

    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="Disabled">
    													<Storyboard>

    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RotateButton" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="1" Background="#6F7B7B" CornerRadius="3 3 0 0">
    											<Grid Background="Transparent">
    												<Grid.ColumnDefinitions>
    													<ColumnDefinition Width="*"/>
    													<ColumnDefinition Width="21"/>
    												</Grid.ColumnDefinitions>
    												<Grid x:Name="RotateButton" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center">
    													<Grid.RenderTransform>
    														<RotateTransform x:Name="RotateButtonTransform" CenterX="9.5" CenterY="9.5" />
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    													<Path Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Left" Margin="4,4,0,4" x:Name="header" VerticalAlignment="Center"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green"  StrokeThickness="0" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    								<ControlTemplate x:Key="ExpanderUpHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:0.15"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<DoubleAnimation Storyboard.TargetName="RotateButtonTransform" 
    															Storyboard.TargetProperty="Angle" Duration="0:0:0.15" To="180" From="0"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="{TemplateBinding Padding}">
    											<Grid Background="Transparent">
    												<Grid.ColumnDefinitions>
    													<ColumnDefinition Width="*"/>
    													<ColumnDefinition Width="19"/>
    												</Grid.ColumnDefinitions>
    												<Grid Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top">
    													<Grid.RenderTransform>
    														<TransformGroup>
    															<TransformGroup.Children>
    																<TransformCollection>
    																	<RotateTransform x:Name="RotateButtonTransform" CenterX="9.5" CenterY="9.5" />
    																</TransformCollection>
    															</TransformGroup.Children>
    														</TransformGroup>
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    													<Path Data="M 1,4.5 L 4.5,1 L 8,4.5" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Left" Margin="4,0,0,0" x:Name="header" VerticalAlignment="Center"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green"  StrokeThickness="0" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    								<ControlTemplate x:Key="ExpanderLeftHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:0.15"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<DoubleAnimation Storyboard.TargetName="RotateButtonTransform" 
    															Storyboard.TargetProperty="Angle" Duration="0:0:0.15" To="180" From="0"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="{TemplateBinding Padding}">
    											<Grid Background="Transparent">
    												<Grid.RowDefinitions>
    													<RowDefinition Height="*"/>
    													<RowDefinition Height="19"/>
    												</Grid.RowDefinitions>
    												<Grid Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top">
    													<Grid.RenderTransform>
    														<TransformGroup>
    															<TransformGroup.Children>
    																<TransformCollection>
    																	<RotateTransform x:Name="RotateButtonTransform" CenterX="9.5" CenterY="9.5" />
    																</TransformCollection>
    															</TransformGroup.Children>
    														</TransformGroup>
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Width="19" Stroke="DarkGray" VerticalAlignment="Center"/>
    													<Path Data="M 4.5,1 L 1,4.5 L 4.5,8" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" Margin="0,4,0,0" x:Name="header" VerticalAlignment="Top"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green"  StrokeThickness="0" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    								<ControlTemplate x:Key="ExpanderRightHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:0.15"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<DoubleAnimation Storyboard.TargetName="RotateButtonTransform" 
    															Storyboard.TargetProperty="Angle" Duration="0:0:0.15" To="180" From="0"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="1" CornerRadius="3 3 0 0" Background="#6F7B7B">
    											<Grid Background="Transparent">
    												<Grid.RowDefinitions>
    													<RowDefinition Height="Auto"/>
    													<RowDefinition Height="*"/>
    												</Grid.RowDefinitions>
    												<Grid Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
    													<Grid.RenderTransform>
    														<TransformGroup>
    															<TransformGroup.Children>
    																<TransformCollection>
    																	<RotateTransform x:Name="RotateButtonTransform" CenterX="9.5" CenterY="9.5" />
    																</TransformCollection>
    															</TransformGroup.Children>
    														</TransformGroup>
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    													<Path Data="M 1,1 L 4.5,4.5 L 1,8" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" Margin="0,4,0,0" x:Name="header" VerticalAlignment="Top"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green"  StrokeThickness="0" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    							</Grid.Resources>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="Disabled">
    										<!--<Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>-->
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="FocusStates">
    									<VisualState x:Name="Focused">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Unfocused"/>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpansionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Collapsed">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandSite">
    												<DiscreteObjectKeyFrame KeyTime="0">
    													<DiscreteObjectKeyFrame.Value>
    														<Visibility>Visible</Visibility>
    													</DiscreteObjectKeyFrame.Value>
    												</DiscreteObjectKeyFrame>
    												<DiscreteObjectKeyFrame KeyTime="0:0:0.3">
    													<DiscreteObjectKeyFrame.Value>
    														<Visibility>Collapsed</Visibility>
    													</DiscreteObjectKeyFrame.Value>
    												</DiscreteObjectKeyFrame>
    											</ObjectAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ExpandSite">
    												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-100"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpandSite">
    												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Expanded">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ExpandSite">
    												<EasingDoubleKeyFrame KeyTime="0" Value="-100"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpandSite">
    												<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
    											</DoubleAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandSite">
    												<DiscreteObjectKeyFrame KeyTime="0">
    													<DiscreteObjectKeyFrame.Value>
    														<Visibility>Visible</Visibility>
    													</DiscreteObjectKeyFrame.Value>
    												</DiscreteObjectKeyFrame>
    												<DiscreteObjectKeyFrame KeyTime="0:0:0.3">
    													<DiscreteObjectKeyFrame.Value>
    														<Visibility>Visible</Visibility>
    													</DiscreteObjectKeyFrame.Value>
    												</DiscreteObjectKeyFrame>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpandDirectionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="ExpandDown">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd1" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandUp">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderUpHeaderTemplate}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandLeft">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderLeftHeaderTemplate}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandRight">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
    												<DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource ExpanderRightHeaderTemplate}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd1" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
    								<Grid>
    									<Grid.RowDefinitions>
    										<RowDefinition Height="Auto" x:Name="rd0"/>
    										<RowDefinition Height="Auto" x:Name="rd1"/>
    									</Grid.RowDefinitions>
    									<Grid.ColumnDefinitions>
    										<ColumnDefinition Width="Auto" x:Name="cd0"/>
    										<ColumnDefinition Width="Auto" x:Name="cd1"/>
    									</Grid.ColumnDefinitions>
    									<ToggleButton IsTabStop="False" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{TemplateBinding IsExpanded}" Margin="0" MinHeight="0" MinWidth="0" x:Name="ExpanderButton" Padding="{TemplateBinding Padding}" Template="{StaticResource ExpanderDownHeaderTemplate}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    									<ContentControl IsTabStop="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
    										<ContentControl.RenderTransform>
    											<CompositeTransform/>
    										</ContentControl.RenderTransform>
    									</ContentControl>
    								</Grid>
    							</Border>

    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>

    		<Style x:Key="ExpanderScaleStyle" TargetType="CtrlKit1:Expander">
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="BorderBrush" Value="Transparent"/>
    			<Setter Property="BorderThickness" Value="1"/>
    			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="CtrlKit1:Expander">
    						<Grid Background="Transparent">
    							<Grid.Resources>
    								<LinearGradientBrush x:Key="ExpanderArrowFill" EndPoint="0,1" StartPoint="0,0">
    									<GradientStop Color="White" Offset="0"/>
    									<GradientStop Color="#FFBFBFBF" Offset="0.5"/>
    									<GradientStop Color="#FF878787" Offset="1"/>
    								</LinearGradientBrush>
    								<LinearGradientBrush x:Key="ExpanderArrowHoverFill" EndPoint="0,1" StartPoint="0,0">
    									<GradientStop Color="#FFF0F8FE" Offset="0"/>
    									<GradientStop Color="#FFE0F3FE" Offset="0.3"/>
    									<GradientStop Color="#FF6FA7C5" Offset="1"/>
    								</LinearGradientBrush>
    								<LinearGradientBrush x:Key="ExpanderArrowPressedFill" EndPoint="0,1" StartPoint="0,0">
    									<GradientStop Color="#FFDCF0FA" Offset="0"/>
    									<GradientStop Color="#FFC5E6F7" Offset="0.2"/>
    									<GradientStop Color="#FF5690D0" Offset="1"/>
    								</LinearGradientBrush>
    								<ControlTemplate x:Key="ExpanderDownHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:00"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="{TemplateBinding Padding}">
    											<Grid Background="Transparent">
    												<Grid.ColumnDefinitions>
    													<ColumnDefinition Width="19"/>
    													<ColumnDefinition Width="*"/>
    												</Grid.ColumnDefinitions>
    												<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    													<Path Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" x:Name="header" VerticalAlignment="Center"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green" StrokeDashArray="1 2" StrokeThickness="1" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    								<ControlTemplate x:Key="ExpanderUpHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:00"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="{TemplateBinding Padding}">
    											<Grid Background="Transparent">
    												<Grid.ColumnDefinitions>
    													<ColumnDefinition Width="19"/>
    													<ColumnDefinition Width="*"/>
    												</Grid.ColumnDefinitions>
    												<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
    													<Grid.RenderTransform>
    														<TransformGroup>
    															<TransformGroup.Children>
    																<TransformCollection>
    																	<RotateTransform Angle="180" CenterX="9.5" CenterY="9.5"/>
    																</TransformCollection>
    															</TransformGroup.Children>
    														</TransformGroup>
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    													<Path Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" x:Name="header" VerticalAlignment="Center"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green" StrokeDashArray="1 2" StrokeThickness="1" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    								<ControlTemplate x:Key="ExpanderLeftHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:00"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="{TemplateBinding Padding}">
    											<Grid Background="Transparent">
    												<Grid.RowDefinitions>
    													<RowDefinition Height="19"/>
    													<RowDefinition Height="*"/>
    												</Grid.RowDefinitions>
    												<Grid HorizontalAlignment="Center" VerticalAlignment="Top">
    													<Grid.RenderTransform>
    														<TransformGroup>
    															<TransformGroup.Children>
    																<TransformCollection>
    																	<RotateTransform Angle="90" CenterX="9.5" CenterY="9.5"/>
    																</TransformCollection>
    															</TransformGroup.Children>
    														</TransformGroup>
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Width="19" Stroke="DarkGray" VerticalAlignment="Center"/>
    													<Path Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Row="1" HorizontalAlignment="Center" Margin="0,4,0,0" x:Name="header" VerticalAlignment="Top"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green" StrokeDashArray="1 2" StrokeThickness="1" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    								<ControlTemplate x:Key="ExpanderRightHeaderTemplate" TargetType="ToggleButton">
    									<Grid Background="Transparent">
    										<VisualStateManager.VisualStateGroups>
    											<VisualStateGroup x:Name="CheckStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="00:00:00"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Checked">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unchecked"/>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="CommonStates">
    												<VisualStateGroup.Transitions>
    													<VisualTransition GeneratedDuration="0"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    												</VisualStateGroup.Transitions>
    												<VisualState x:Name="Normal"/>
    												<VisualState x:Name="MouseOver">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Pressed">
    													<Storyboard>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
    														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
    														</ObjectAnimationUsingKeyFrames>
    														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    													</Storyboard>
    												</VisualState>
    											</VisualStateGroup>
    											<VisualStateGroup x:Name="FocusStates">
    												<VisualState x:Name="Focused">
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</VisualState>
    												<VisualState x:Name="Unfocused"/>
    											</VisualStateGroup>
    										</VisualStateManager.VisualStateGroups>
    										<Border Padding="{TemplateBinding Padding}">
    											<Grid Background="Transparent">
    												<Grid.RowDefinitions>
    													<RowDefinition Height="19"/>
    													<RowDefinition Height="*"/>
    												</Grid.RowDefinitions>
    												<Grid HorizontalAlignment="Center" VerticalAlignment="Top">
    													<Grid.RenderTransform>
    														<TransformGroup>
    															<TransformGroup.Children>
    																<TransformCollection>
    																	<RotateTransform Angle="270" CenterX="9.5" CenterY="9.5"/>
    																</TransformCollection>
    															</TransformGroup.Children>
    														</TransformGroup>
    													</Grid.RenderTransform>
    													<Ellipse Fill="{StaticResource ExpanderArrowFill}" Height="19" HorizontalAlignment="Center" x:Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    													<Path Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" x:Name="arrow" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    												</Grid>
    												<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Row="1" HorizontalAlignment="Center" Margin="0,4,0,0" x:Name="header" VerticalAlignment="Top"/>
    											</Grid>
    										</Border>
    										<Rectangle IsHitTestVisible="false" x:Name="FocusVisualElement" Stroke="Green" StrokeDashArray="1 2" StrokeThickness="1" Visibility="Collapsed"/>
    									</Grid>
    								</ControlTemplate>
    							</Grid.Resources>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="Disabled">
    										<Storyboard>
    											<DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="FocusStates">
    									<VisualState x:Name="Focused">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Unfocused"/>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpansionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="00:00:00.2000000"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Collapsed">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
    												<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
    												<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Expanded"/>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpandDirectionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="ExpandDown">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd1" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandUp">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderUpHeaderTemplate}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandLeft">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderLeftHeaderTemplate}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandRight">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
    												<DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource ExpanderLeftHeaderTemplate}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd1" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
    								<Grid>
    									<Grid.RowDefinitions>
    										<RowDefinition Height="Auto" x:Name="rd0"/>
    										<RowDefinition Height="Auto" x:Name="rd1"/>
    									</Grid.RowDefinitions>
    									<Grid.ColumnDefinitions>
    										<ColumnDefinition Width="Auto" x:Name="cd0"/>
    										<ColumnDefinition Width="Auto" x:Name="cd1"/>
    									</Grid.ColumnDefinitions>
    									<ToggleButton Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{TemplateBinding IsExpanded}" Margin="1" MinHeight="0" MinWidth="0" x:Name="ExpanderButton" Padding="{TemplateBinding Padding}" Template="{StaticResource ExpanderDownHeaderTemplate}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    									<ContentControl Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Visible" Width="Auto" Height="Auto" RenderTransformOrigin="0.5,0.5">
    										<ContentControl.RenderTransform>
    											<TransformGroup>
    												<ScaleTransform x:Name="Scale"/>
    												<SkewTransform/>
    												<RotateTransform/>
    												<TranslateTransform/>
    											</TransformGroup>
    										</ContentControl.RenderTransform>
    									</ContentControl>
    								</Grid>
    							</Border>
    							<Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Background="#A5FFFFFF" CornerRadius="3"/>
    							<Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" BorderThickness="1" CornerRadius="3">
    								<Border.BorderBrush>
    									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    										<GradientStop Color="#FFA3AEB9"/>
    										<GradientStop Color="#FF8399A9" Offset="0.375"/>
    										<GradientStop Color="#FF718597" Offset="0.375"/>
    										<GradientStop Color="#FF617584" Offset="1"/>
    									</LinearGradientBrush>
    								</Border.BorderBrush>
    							</Border>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>

    		<Style x:Key="ExpanderNoButtonStyle" TargetType="CtrlKit1:Expander">
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="BorderBrush" Value="Transparent"/>
    			<Setter Property="BorderThickness" Value="1"/>
    			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="CtrlKit1:Expander">
    						<Grid Background="Transparent">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="Disabled">
    										<Storyboard>
    											<DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="FocusStates">
    									<VisualState x:Name="Focused">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Unfocused"/>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpansionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Collapsed"/>
    									<VisualState x:Name="Expanded">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpandDirectionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="ExpandDown">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd1" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandUp">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandLeft">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandRight">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd1" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
    								<Grid>
    									<Grid.RowDefinitions>
    										<RowDefinition Height="Auto" x:Name="rd0"/>
    										<RowDefinition Height="Auto" x:Name="rd1"/>
    									</Grid.RowDefinitions>
    									<Grid.ColumnDefinitions>
    										<ColumnDefinition Width="Auto" x:Name="cd0"/>
    										<ColumnDefinition Width="Auto" x:Name="cd1"/>
    									</Grid.ColumnDefinitions>
    									<ToggleButton Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{TemplateBinding IsExpanded}" Margin="1" MinHeight="0" MinWidth="0" x:Name="ExpanderButton" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    									<ContentControl Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
    								</Grid>
    							</Border>
    							<Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Background="#A5FFFFFF" CornerRadius="3"/>
    							<Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" BorderThickness="1" CornerRadius="3">
    								<Border.BorderBrush>
    									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    										<GradientStop Color="#FFA3AEB9"/>
    										<GradientStop Color="#FF8399A9" Offset="0.375"/>
    										<GradientStop Color="#FF718597" Offset="0.375"/>
    										<GradientStop Color="#FF617584" Offset="1"/>
    									</LinearGradientBrush>
    								</Border.BorderBrush>
    							</Border>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>

    		<Style TargetType="layoutPrimitivesToolkit:AccordionButton" x:Key="AccordionButtonStyle2">
    			<Setter Property="BorderThickness" Value="0"/>
    			<Setter Property="Background" Value="White"/>
    			<Setter Property="HorizontalAlignment" Value="Stretch"/>
    			<Setter Property="VerticalAlignment" Value="Stretch"/>
    			<Setter Property="HorizontalContentAlignment" Value="Center"/>
    			<Setter Property="VerticalContentAlignment" Value="Center"/>
    			<Setter Property="IsTabStop" Value="True"/>
    			<Setter Property="TabNavigation" Value="Once"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="layoutPrimitivesToolkit:AccordionButton">
    						<Grid Margin="{TemplateBinding Padding}" Background="Transparent">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="ExpandDirectionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="ExpandDown">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="icon" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="icon" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="header" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="header" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="cd1" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="-90"/>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandUp">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="icon" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="icon" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="header" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="header" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="cd1" Storyboard.TargetProperty="Width">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
    											</ObjectAnimationUsingKeyFrames>
    											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="90"/>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandLeft">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="icon" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="icon" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="header" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="header" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="rd1" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="header" Storyboard.TargetProperty="LayoutTransform">
    												<DiscreteObjectKeyFrame KeyTime="0">
    													<DiscreteObjectKeyFrame.Value>
    														<TransformGroup>
    															<RotateTransform Angle="90"/>
    														</TransformGroup>
    													</DiscreteObjectKeyFrame.Value>
    												</DiscreteObjectKeyFrame>
    											</ObjectAnimationUsingKeyFrames>
    											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="0"/>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="ExpandRight">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="icon" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="icon" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="header" Storyboard.TargetProperty="(Grid.Column)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="header" Storyboard.TargetProperty="(Grid.Row)">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="rd1" Storyboard.TargetProperty="Height">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="header" Storyboard.TargetProperty="LayoutTransform">
    												<DiscreteObjectKeyFrame KeyTime="0">
    													<DiscreteObjectKeyFrame.Value>
    														<TransformGroup>
    															<RotateTransform Angle="-90"/>
    														</TransformGroup>
    													</DiscreteObjectKeyFrame.Value>
    												</DiscreteObjectKeyFrame>
    											</ObjectAnimationUsingKeyFrames>
    											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="180"/>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="ExpansionStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Collapsed">
    										<Storyboard>
    											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="0"/>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Expanded">
    										<Storyboard>
    											<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="90"/>
    											<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpandedBackground" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
    												<SplineColorKeyFrame KeyTime="00:00:00" Value="#859191"/>
    											</ColorAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpandedBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
    												<!--<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>-->
    												<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="CheckStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="00:00:00"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Checked"/>
    									<VisualState x:Name="Unchecked"/>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    										<VisualTransition From="MouseOver" GeneratedDuration="00:00:00.1" To="Normal"/>
    										<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
    										<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
    											<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverBackground" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
    												<SplineColorKeyFrame KeyTime="00:00:00" Value="#859191"/>
    											</ColorAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
    												<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.3"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed">
    										<Storyboard>
    											<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
    											<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverBackground" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
    												<SplineColorKeyFrame KeyTime="00:00:00" Value="#859191"/>
    											</ColorAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Disabled">
    										<Storyboard/>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="FocusStates">
    									<VisualState x:Name="Focused">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    											</ObjectAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
    												<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.385"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Unfocused"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Border x:Name="background"  CornerRadius="1,1,1,1">
    								<Border.Background>
    									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
    										<GradientStop Color="#ECF0F0" Offset="0"/>
    										<GradientStop Color="#B7C1C2" Offset="0.5"/>
    										<GradientStop Color="#ECF0F0" Offset="1"/>
    									</LinearGradientBrush>
    								</Border.Background>
    								<Grid>
    									<Border Height="Auto" Margin="0,0,0,0" x:Name="ExpandedBackground" VerticalAlignment="Stretch" Opacity="0"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1">
    										<Border.Background>
    											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
    												<GradientStop Color="#ECF0F0" Offset="0"/>
    												<GradientStop Color="#B7C1C2" Offset="0.5"/>
    												<GradientStop Color="#ECF0F0" Offset="1"/>
    											</LinearGradientBrush>
    										</Border.Background>
    									</Border>
    									<Border Height="Auto" Margin="0,0,0,0" x:Name="MouseOverBackground" VerticalAlignment="Stretch" Opacity="0"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1">
    										<Border.Background>
    											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
    												<GradientStop Color="#ECF0F0" Offset="0"/>
    												<GradientStop Color="GreenYellow" Offset="0.5"/>
    												<GradientStop Color="#ECF0F0" Offset="1"/>
    											</LinearGradientBrush>
    										</Border.Background>
    									</Border>
    									<Grid Background="Transparent">
    										<Grid.ColumnDefinitions>
    											<ColumnDefinition Width="Auto" x:Name="cd0"/>
    											<ColumnDefinition Width="Auto" x:Name="cd1"/>
    										</Grid.ColumnDefinitions>
    										<Grid.RowDefinitions>
    											<RowDefinition Height="Auto" x:Name="rd0"/>
    											<RowDefinition Height="Auto" x:Name="rd1"/>
    										</Grid.RowDefinitions>
    										<Grid Height="15" HorizontalAlignment="Center" x:Name="icon" VerticalAlignment="Center" Width="15" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.Row="0">
    											<Grid.RenderTransform>
    												<TransformGroup>
    													<ScaleTransform/>
    													<SkewTransform/>
    													<RotateTransform Angle="-90"/>
    													<TranslateTransform/>
    												</TransformGroup>
    											</Grid.RenderTransform>
    											<Path 
    												Height="Auto" 
    												HorizontalAlignment="Center" 
    												Margin="0,0,0,0" x:Name="arrow" 
    												VerticalAlignment="Center" 
    												Width="Auto" 
    												RenderTransformOrigin="0.5,0.5" 
    												Stroke="#666" 
    												StrokeThickness="2" 
    												Data="M 1,1.5 L 4.5,5 L 8,1.5">
    												<Path.RenderTransform>
    													<TransformGroup>
    														<ScaleTransform/>
    														<SkewTransform/>
    														<RotateTransform/>
    														<TranslateTransform/>
    													</TransformGroup>
    												</Path.RenderTransform>
    											</Path>
    										</Grid>
    										<CtrlKit2:LayoutTransformer
    											FontFamily="{TemplateBinding FontFamily}" 
    											FontSize="{TemplateBinding FontSize}" 
    											FontStretch="{TemplateBinding FontStretch}" 
    											FontStyle="{TemplateBinding FontStyle}" 
    											FontWeight="{TemplateBinding FontWeight}" 
    											Foreground="{TemplateBinding Foreground}" 
    											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
    											VerticalAlignment="Center"
    											Margin="6,2,6,1" 
    											x:Name="header" 
    											Grid.Column="0"
    											Grid.Row="0" 
    											Grid.RowSpan="1" 
    											Content="{TemplateBinding Content}" 
    											ContentTemplate="{TemplateBinding ContentTemplate}"/>
    									</Grid>
    								</Grid>
    							</Border>
    							<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" RadiusX="1" RadiusY="1" Stroke="#859191" StrokeThickness="1"/>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style TargetType="ListBoxItem" x:Key="ListBoxItemCustomStyle">
    			<Setter Property="Padding" Value="3" />
    			<Setter Property="HorizontalContentAlignment" Value="Left" />
    			<Setter Property="VerticalContentAlignment" Value="Top" />
    			<Setter Property="Background" Value="Transparent" />
    			<Setter Property="BorderThickness" Value="1"/>
    			<Setter Property="TabNavigation" Value="Local" />
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="ListBoxItem">
    						<Grid Background="{TemplateBinding Background}">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualState x:Name="Normal" />
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Disabled">
    										<Storyboard>
    											<DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="SelectionStates">
    									<VisualState x:Name="Unselected" />
    									<VisualState x:Name="Selected">
    										<Storyboard>
    											<DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
    											<DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="FocusStates">
    									<VisualState x:Name="Focused">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
    												<DiscreteObjectKeyFrame KeyTime="0">
    													<DiscreteObjectKeyFrame.Value>
    														<Visibility>Visible</Visibility>
    													</DiscreteObjectKeyFrame.Value>
    												</DiscreteObjectKeyFrame>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Unfocused"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Rectangle x:Name="fillColor" Opacity="0" Fill="#FFC9D3D4" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
    							<Rectangle x:Name="fillColor2" Opacity="0" Fill="#FFC9D3D4" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
    							<ContentPresenter
    								x:Name="contentPresenter"
    								Content="{TemplateBinding Content}"
    								ContentTemplate="{TemplateBinding ContentTemplate}"
    								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
    								Margin="{TemplateBinding Padding}"/>
    							<Rectangle x:Name="FocusVisualElement" Stroke="#FF5C6666" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>

    		<ControlTemplate x:Key="CustomToggle" TargetType="ToggleButton">
    			<Grid d:DesignWidth="182.5" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
    				<VisualStateManager.VisualStateGroups>
    					<VisualStateGroup x:Name="CommonStates">
    						<VisualState x:Name="Normal"/>
    						<VisualState x:Name="MouseOver"/>
    						<VisualState x:Name="Pressed"/>
    						<VisualState x:Name="Disabled">
    							<Storyboard>
    								<DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>
    							</Storyboard>
    						</VisualState>
    					</VisualStateGroup>
    					<VisualStateGroup x:Name="CheckStates">
    						<VisualState x:Name="Checked">
    							<Storyboard>
    								<ColorAnimation Duration="0" To="#FFCCCCCC" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Ellipse2" d:IsOptimized="True"/>
    								<ColorAnimation Duration="0" To="#FF8B8B8B" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Ellipse2" d:IsOptimized="True"/>
    							</Storyboard>
    						</VisualState>
    						<VisualState x:Name="Unchecked">
    							<Storyboard>
    								<ColorAnimation Duration="0" To="#FFCCCCCC" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Ellipse1" d:IsOptimized="True"/>
    								<ColorAnimation Duration="0" To="#FF8B8B8B" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Ellipse1" d:IsOptimized="True"/>
    							</Storyboard>
    						</VisualState>
    						<VisualState x:Name="Indeterminate"/>
    					</VisualStateGroup>
    					<VisualStateGroup x:Name="FocusStates">
    						<VisualState x:Name="Focused">
    							<Storyboard>
    								<DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
    							</Storyboard>
    						</VisualState>
    						<VisualState x:Name="Unfocused" />
    					</VisualStateGroup>
    				</VisualStateManager.VisualStateGroups>
    				<StackPanel Orientation="Horizontal">
    					<Border x:Name="Background" ToolTipService.ToolTip="Switch to Side 1" CornerRadius="15" BorderThickness="{TemplateBinding BorderThickness}" Width="90" RenderTransformOrigin="0.5,0.5" Height="{TemplateBinding Height}" Margin="0,0,0,0">
    						<Border.Background>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFE9E9E9" Offset="0"/>
    								<GradientStop Color="#FFBCB9B9" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.Background>
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="White" Offset="0"/>
    								<GradientStop Color="#FF7E7E7E" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    						<Border.RenderTransform>
    							<CompositeTransform/>
    						</Border.RenderTransform>
    						<Grid  Margin="0">
    							<Ellipse x:Name="Ellipse1" HorizontalAlignment="Right" Margin="0,4,4,4" Width="20" StrokeThickness="0.5" >
    								<Ellipse.Stroke>
    									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    										<GradientStop Color="#FFFFE244"/>
    										<GradientStop Color="#FFFFE244" Offset="1"/>
    									</LinearGradientBrush>
    								</Ellipse.Stroke>
    								<Ellipse.Fill>
    									<LinearGradientBrush EndPoint="0.699999988079071,1" StartPoint="0.699999988079071,0">
    										<GradientStop Color="#FFFFE244"/>
    										<GradientStop Color="#FFFAAB1B" Offset="1"/>
    									</LinearGradientBrush>
    								</Ellipse.Fill>
    							</Ellipse>
    							<sdk:Label HorizontalAlignment="Right" Margin="0,0,12,0" Content="1" d:LayoutOverrides="Height" VerticalAlignment="Center"/>
    							<ContentPresenter
    								x:Name="contentPresenter"
    								ContentTemplate="{TemplateBinding ContentTemplate}"
    								Margin="10,0,6,0" d:LayoutOverrides="Width, Height" VerticalAlignment="Center"/>
    						</Grid>
    					</Border>
    					<Border x:Name="Background_Copy" ToolTipService.ToolTip="Switch to Side 2" CornerRadius="15" BorderThickness="{TemplateBinding BorderThickness}" RenderTransformOrigin="0.5,0.5" Height="{TemplateBinding Height}" Width="90">
    						<Border.Background>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFE9E9E9" Offset="0"/>
    								<GradientStop Color="#FFBCB9B9" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.Background>
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="White" Offset="0"/>
    								<GradientStop Color="#FF7E7E7E" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    						<Border.RenderTransform>
    							<CompositeTransform/>
    						</Border.RenderTransform>
    						<Grid  Margin="0">
    							<ContentPresenter HorizontalAlignment="Left"
    								x:Name="contentPresenter_Copy"
    								ContentTemplate="{TemplateBinding ContentTemplate}"
    								Margin="10,0,6,0" d:LayoutOverrides="Height" VerticalAlignment="Center" />
    							<Ellipse x:Name="Ellipse2" HorizontalAlignment="Right" Margin="0,4,4,4" Width="20" StrokeThickness="0.5" >
    								<Ellipse.Stroke>
    									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    										<GradientStop Color="#FFFFE244"/>
    										<GradientStop Color="#FFFFE244" Offset="1"/>
    									</LinearGradientBrush>
    								</Ellipse.Stroke>
    								<Ellipse.Fill>
    									<LinearGradientBrush EndPoint="0.699999988079071,1" StartPoint="0.699999988079071,0">
    										<GradientStop Color="#FFFFE244"/>
    										<GradientStop Color="#FFFAAB1B" Offset="1"/>
    									</LinearGradientBrush>
    								</Ellipse.Fill>
    							</Ellipse>
    						
    							<sdk:Label HorizontalAlignment="Right" Margin="0,0,12,0" Content="2" d:LayoutOverrides="Height" VerticalAlignment="Center"/>
    						</Grid>
    					</Border>
    				</StackPanel>
    				<Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" Height="35" Margin="0" VerticalAlignment="Top" />
    				<Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="0" Stroke="#FF6DBDD1" StrokeThickness="0" Opacity="0" IsHitTestVisible="false" HorizontalAlignment="Right" Height="33" VerticalAlignment="Top" Width="90" />
    			</Grid>
    		</ControlTemplate>

    		<Style x:Key="CustomTabControlStyle" TargetType="sdk:TabControl">
    			<Setter Property="IsTabStop" Value="False"/>
    			<Setter Property="Background">
    				<Setter.Value>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="#FFFFFFFF" Offset="0"/>
    						<GradientStop Color="#FFFEFEFE" Offset="1"/>
    					</LinearGradientBrush>
    				</Setter.Value>
    			</Setter>
    			<Setter Property="BorderBrush">
    				<Setter.Value>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="#FFA3AEB9" Offset="0"/>
    						<GradientStop Color="#FF8399A9" Offset="0.375"/>
    						<GradientStop Color="#FF718597" Offset="0.375"/>
    						<GradientStop Color="#FF617584" Offset="1"/>
    					</LinearGradientBrush>
    				</Setter.Value>
    			</Setter>
    			<Setter Property="BorderThickness" Value="1"/>
    			<Setter Property="Padding" Value="5"/>
    			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="sdk:TabControl">
    						<Grid>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="Disabled">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualTop">
    												<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualBottom">
    												<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualLeft">
    												<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualRight">
    												<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Grid x:Name="TemplateTop" Visibility="Collapsed">
    								<Grid.RowDefinitions>
    									<RowDefinition Height="Auto"/>
    									<RowDefinition Height="*"/>
    								</Grid.RowDefinitions>
    								<System_Windows_Controls_Primitives:TabPanel x:Name="TabPanelTop" Margin="2,2,2,-1" Canvas.ZIndex="1" Visibility="Collapsed"/>
    								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" MinWidth="10" MinHeight="10" Grid.Row="1" >
    									<ContentPresenter x:Name="ContentTop" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
    								</Border>
    								<Border x:Name="DisabledVisualTop" Background="#8CFFFFFF" CornerRadius="0,0,3,3" IsHitTestVisible="False" Opacity="0" Grid.Row="1" Grid.RowSpan="2" Canvas.ZIndex="1"/>
    							</Grid>
    							<Grid x:Name="TemplateBottom" Visibility="Collapsed">
    								<Grid.RowDefinitions>
    									<RowDefinition Height="*"/>
    									<RowDefinition Height="Auto"/>
    								</Grid.RowDefinitions>
    								<System_Windows_Controls_Primitives:TabPanel x:Name="TabPanelBottom" Margin="2,-1,2,2" Grid.Row="1" Canvas.ZIndex="1"/>
    								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3,3,0,0" MinWidth="10" MinHeight="10">
    									<ContentPresenter x:Name="ContentBottom" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
    								</Border>
    								<Border x:Name="DisabledVisualBottom" Background="#8CFFFFFF" CornerRadius="3,3,0,0" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1"/>
    							</Grid>
    							<Grid x:Name="TemplateLeft" Visibility="Collapsed">
    								<Grid.ColumnDefinitions>
    									<ColumnDefinition Width="Auto"/>
    									<ColumnDefinition Width="*"/>
    								</Grid.ColumnDefinitions>
    								<System_Windows_Controls_Primitives:TabPanel x:Name="TabPanelLeft" Margin="2,2,-1,2" Canvas.ZIndex="1"/>
    								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" CornerRadius="0,3,3,0" MinWidth="10" MinHeight="10">
    									<ContentPresenter x:Name="ContentLeft" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
    								</Border>
    								<Border x:Name="DisabledVisualLeft" Background="#8CFFFFFF" Grid.Column="1" CornerRadius="0,3,3,0" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1"/>
    							</Grid>
    							<Grid x:Name="TemplateRight" Visibility="Collapsed">
    								<Grid.ColumnDefinitions>
    									<ColumnDefinition Width="*"/>
    									<ColumnDefinition Width="Auto"/>
    								</Grid.ColumnDefinitions>
    								<System_Windows_Controls_Primitives:TabPanel x:Name="TabPanelRight" Grid.Column="1" Margin="-1,2,2,2" Canvas.ZIndex="1"/>
    								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3,0,0,3" MinWidth="10" MinHeight="10">
    									<ContentPresenter x:Name="ContentRight" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
    								</Border>
    								<Border x:Name="DisabledVisualRight" Background="#8CFFFFFF" CornerRadius="3,0,0,3" IsHitTestVisible="False" Margin="0" Opacity="0" Canvas.ZIndex="1"/>
    							</Grid>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>

    		<Style TargetType="ToggleButton" x:Key="SnapToggleStyle">
    			<Setter Property="Cursor" Value="Hand"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="ToggleButton">
                       
    						<Grid x:Name="RootElement">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CheckStates">
    									<VisualState x:Name="Checked">
    										<Storyboard>
    											<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Snap_Off" Storyboard.TargetProperty="Opacity" To="0" />
    											<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Snap_On" Storyboard.TargetProperty="Opacity" To="1" />
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Unchecked">
    										<Storyboard>
    											<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Snap_Off" Storyboard.TargetProperty="Opacity" To="1" />
    											<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Snap_On" Storyboard.TargetProperty="Opacity" To="0" />
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Indeterminate"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
                            
    							<Image x:Name="Snap_Off" Source="/webprintDesigner;component/Images/Snap_Off.png" Opacity="1"/>
    							<Image x:Name="Snap_On" Source="/webprintDesigner;component/Images/Snap_On.png" Opacity="0"/>
                            
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>

    		<Style TargetType="ToggleButton" x:Key="GuideToggleStyle">
    			<Setter Property="Cursor" Value="Hand"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="ToggleButton">

    						<Grid x:Name="RootElement">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CheckStates">
    									<VisualState x:Name="Checked">
    										<Storyboard>
    											<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Snap_Off" Storyboard.TargetProperty="Opacity" To="0" />
    											<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Snap_On" Storyboard.TargetProperty="Opacity" To="1" />
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Unchecked">
    										<Storyboard>
    											<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Snap_Off" Storyboard.TargetProperty="Opacity" To="1" />
    											<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Snap_On" Storyboard.TargetProperty="Opacity" To="0" />
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Indeterminate"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>

    							<Image x:Name="Snap_Off" Source="/webprintDesigner;component/Images/guides.png" Opacity="1"/>
    							<Image x:Name="Snap_On" Source="/webprintDesigner;component/Images/guides.png" Opacity="0"/>
                            
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="OrangeButton" TargetType="Button">
    			<Setter Property="Background" Value="#FF1F3B53"/>
    			<Setter Property="Foreground" Value="#FF000000"/>
    			<Setter Property="Padding" Value="3"/>
    			<Setter Property="BorderThickness" Value="1"/>
    			<Setter Property="BorderBrush">
    				<Setter.Value>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="#FFA3AEB9" Offset="0"/>
    						<GradientStop Color="#FF8399A9" Offset="0.375"/>
    						<GradientStop Color="#FF718597" Offset="0.375"/>
    						<GradientStop Color="#FF617584" Offset="1"/>
    					</LinearGradientBrush>
    				</Setter.Value>
    			</Setter>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="Button">
    						<Grid>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
    											<DoubleAnimation Duration="0" To="0.032" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="BackgroundGradient" d:IsOptimized="True"/>
        									
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed">
    										<Storyboard>
    											<ColorAnimation Duration="0" To="#FFFAAB1B" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
    											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
        									
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Disabled">
    										<Storyboard>
    											<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
    										</Storyboard>
    									</VisualState>
    								</VisualStateGroup>
    								<VisualStateGroup x:Name="FocusStates">
    									<VisualState x:Name="Focused">
    										<Storyboard>
    											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Unfocused"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Border x:Name="Background"  BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="15">
    								<Border.BorderBrush>
    									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    										<GradientStop Color="#FFFFE244"/>
    										<GradientStop Color="#FFFFE244" Offset="1"/>
    									</LinearGradientBrush>
    								</Border.BorderBrush>
    								<Grid Background="Transparent" Margin="0">
    									<Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
    									<Border x:Name="BackgroundGradient" CornerRadius="15">
    										<Border.Background>
    											<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
    												<GradientStop Color="#FFFFE244"/>
    												<GradientStop Color="#FFFAAB1B" Offset="1"/>
    											</LinearGradientBrush>
    										</Border.Background>
    									</Border>
    								</Grid>
    							</Border>
    							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:IsHidden="True"/>
    							<Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3" d:IsHidden="True"/>
    							<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FFFAAB1B" StrokeThickness="1" d:IsHidden="True"/>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>

            
            
        


    	</ResourceDictionary>
        


    </Application.Resources>
</Application>
