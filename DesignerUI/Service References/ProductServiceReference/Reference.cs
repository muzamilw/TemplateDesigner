//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace webprintDesigner.ProductServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchingSets", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class MatchingSets : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private System.Nullable<System.DateTime> CreationDateField;
        
        private System.Nullable<System.DateTime> LastUpdatedDtField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfMatchingSetCategories9Qry2uLN MatchingSetCategoriesField;
        
        private int MatchingSetIDField;
        
        private string MatchingSetNameField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplates9Qry2uLN TemplatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastUpdatedDt {
            get {
                return this.LastUpdatedDtField;
            }
            set {
                if ((this.LastUpdatedDtField.Equals(value) != true)) {
                    this.LastUpdatedDtField = value;
                    this.RaisePropertyChanged("LastUpdatedDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfMatchingSetCategories9Qry2uLN MatchingSetCategories {
            get {
                return this.MatchingSetCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchingSetCategoriesField, value) != true)) {
                    this.MatchingSetCategoriesField = value;
                    this.RaisePropertyChanged("MatchingSetCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatchingSetID {
            get {
                return this.MatchingSetIDField;
            }
            set {
                if ((this.MatchingSetIDField.Equals(value) != true)) {
                    this.MatchingSetIDField = value;
                    this.RaisePropertyChanged("MatchingSetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchingSetName {
            get {
                return this.MatchingSetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchingSetNameField, value) != true)) {
                    this.MatchingSetNameField = value;
                    this.RaisePropertyChanged("MatchingSetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplates9Qry2uLN Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectChangeTracker", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class ObjectChangeTracker : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ExtendedPropertiesDictionary ExtendedPropertiesField;
        
        private webprintDesigner.ProductServiceReference.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionPropertiesField;
        
        private webprintDesigner.ProductServiceReference.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionPropertiesField;
        
        private webprintDesigner.ProductServiceReference.OriginalValuesDictionary OriginalValuesField;
        
        private webprintDesigner.ProductServiceReference.ObjectState StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ExtendedPropertiesDictionary ExtendedProperties {
            get {
                return this.ExtendedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedPropertiesField, value) != true)) {
                    this.ExtendedPropertiesField = value;
                    this.RaisePropertyChanged("ExtendedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionProperties {
            get {
                return this.ObjectsAddedToCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsAddedToCollectionPropertiesField, value) != true)) {
                    this.ObjectsAddedToCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsAddedToCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionProperties {
            get {
                return this.ObjectsRemovedFromCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsRemovedFromCollectionPropertiesField, value) != true)) {
                    this.ObjectsRemovedFromCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsRemovedFromCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.OriginalValuesDictionary OriginalValues {
            get {
                return this.OriginalValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalValuesField, value) != true)) {
                    this.OriginalValuesField = value;
                    this.RaisePropertyChanged("OriginalValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfMatchingSetCategories9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="MatchingSetCategories")]
    public class TrackableCollectionOfMatchingSetCategories9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.MatchingSetCategories> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTemplates9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="Templates")]
    public class TrackableCollectionOfTemplates9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.Templates> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtendedPropertiesDictionary", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="ExtendedProperties", KeyName="Name", ValueName="ExtendedProperty")]
    public class ExtendedPropertiesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsAddedToCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="AddedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="AddedObjects")]
    public class ObjectsAddedToCollectionProperties : System.Collections.Generic.Dictionary<string, webprintDesigner.ProductServiceReference.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsRemovedFromCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="DeletedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="DeletedObjects")]
    public class ObjectsRemovedFromCollectionProperties : System.Collections.Generic.Dictionary<string, webprintDesigner.ProductServiceReference.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OriginalValuesDictionary", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="OriginalValues", KeyName="Name", ValueName="OriginalValue")]
    public class OriginalValuesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectState", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes")]
    public enum ObjectState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectList", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="ObjectValue")]
    public class ObjectList : System.Collections.ObjectModel.ObservableCollection<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchingSetCategories", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class MatchingSetCategories : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private System.Nullable<int> MatchingSetIDField;
        
        private webprintDesigner.ProductServiceReference.MatchingSets MatchingSetsField;
        
        private System.Nullable<int> ProductCategoryIDField;
        
        private webprintDesigner.ProductServiceReference.tbl_ProductCategory tbl_ProductCategoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MatchingSetID {
            get {
                return this.MatchingSetIDField;
            }
            set {
                if ((this.MatchingSetIDField.Equals(value) != true)) {
                    this.MatchingSetIDField = value;
                    this.RaisePropertyChanged("MatchingSetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.MatchingSets MatchingSets {
            get {
                return this.MatchingSetsField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchingSetsField, value) != true)) {
                    this.MatchingSetsField = value;
                    this.RaisePropertyChanged("MatchingSets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductCategoryID {
            get {
                return this.ProductCategoryIDField;
            }
            set {
                if ((this.ProductCategoryIDField.Equals(value) != true)) {
                    this.ProductCategoryIDField = value;
                    this.RaisePropertyChanged("ProductCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.tbl_ProductCategory tbl_ProductCategory {
            get {
                return this.tbl_ProductCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.tbl_ProductCategoryField, value) != true)) {
                    this.tbl_ProductCategoryField = value;
                    this.RaisePropertyChanged("tbl_ProductCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tbl_ProductCategory", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class tbl_ProductCategory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<bool> ApplyFoldLinesField;
        
        private System.Nullable<bool> ApplySizeRestrictionsField;
        
        private string CategoryNameField;
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private string ContentTypeField;
        
        private string Description1Field;
        
        private string Description2Field;
        
        private int DisplayOrderField;
        
        private System.Nullable<double> HeightRestrictionField;
        
        private string ImagePathField;
        
        private int LockedByField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfMatchingSetCategories9Qry2uLN MatchingSetCategoriesField;
        
        private System.Nullable<int> ParentCategoryIDField;
        
        private int ProductCategoryIDField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplates9Qry2uLN TemplatesField;
        
        private string ThumbnailPathField;
        
        private System.Nullable<double> WidthRestrictionField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOftbl_ProductCategory9Qry2uLN tbl_ProductCategory1Field;
        
        private webprintDesigner.ProductServiceReference.tbl_ProductCategory tbl_ProductCategory2Field;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOftbl_ProductCategoryFoldLines9Qry2uLN tbl_ProductCategoryFoldLinesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ApplyFoldLines {
            get {
                return this.ApplyFoldLinesField;
            }
            set {
                if ((this.ApplyFoldLinesField.Equals(value) != true)) {
                    this.ApplyFoldLinesField = value;
                    this.RaisePropertyChanged("ApplyFoldLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ApplySizeRestrictions {
            get {
                return this.ApplySizeRestrictionsField;
            }
            set {
                if ((this.ApplySizeRestrictionsField.Equals(value) != true)) {
                    this.ApplySizeRestrictionsField = value;
                    this.RaisePropertyChanged("ApplySizeRestrictions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description1 {
            get {
                return this.Description1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Description1Field, value) != true)) {
                    this.Description1Field = value;
                    this.RaisePropertyChanged("Description1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description2 {
            get {
                return this.Description2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Description2Field, value) != true)) {
                    this.Description2Field = value;
                    this.RaisePropertyChanged("Description2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> HeightRestriction {
            get {
                return this.HeightRestrictionField;
            }
            set {
                if ((this.HeightRestrictionField.Equals(value) != true)) {
                    this.HeightRestrictionField = value;
                    this.RaisePropertyChanged("HeightRestriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LockedBy {
            get {
                return this.LockedByField;
            }
            set {
                if ((this.LockedByField.Equals(value) != true)) {
                    this.LockedByField = value;
                    this.RaisePropertyChanged("LockedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfMatchingSetCategories9Qry2uLN MatchingSetCategories {
            get {
                return this.MatchingSetCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchingSetCategoriesField, value) != true)) {
                    this.MatchingSetCategoriesField = value;
                    this.RaisePropertyChanged("MatchingSetCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentCategoryID {
            get {
                return this.ParentCategoryIDField;
            }
            set {
                if ((this.ParentCategoryIDField.Equals(value) != true)) {
                    this.ParentCategoryIDField = value;
                    this.RaisePropertyChanged("ParentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductCategoryID {
            get {
                return this.ProductCategoryIDField;
            }
            set {
                if ((this.ProductCategoryIDField.Equals(value) != true)) {
                    this.ProductCategoryIDField = value;
                    this.RaisePropertyChanged("ProductCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplates9Qry2uLN Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbnailPath {
            get {
                return this.ThumbnailPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailPathField, value) != true)) {
                    this.ThumbnailPathField = value;
                    this.RaisePropertyChanged("ThumbnailPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> WidthRestriction {
            get {
                return this.WidthRestrictionField;
            }
            set {
                if ((this.WidthRestrictionField.Equals(value) != true)) {
                    this.WidthRestrictionField = value;
                    this.RaisePropertyChanged("WidthRestriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOftbl_ProductCategory9Qry2uLN tbl_ProductCategory1 {
            get {
                return this.tbl_ProductCategory1Field;
            }
            set {
                if ((object.ReferenceEquals(this.tbl_ProductCategory1Field, value) != true)) {
                    this.tbl_ProductCategory1Field = value;
                    this.RaisePropertyChanged("tbl_ProductCategory1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.tbl_ProductCategory tbl_ProductCategory2 {
            get {
                return this.tbl_ProductCategory2Field;
            }
            set {
                if ((object.ReferenceEquals(this.tbl_ProductCategory2Field, value) != true)) {
                    this.tbl_ProductCategory2Field = value;
                    this.RaisePropertyChanged("tbl_ProductCategory2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOftbl_ProductCategoryFoldLines9Qry2uLN tbl_ProductCategoryFoldLines {
            get {
                return this.tbl_ProductCategoryFoldLinesField;
            }
            set {
                if ((object.ReferenceEquals(this.tbl_ProductCategoryFoldLinesField, value) != true)) {
                    this.tbl_ProductCategoryFoldLinesField = value;
                    this.RaisePropertyChanged("tbl_ProductCategoryFoldLines");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOftbl_ProductCategory9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="tbl_ProductCategory")]
    public class TrackableCollectionOftbl_ProductCategory9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategory> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOftbl_ProductCategoryFoldLines9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="tbl_ProductCategoryFoldLines")]
    public class TrackableCollectionOftbl_ProductCategoryFoldLines9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategoryFoldLines> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Templates", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class Templates : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> ApprovalDateField;
        
        private System.Nullable<int> ApprovedByField;
        
        private string ApprovedByNameField;
        
        private System.Nullable<double> ArtworkMaxHeightField;
        
        private System.Nullable<double> ArtworkMaxSizeField;
        
        private System.Nullable<double> ArtworkMaxWidthField;
        
        private string BackgroundArtworkField;
        
        private System.Nullable<int> BaseColorIDField;
        
        private webprintDesigner.ProductServiceReference.BaseColors BaseColorsField;
        
        private System.Nullable<int> BgBField;
        
        private System.Nullable<int> BgGField;
        
        private System.Nullable<int> BgRField;
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private string CodeField;
        
        private System.Nullable<double> CuttingMarginField;
        
        private string DescriptionField;
        
        private string FullViewField;
        
        private byte[] FullViewByteField;
        
        private string ImageField;
        
        private System.Nullable<bool> IsDisabledField;
        
        private bool IsDoubleSideField;
        
        private System.Nullable<bool> IsMultiPageField;
        
        private System.Nullable<bool> IsNotUseDesignerField;
        
        private System.Nullable<bool> IsPrePrintField;
        
        private System.Nullable<bool> IsRequiredArtworkField;
        
        private System.Nullable<bool> IsUseBackGroundColorField;
        
        private bool IsUsePDFFileField;
        
        private System.Nullable<bool> IsUseSide2BackGroundColorField;
        
        private string LowResPDFTemplatesField;
        
        private System.Nullable<int> MPCRatingField;
        
        private System.Nullable<int> MatchingSetIDField;
        
        private string MatchingSetThemeField;
        
        private webprintDesigner.ProductServiceReference.MatchingSets MatchingSetsField;
        
        private System.Nullable<int> MinimumPagesField;
        
        private System.Nullable<int> OrientationField;
        
        private string PDFTemplateField;
        
        private System.Nullable<double> PDFTemplateHeightField;
        
        private System.Nullable<double> PDFTemplateWidthField;
        
        private System.Nullable<int> PTempIdField;
        
        private string PrePrintPDFTemplatesField;
        
        private System.Nullable<int> ProductCategoryIDField;
        
        private int ProductIDField;
        
        private string ProductNameField;
        
        private string RejectionReasonField;
        
        private string SLThumbnailField;
        
        private byte[] SLThumbnaillByteField;
        
        private string Side2BackgroundArtworkField;
        
        private System.Nullable<int> Side2BgBField;
        
        private System.Nullable<int> Side2BgGField;
        
        private System.Nullable<int> Side2BgRField;
        
        private string Side2LowResPDFTemplatesField;
        
        private string Side2PDFTemplateField;
        
        private string Side2PrePrintPDFTemplatesField;
        
        private System.Nullable<int> StatusField;
        
        private System.Nullable<System.DateTime> SubmitDateField;
        
        private System.Nullable<int> SubmittedByField;
        
        private string SubmittedByNameField;
        
        private string SuperViewField;
        
        private byte[] SuperViewByteField;
        
        private string TempStringField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateBackgroundImages9Qry2uLN TemplateBackgroundImagesField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateColorStyles9Qry2uLN TemplateColorStylesField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateFontStyles9Qry2uLN TemplateFontStylesField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateFonts9Qry2uLN TemplateFontsField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateIndustryTags9Qry2uLN TemplateIndustryTagsField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateKeywords9Qry2uLN TemplateKeywordsField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateObjects9Qry2uLN TemplateObjectsField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateSide2Templates9Qry2uLN TemplateSide2TemplatesField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateSide2Templates9Qry2uLN TemplateSide2Templates1Field;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateThemeTags9Qry2uLN TemplateThemeTagsField;
        
        private string ThumbnailField;
        
        private System.Nullable<int> TotelPageField;
        
        private System.Nullable<int> TypeField;
        
        private System.Nullable<int> UsedCountField;
        
        private System.Nullable<int> UserRatingField;
        
        private webprintDesigner.ProductServiceReference.tbl_ProductCategory tbl_ProductCategoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApprovalDate {
            get {
                return this.ApprovalDateField;
            }
            set {
                if ((this.ApprovalDateField.Equals(value) != true)) {
                    this.ApprovalDateField = value;
                    this.RaisePropertyChanged("ApprovalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApprovedBy {
            get {
                return this.ApprovedByField;
            }
            set {
                if ((this.ApprovedByField.Equals(value) != true)) {
                    this.ApprovedByField = value;
                    this.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovedByName {
            get {
                return this.ApprovedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedByNameField, value) != true)) {
                    this.ApprovedByNameField = value;
                    this.RaisePropertyChanged("ApprovedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ArtworkMaxHeight {
            get {
                return this.ArtworkMaxHeightField;
            }
            set {
                if ((this.ArtworkMaxHeightField.Equals(value) != true)) {
                    this.ArtworkMaxHeightField = value;
                    this.RaisePropertyChanged("ArtworkMaxHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ArtworkMaxSize {
            get {
                return this.ArtworkMaxSizeField;
            }
            set {
                if ((this.ArtworkMaxSizeField.Equals(value) != true)) {
                    this.ArtworkMaxSizeField = value;
                    this.RaisePropertyChanged("ArtworkMaxSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ArtworkMaxWidth {
            get {
                return this.ArtworkMaxWidthField;
            }
            set {
                if ((this.ArtworkMaxWidthField.Equals(value) != true)) {
                    this.ArtworkMaxWidthField = value;
                    this.RaisePropertyChanged("ArtworkMaxWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundArtwork {
            get {
                return this.BackgroundArtworkField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundArtworkField, value) != true)) {
                    this.BackgroundArtworkField = value;
                    this.RaisePropertyChanged("BackgroundArtwork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BaseColorID {
            get {
                return this.BaseColorIDField;
            }
            set {
                if ((this.BaseColorIDField.Equals(value) != true)) {
                    this.BaseColorIDField = value;
                    this.RaisePropertyChanged("BaseColorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.BaseColors BaseColors {
            get {
                return this.BaseColorsField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseColorsField, value) != true)) {
                    this.BaseColorsField = value;
                    this.RaisePropertyChanged("BaseColors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BgB {
            get {
                return this.BgBField;
            }
            set {
                if ((this.BgBField.Equals(value) != true)) {
                    this.BgBField = value;
                    this.RaisePropertyChanged("BgB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BgG {
            get {
                return this.BgGField;
            }
            set {
                if ((this.BgGField.Equals(value) != true)) {
                    this.BgGField = value;
                    this.RaisePropertyChanged("BgG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BgR {
            get {
                return this.BgRField;
            }
            set {
                if ((this.BgRField.Equals(value) != true)) {
                    this.BgRField = value;
                    this.RaisePropertyChanged("BgR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CuttingMargin {
            get {
                return this.CuttingMarginField;
            }
            set {
                if ((this.CuttingMarginField.Equals(value) != true)) {
                    this.CuttingMarginField = value;
                    this.RaisePropertyChanged("CuttingMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullView {
            get {
                return this.FullViewField;
            }
            set {
                if ((object.ReferenceEquals(this.FullViewField, value) != true)) {
                    this.FullViewField = value;
                    this.RaisePropertyChanged("FullView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FullViewByte {
            get {
                return this.FullViewByteField;
            }
            set {
                if ((object.ReferenceEquals(this.FullViewByteField, value) != true)) {
                    this.FullViewByteField = value;
                    this.RaisePropertyChanged("FullViewByte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDisabled {
            get {
                return this.IsDisabledField;
            }
            set {
                if ((this.IsDisabledField.Equals(value) != true)) {
                    this.IsDisabledField = value;
                    this.RaisePropertyChanged("IsDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDoubleSide {
            get {
                return this.IsDoubleSideField;
            }
            set {
                if ((this.IsDoubleSideField.Equals(value) != true)) {
                    this.IsDoubleSideField = value;
                    this.RaisePropertyChanged("IsDoubleSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsMultiPage {
            get {
                return this.IsMultiPageField;
            }
            set {
                if ((this.IsMultiPageField.Equals(value) != true)) {
                    this.IsMultiPageField = value;
                    this.RaisePropertyChanged("IsMultiPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsNotUseDesigner {
            get {
                return this.IsNotUseDesignerField;
            }
            set {
                if ((this.IsNotUseDesignerField.Equals(value) != true)) {
                    this.IsNotUseDesignerField = value;
                    this.RaisePropertyChanged("IsNotUseDesigner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPrePrint {
            get {
                return this.IsPrePrintField;
            }
            set {
                if ((this.IsPrePrintField.Equals(value) != true)) {
                    this.IsPrePrintField = value;
                    this.RaisePropertyChanged("IsPrePrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsRequiredArtwork {
            get {
                return this.IsRequiredArtworkField;
            }
            set {
                if ((this.IsRequiredArtworkField.Equals(value) != true)) {
                    this.IsRequiredArtworkField = value;
                    this.RaisePropertyChanged("IsRequiredArtwork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsUseBackGroundColor {
            get {
                return this.IsUseBackGroundColorField;
            }
            set {
                if ((this.IsUseBackGroundColorField.Equals(value) != true)) {
                    this.IsUseBackGroundColorField = value;
                    this.RaisePropertyChanged("IsUseBackGroundColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUsePDFFile {
            get {
                return this.IsUsePDFFileField;
            }
            set {
                if ((this.IsUsePDFFileField.Equals(value) != true)) {
                    this.IsUsePDFFileField = value;
                    this.RaisePropertyChanged("IsUsePDFFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsUseSide2BackGroundColor {
            get {
                return this.IsUseSide2BackGroundColorField;
            }
            set {
                if ((this.IsUseSide2BackGroundColorField.Equals(value) != true)) {
                    this.IsUseSide2BackGroundColorField = value;
                    this.RaisePropertyChanged("IsUseSide2BackGroundColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LowResPDFTemplates {
            get {
                return this.LowResPDFTemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.LowResPDFTemplatesField, value) != true)) {
                    this.LowResPDFTemplatesField = value;
                    this.RaisePropertyChanged("LowResPDFTemplates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MPCRating {
            get {
                return this.MPCRatingField;
            }
            set {
                if ((this.MPCRatingField.Equals(value) != true)) {
                    this.MPCRatingField = value;
                    this.RaisePropertyChanged("MPCRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MatchingSetID {
            get {
                return this.MatchingSetIDField;
            }
            set {
                if ((this.MatchingSetIDField.Equals(value) != true)) {
                    this.MatchingSetIDField = value;
                    this.RaisePropertyChanged("MatchingSetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchingSetTheme {
            get {
                return this.MatchingSetThemeField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchingSetThemeField, value) != true)) {
                    this.MatchingSetThemeField = value;
                    this.RaisePropertyChanged("MatchingSetTheme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.MatchingSets MatchingSets {
            get {
                return this.MatchingSetsField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchingSetsField, value) != true)) {
                    this.MatchingSetsField = value;
                    this.RaisePropertyChanged("MatchingSets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MinimumPages {
            get {
                return this.MinimumPagesField;
            }
            set {
                if ((this.MinimumPagesField.Equals(value) != true)) {
                    this.MinimumPagesField = value;
                    this.RaisePropertyChanged("MinimumPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Orientation {
            get {
                return this.OrientationField;
            }
            set {
                if ((this.OrientationField.Equals(value) != true)) {
                    this.OrientationField = value;
                    this.RaisePropertyChanged("Orientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDFTemplate {
            get {
                return this.PDFTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFTemplateField, value) != true)) {
                    this.PDFTemplateField = value;
                    this.RaisePropertyChanged("PDFTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PDFTemplateHeight {
            get {
                return this.PDFTemplateHeightField;
            }
            set {
                if ((this.PDFTemplateHeightField.Equals(value) != true)) {
                    this.PDFTemplateHeightField = value;
                    this.RaisePropertyChanged("PDFTemplateHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PDFTemplateWidth {
            get {
                return this.PDFTemplateWidthField;
            }
            set {
                if ((this.PDFTemplateWidthField.Equals(value) != true)) {
                    this.PDFTemplateWidthField = value;
                    this.RaisePropertyChanged("PDFTemplateWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PTempId {
            get {
                return this.PTempIdField;
            }
            set {
                if ((this.PTempIdField.Equals(value) != true)) {
                    this.PTempIdField = value;
                    this.RaisePropertyChanged("PTempId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrePrintPDFTemplates {
            get {
                return this.PrePrintPDFTemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.PrePrintPDFTemplatesField, value) != true)) {
                    this.PrePrintPDFTemplatesField = value;
                    this.RaisePropertyChanged("PrePrintPDFTemplates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductCategoryID {
            get {
                return this.ProductCategoryIDField;
            }
            set {
                if ((this.ProductCategoryIDField.Equals(value) != true)) {
                    this.ProductCategoryIDField = value;
                    this.RaisePropertyChanged("ProductCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RejectionReason {
            get {
                return this.RejectionReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.RejectionReasonField, value) != true)) {
                    this.RejectionReasonField = value;
                    this.RaisePropertyChanged("RejectionReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SLThumbnail {
            get {
                return this.SLThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.SLThumbnailField, value) != true)) {
                    this.SLThumbnailField = value;
                    this.RaisePropertyChanged("SLThumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SLThumbnaillByte {
            get {
                return this.SLThumbnaillByteField;
            }
            set {
                if ((object.ReferenceEquals(this.SLThumbnaillByteField, value) != true)) {
                    this.SLThumbnaillByteField = value;
                    this.RaisePropertyChanged("SLThumbnaillByte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Side2BackgroundArtwork {
            get {
                return this.Side2BackgroundArtworkField;
            }
            set {
                if ((object.ReferenceEquals(this.Side2BackgroundArtworkField, value) != true)) {
                    this.Side2BackgroundArtworkField = value;
                    this.RaisePropertyChanged("Side2BackgroundArtwork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Side2BgB {
            get {
                return this.Side2BgBField;
            }
            set {
                if ((this.Side2BgBField.Equals(value) != true)) {
                    this.Side2BgBField = value;
                    this.RaisePropertyChanged("Side2BgB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Side2BgG {
            get {
                return this.Side2BgGField;
            }
            set {
                if ((this.Side2BgGField.Equals(value) != true)) {
                    this.Side2BgGField = value;
                    this.RaisePropertyChanged("Side2BgG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Side2BgR {
            get {
                return this.Side2BgRField;
            }
            set {
                if ((this.Side2BgRField.Equals(value) != true)) {
                    this.Side2BgRField = value;
                    this.RaisePropertyChanged("Side2BgR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Side2LowResPDFTemplates {
            get {
                return this.Side2LowResPDFTemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.Side2LowResPDFTemplatesField, value) != true)) {
                    this.Side2LowResPDFTemplatesField = value;
                    this.RaisePropertyChanged("Side2LowResPDFTemplates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Side2PDFTemplate {
            get {
                return this.Side2PDFTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.Side2PDFTemplateField, value) != true)) {
                    this.Side2PDFTemplateField = value;
                    this.RaisePropertyChanged("Side2PDFTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Side2PrePrintPDFTemplates {
            get {
                return this.Side2PrePrintPDFTemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.Side2PrePrintPDFTemplatesField, value) != true)) {
                    this.Side2PrePrintPDFTemplatesField = value;
                    this.RaisePropertyChanged("Side2PrePrintPDFTemplates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SubmitDate {
            get {
                return this.SubmitDateField;
            }
            set {
                if ((this.SubmitDateField.Equals(value) != true)) {
                    this.SubmitDateField = value;
                    this.RaisePropertyChanged("SubmitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubmittedBy {
            get {
                return this.SubmittedByField;
            }
            set {
                if ((this.SubmittedByField.Equals(value) != true)) {
                    this.SubmittedByField = value;
                    this.RaisePropertyChanged("SubmittedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubmittedByName {
            get {
                return this.SubmittedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmittedByNameField, value) != true)) {
                    this.SubmittedByNameField = value;
                    this.RaisePropertyChanged("SubmittedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuperView {
            get {
                return this.SuperViewField;
            }
            set {
                if ((object.ReferenceEquals(this.SuperViewField, value) != true)) {
                    this.SuperViewField = value;
                    this.RaisePropertyChanged("SuperView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SuperViewByte {
            get {
                return this.SuperViewByteField;
            }
            set {
                if ((object.ReferenceEquals(this.SuperViewByteField, value) != true)) {
                    this.SuperViewByteField = value;
                    this.RaisePropertyChanged("SuperViewByte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempString {
            get {
                return this.TempStringField;
            }
            set {
                if ((object.ReferenceEquals(this.TempStringField, value) != true)) {
                    this.TempStringField = value;
                    this.RaisePropertyChanged("TempString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateBackgroundImages9Qry2uLN TemplateBackgroundImages {
            get {
                return this.TemplateBackgroundImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateBackgroundImagesField, value) != true)) {
                    this.TemplateBackgroundImagesField = value;
                    this.RaisePropertyChanged("TemplateBackgroundImages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateColorStyles9Qry2uLN TemplateColorStyles {
            get {
                return this.TemplateColorStylesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateColorStylesField, value) != true)) {
                    this.TemplateColorStylesField = value;
                    this.RaisePropertyChanged("TemplateColorStyles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateFontStyles9Qry2uLN TemplateFontStyles {
            get {
                return this.TemplateFontStylesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateFontStylesField, value) != true)) {
                    this.TemplateFontStylesField = value;
                    this.RaisePropertyChanged("TemplateFontStyles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateFonts9Qry2uLN TemplateFonts {
            get {
                return this.TemplateFontsField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateFontsField, value) != true)) {
                    this.TemplateFontsField = value;
                    this.RaisePropertyChanged("TemplateFonts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateIndustryTags9Qry2uLN TemplateIndustryTags {
            get {
                return this.TemplateIndustryTagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateIndustryTagsField, value) != true)) {
                    this.TemplateIndustryTagsField = value;
                    this.RaisePropertyChanged("TemplateIndustryTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateKeywords9Qry2uLN TemplateKeywords {
            get {
                return this.TemplateKeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateKeywordsField, value) != true)) {
                    this.TemplateKeywordsField = value;
                    this.RaisePropertyChanged("TemplateKeywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateObjects9Qry2uLN TemplateObjects {
            get {
                return this.TemplateObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateObjectsField, value) != true)) {
                    this.TemplateObjectsField = value;
                    this.RaisePropertyChanged("TemplateObjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateSide2Templates9Qry2uLN TemplateSide2Templates {
            get {
                return this.TemplateSide2TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateSide2TemplatesField, value) != true)) {
                    this.TemplateSide2TemplatesField = value;
                    this.RaisePropertyChanged("TemplateSide2Templates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateSide2Templates9Qry2uLN TemplateSide2Templates1 {
            get {
                return this.TemplateSide2Templates1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateSide2Templates1Field, value) != true)) {
                    this.TemplateSide2Templates1Field = value;
                    this.RaisePropertyChanged("TemplateSide2Templates1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateThemeTags9Qry2uLN TemplateThemeTags {
            get {
                return this.TemplateThemeTagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateThemeTagsField, value) != true)) {
                    this.TemplateThemeTagsField = value;
                    this.RaisePropertyChanged("TemplateThemeTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotelPage {
            get {
                return this.TotelPageField;
            }
            set {
                if ((this.TotelPageField.Equals(value) != true)) {
                    this.TotelPageField = value;
                    this.RaisePropertyChanged("TotelPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UsedCount {
            get {
                return this.UsedCountField;
            }
            set {
                if ((this.UsedCountField.Equals(value) != true)) {
                    this.UsedCountField = value;
                    this.RaisePropertyChanged("UsedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserRating {
            get {
                return this.UserRatingField;
            }
            set {
                if ((this.UserRatingField.Equals(value) != true)) {
                    this.UserRatingField = value;
                    this.RaisePropertyChanged("UserRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.tbl_ProductCategory tbl_ProductCategory {
            get {
                return this.tbl_ProductCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.tbl_ProductCategoryField, value) != true)) {
                    this.tbl_ProductCategoryField = value;
                    this.RaisePropertyChanged("tbl_ProductCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseColors", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class BaseColors : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BaseColorIDField;
        
        private string CMYKField;
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private string ColorField;
        
        private string HEXField;
        
        private string RGBField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplates9Qry2uLN TemplatesField;
        
        private System.Nullable<int> typeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BaseColorID {
            get {
                return this.BaseColorIDField;
            }
            set {
                if ((this.BaseColorIDField.Equals(value) != true)) {
                    this.BaseColorIDField = value;
                    this.RaisePropertyChanged("BaseColorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMYK {
            get {
                return this.CMYKField;
            }
            set {
                if ((object.ReferenceEquals(this.CMYKField, value) != true)) {
                    this.CMYKField = value;
                    this.RaisePropertyChanged("CMYK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HEX {
            get {
                return this.HEXField;
            }
            set {
                if ((object.ReferenceEquals(this.HEXField, value) != true)) {
                    this.HEXField = value;
                    this.RaisePropertyChanged("HEX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RGB {
            get {
                return this.RGBField;
            }
            set {
                if ((object.ReferenceEquals(this.RGBField, value) != true)) {
                    this.RGBField = value;
                    this.RaisePropertyChanged("RGB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplates9Qry2uLN Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTemplateBackgroundImages9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="TemplateBackgroundImages")]
    public class TrackableCollectionOfTemplateBackgroundImages9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateBackgroundImages> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTemplateColorStyles9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="TemplateColorStyles")]
    public class TrackableCollectionOfTemplateColorStyles9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateColorStyles> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTemplateFontStyles9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="TemplateFontStyles")]
    public class TrackableCollectionOfTemplateFontStyles9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateFontStyles> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTemplateFonts9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="TemplateFonts")]
    public class TrackableCollectionOfTemplateFonts9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateFonts> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTemplateIndustryTags9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="TemplateIndustryTags")]
    public class TrackableCollectionOfTemplateIndustryTags9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateIndustryTags> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTemplateKeywords9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="TemplateKeywords")]
    public class TrackableCollectionOfTemplateKeywords9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateKeywords> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTemplateObjects9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="TemplateObjects")]
    public class TrackableCollectionOfTemplateObjects9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTemplateSide2Templates9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="TemplateSide2Templates")]
    public class TrackableCollectionOfTemplateSide2Templates9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateSide2Templates> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTemplateThemeTags9Qry2uLN", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", ItemName="TemplateThemeTags")]
    public class TrackableCollectionOfTemplateThemeTags9Qry2uLN : System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateThemeTags> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateBackgroundImages", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class TemplateBackgroundImages : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BackgroundImageAbsolutePathField;
        
        private string BackgroundImageRelativePathField;
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private System.Nullable<int> ImageHeightField;
        
        private string ImageNameField;
        
        private System.Nullable<int> ImageTypeField;
        
        private System.Nullable<int> ImageWidthField;
        
        private string NameField;
        
        private System.Nullable<int> ProductIDField;
        
        private webprintDesigner.ProductServiceReference.Templates TemplatesField;
        
        private System.Nullable<bool> flgCoverField;
        
        private System.Nullable<bool> flgPhotobookField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundImageAbsolutePath {
            get {
                return this.BackgroundImageAbsolutePathField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundImageAbsolutePathField, value) != true)) {
                    this.BackgroundImageAbsolutePathField = value;
                    this.RaisePropertyChanged("BackgroundImageAbsolutePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundImageRelativePath {
            get {
                return this.BackgroundImageRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundImageRelativePathField, value) != true)) {
                    this.BackgroundImageRelativePathField = value;
                    this.RaisePropertyChanged("BackgroundImageRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ImageHeight {
            get {
                return this.ImageHeightField;
            }
            set {
                if ((this.ImageHeightField.Equals(value) != true)) {
                    this.ImageHeightField = value;
                    this.RaisePropertyChanged("ImageHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName {
            get {
                return this.ImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNameField, value) != true)) {
                    this.ImageNameField = value;
                    this.RaisePropertyChanged("ImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ImageType {
            get {
                return this.ImageTypeField;
            }
            set {
                if ((this.ImageTypeField.Equals(value) != true)) {
                    this.ImageTypeField = value;
                    this.RaisePropertyChanged("ImageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ImageWidth {
            get {
                return this.ImageWidthField;
            }
            set {
                if ((this.ImageWidthField.Equals(value) != true)) {
                    this.ImageWidthField = value;
                    this.RaisePropertyChanged("ImageWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Templates Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> flgCover {
            get {
                return this.flgCoverField;
            }
            set {
                if ((this.flgCoverField.Equals(value) != true)) {
                    this.flgCoverField = value;
                    this.RaisePropertyChanged("flgCover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> flgPhotobook {
            get {
                return this.flgPhotobookField;
            }
            set {
                if ((this.flgPhotobookField.Equals(value) != true)) {
                    this.flgPhotobookField = value;
                    this.RaisePropertyChanged("flgPhotobook");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateColorStyles", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class TemplateColorStyles : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private System.Nullable<int> ColorCField;
        
        private string ColorHexField;
        
        private System.Nullable<int> ColorKField;
        
        private System.Nullable<int> ColorMField;
        
        private System.Nullable<int> ColorYField;
        
        private System.Nullable<int> Field1Field;
        
        private System.Nullable<bool> IsSpotColorField;
        
        private string NameField;
        
        private int PelleteIDField;
        
        private System.Nullable<int> ProductIDField;
        
        private string SpotColorField;
        
        private webprintDesigner.ProductServiceReference.Templates TemplatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ColorC {
            get {
                return this.ColorCField;
            }
            set {
                if ((this.ColorCField.Equals(value) != true)) {
                    this.ColorCField = value;
                    this.RaisePropertyChanged("ColorC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorHex {
            get {
                return this.ColorHexField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorHexField, value) != true)) {
                    this.ColorHexField = value;
                    this.RaisePropertyChanged("ColorHex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ColorK {
            get {
                return this.ColorKField;
            }
            set {
                if ((this.ColorKField.Equals(value) != true)) {
                    this.ColorKField = value;
                    this.RaisePropertyChanged("ColorK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ColorM {
            get {
                return this.ColorMField;
            }
            set {
                if ((this.ColorMField.Equals(value) != true)) {
                    this.ColorMField = value;
                    this.RaisePropertyChanged("ColorM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ColorY {
            get {
                return this.ColorYField;
            }
            set {
                if ((this.ColorYField.Equals(value) != true)) {
                    this.ColorYField = value;
                    this.RaisePropertyChanged("ColorY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Field1 {
            get {
                return this.Field1Field;
            }
            set {
                if ((this.Field1Field.Equals(value) != true)) {
                    this.Field1Field = value;
                    this.RaisePropertyChanged("Field1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsSpotColor {
            get {
                return this.IsSpotColorField;
            }
            set {
                if ((this.IsSpotColorField.Equals(value) != true)) {
                    this.IsSpotColorField = value;
                    this.RaisePropertyChanged("IsSpotColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PelleteID {
            get {
                return this.PelleteIDField;
            }
            set {
                if ((this.PelleteIDField.Equals(value) != true)) {
                    this.PelleteIDField = value;
                    this.RaisePropertyChanged("PelleteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotColor {
            get {
                return this.SpotColorField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotColorField, value) != true)) {
                    this.SpotColorField = value;
                    this.RaisePropertyChanged("SpotColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Templates Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateFontStyles", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class TemplateFontStyles : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AllignmentField;
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private int ColorPelleteIDField;
        
        private string FontNameField;
        
        private int FontStyleIDField;
        
        private double IndentField;
        
        private bool IsAllCapitalField;
        
        private bool IsPrivateFontNameField;
        
        private bool IsUnderlinedField;
        
        private string NameField;
        
        private int ProductIDField;
        
        private double SizeField;
        
        private webprintDesigner.ProductServiceReference.Templates TemplatesField;
        
        private int TheadingUnitField;
        
        private double TheadingValueField;
        
        private string TrackingDirectiveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Allignment {
            get {
                return this.AllignmentField;
            }
            set {
                if ((this.AllignmentField.Equals(value) != true)) {
                    this.AllignmentField = value;
                    this.RaisePropertyChanged("Allignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorPelleteID {
            get {
                return this.ColorPelleteIDField;
            }
            set {
                if ((this.ColorPelleteIDField.Equals(value) != true)) {
                    this.ColorPelleteIDField = value;
                    this.RaisePropertyChanged("ColorPelleteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontName {
            get {
                return this.FontNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FontNameField, value) != true)) {
                    this.FontNameField = value;
                    this.RaisePropertyChanged("FontName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FontStyleID {
            get {
                return this.FontStyleIDField;
            }
            set {
                if ((this.FontStyleIDField.Equals(value) != true)) {
                    this.FontStyleIDField = value;
                    this.RaisePropertyChanged("FontStyleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Indent {
            get {
                return this.IndentField;
            }
            set {
                if ((this.IndentField.Equals(value) != true)) {
                    this.IndentField = value;
                    this.RaisePropertyChanged("Indent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAllCapital {
            get {
                return this.IsAllCapitalField;
            }
            set {
                if ((this.IsAllCapitalField.Equals(value) != true)) {
                    this.IsAllCapitalField = value;
                    this.RaisePropertyChanged("IsAllCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrivateFontName {
            get {
                return this.IsPrivateFontNameField;
            }
            set {
                if ((this.IsPrivateFontNameField.Equals(value) != true)) {
                    this.IsPrivateFontNameField = value;
                    this.RaisePropertyChanged("IsPrivateFontName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUnderlined {
            get {
                return this.IsUnderlinedField;
            }
            set {
                if ((this.IsUnderlinedField.Equals(value) != true)) {
                    this.IsUnderlinedField = value;
                    this.RaisePropertyChanged("IsUnderlined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Templates Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TheadingUnit {
            get {
                return this.TheadingUnitField;
            }
            set {
                if ((this.TheadingUnitField.Equals(value) != true)) {
                    this.TheadingUnitField = value;
                    this.RaisePropertyChanged("TheadingUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TheadingValue {
            get {
                return this.TheadingValueField;
            }
            set {
                if ((this.TheadingValueField.Equals(value) != true)) {
                    this.TheadingValueField = value;
                    this.RaisePropertyChanged("TheadingValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingDirective {
            get {
                return this.TrackingDirectiveField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingDirectiveField, value) != true)) {
                    this.TrackingDirectiveField = value;
                    this.RaisePropertyChanged("TrackingDirective");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateFonts", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class TemplateFonts : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private System.Nullable<int> DisplayIndexField;
        
        private byte[] FontBytesField;
        
        private string FontDisplayNameField;
        
        private string FontFileField;
        
        private string FontNameField;
        
        private System.Nullable<bool> IsEnableField;
        
        private bool IsPrivateFontField;
        
        private int ProductFontIdField;
        
        private System.Nullable<int> ProductIdField;
        
        private webprintDesigner.ProductServiceReference.Templates TemplatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DisplayIndex {
            get {
                return this.DisplayIndexField;
            }
            set {
                if ((this.DisplayIndexField.Equals(value) != true)) {
                    this.DisplayIndexField = value;
                    this.RaisePropertyChanged("DisplayIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FontBytes {
            get {
                return this.FontBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FontBytesField, value) != true)) {
                    this.FontBytesField = value;
                    this.RaisePropertyChanged("FontBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontDisplayName {
            get {
                return this.FontDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FontDisplayNameField, value) != true)) {
                    this.FontDisplayNameField = value;
                    this.RaisePropertyChanged("FontDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontFile {
            get {
                return this.FontFileField;
            }
            set {
                if ((object.ReferenceEquals(this.FontFileField, value) != true)) {
                    this.FontFileField = value;
                    this.RaisePropertyChanged("FontFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontName {
            get {
                return this.FontNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FontNameField, value) != true)) {
                    this.FontNameField = value;
                    this.RaisePropertyChanged("FontName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrivateFont {
            get {
                return this.IsPrivateFontField;
            }
            set {
                if ((this.IsPrivateFontField.Equals(value) != true)) {
                    this.IsPrivateFontField = value;
                    this.RaisePropertyChanged("IsPrivateFont");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductFontId {
            get {
                return this.ProductFontIdField;
            }
            set {
                if ((this.ProductFontIdField.Equals(value) != true)) {
                    this.ProductFontIdField = value;
                    this.RaisePropertyChanged("ProductFontId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Templates Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateIndustryTags", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class TemplateIndustryTags : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private System.Nullable<int> ProductIDField;
        
        private System.Nullable<int> TagIDField;
        
        private webprintDesigner.ProductServiceReference.Tags TagsField;
        
        private int TemplateIndustryTagIDField;
        
        private webprintDesigner.ProductServiceReference.Templates TemplatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Tags Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateIndustryTagID {
            get {
                return this.TemplateIndustryTagIDField;
            }
            set {
                if ((this.TemplateIndustryTagIDField.Equals(value) != true)) {
                    this.TemplateIndustryTagIDField = value;
                    this.RaisePropertyChanged("TemplateIndustryTagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Templates Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tags", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class Tags : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private string DescriptionField;
        
        private int TagIDField;
        
        private string TagNameField;
        
        private string TagSlugField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateIndustryTags9Qry2uLN TemplateIndustryTagsField;
        
        private webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateThemeTags9Qry2uLN TemplateThemeTagsField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagSlug {
            get {
                return this.TagSlugField;
            }
            set {
                if ((object.ReferenceEquals(this.TagSlugField, value) != true)) {
                    this.TagSlugField = value;
                    this.RaisePropertyChanged("TagSlug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateIndustryTags9Qry2uLN TemplateIndustryTags {
            get {
                return this.TemplateIndustryTagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateIndustryTagsField, value) != true)) {
                    this.TemplateIndustryTagsField = value;
                    this.RaisePropertyChanged("TemplateIndustryTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.TrackableCollectionOfTemplateThemeTags9Qry2uLN TemplateThemeTags {
            get {
                return this.TemplateThemeTagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateThemeTagsField, value) != true)) {
                    this.TemplateThemeTagsField = value;
                    this.RaisePropertyChanged("TemplateThemeTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateThemeTags", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class TemplateThemeTags : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private System.Nullable<int> ProductIDField;
        
        private System.Nullable<int> TagIDField;
        
        private webprintDesigner.ProductServiceReference.Tags TagsField;
        
        private int TemplateThemeTagIDField;
        
        private webprintDesigner.ProductServiceReference.Templates TemplatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Tags Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateThemeTagID {
            get {
                return this.TemplateThemeTagIDField;
            }
            set {
                if ((this.TemplateThemeTagIDField.Equals(value) != true)) {
                    this.TemplateThemeTagIDField = value;
                    this.RaisePropertyChanged("TemplateThemeTagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Templates Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateKeywords", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class TemplateKeywords : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private string KeywordField;
        
        private int KeywordIDField;
        
        private System.Nullable<int> ProductIDField;
        
        private webprintDesigner.ProductServiceReference.Templates TemplatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KeywordID {
            get {
                return this.KeywordIDField;
            }
            set {
                if ((this.KeywordIDField.Equals(value) != true)) {
                    this.KeywordIDField = value;
                    this.RaisePropertyChanged("KeywordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Templates Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateObjects", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class TemplateObjects : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AllignmentField;
        
        private int BColorField;
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private int ColorCField;
        
        private string ColorHexField;
        
        private int ColorKField;
        
        private int ColorMField;
        
        private string ColorNameField;
        
        private int ColorStyleIDField;
        
        private int ColorTypeField;
        
        private int ColorYField;
        
        private int ContentCaseTypeField;
        
        private string ContentStringField;
        
        private int DisplayOrderPdfField;
        
        private int DisplayOrderTxtControlField;
        
        private string ExField1Field;
        
        private string ExField2Field;
        
        private string FontNameField;
        
        private double FontSizeField;
        
        private int FontStyleIDField;
        
        private int GColorField;
        
        private double IndentField;
        
        private bool IsBoldField;
        
        private bool IsEditableField;
        
        private bool IsFontCustomField;
        
        private bool IsFontNamePrivateField;
        
        private bool IsHiddenField;
        
        private bool IsItalicField;
        
        private bool IsMandatoryField;
        
        private bool IsNewLineField;
        
        private System.Nullable<bool> IsPositionLockedField;
        
        private bool IsRequireNumericValueField;
        
        private bool IsSpotColorField;
        
        private bool IsUnderlinedTextField;
        
        private double LineSpacingField;
        
        private double MaxCharactersField;
        
        private double MaxHeightField;
        
        private double MaxWidthField;
        
        private string NameField;
        
        private int ObjectIDField;
        
        private int ObjectTypeField;
        
        private double OffsetXField;
        
        private double OffsetYField;
        
        private int PageNoField;
        
        private int PalleteIDField;
        
        private int ParentIdField;
        
        private double PositionXField;
        
        private double PositionYField;
        
        private int ProductIDField;
        
        private int ProductPageIdField;
        
        private int RColorField;
        
        private double RotationAngleField;
        
        private string SpotColorNameField;
        
        private string TCtlNameField;
        
        private webprintDesigner.ProductServiceReference.Templates TemplatesField;
        
        private int TintField;
        
        private int VAllignmentField;
        
        private bool isSide2ObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Allignment {
            get {
                return this.AllignmentField;
            }
            set {
                if ((this.AllignmentField.Equals(value) != true)) {
                    this.AllignmentField = value;
                    this.RaisePropertyChanged("Allignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BColor {
            get {
                return this.BColorField;
            }
            set {
                if ((this.BColorField.Equals(value) != true)) {
                    this.BColorField = value;
                    this.RaisePropertyChanged("BColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorC {
            get {
                return this.ColorCField;
            }
            set {
                if ((this.ColorCField.Equals(value) != true)) {
                    this.ColorCField = value;
                    this.RaisePropertyChanged("ColorC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorHex {
            get {
                return this.ColorHexField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorHexField, value) != true)) {
                    this.ColorHexField = value;
                    this.RaisePropertyChanged("ColorHex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorK {
            get {
                return this.ColorKField;
            }
            set {
                if ((this.ColorKField.Equals(value) != true)) {
                    this.ColorKField = value;
                    this.RaisePropertyChanged("ColorK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorM {
            get {
                return this.ColorMField;
            }
            set {
                if ((this.ColorMField.Equals(value) != true)) {
                    this.ColorMField = value;
                    this.RaisePropertyChanged("ColorM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorName {
            get {
                return this.ColorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorNameField, value) != true)) {
                    this.ColorNameField = value;
                    this.RaisePropertyChanged("ColorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorStyleID {
            get {
                return this.ColorStyleIDField;
            }
            set {
                if ((this.ColorStyleIDField.Equals(value) != true)) {
                    this.ColorStyleIDField = value;
                    this.RaisePropertyChanged("ColorStyleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorType {
            get {
                return this.ColorTypeField;
            }
            set {
                if ((this.ColorTypeField.Equals(value) != true)) {
                    this.ColorTypeField = value;
                    this.RaisePropertyChanged("ColorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorY {
            get {
                return this.ColorYField;
            }
            set {
                if ((this.ColorYField.Equals(value) != true)) {
                    this.ColorYField = value;
                    this.RaisePropertyChanged("ColorY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContentCaseType {
            get {
                return this.ContentCaseTypeField;
            }
            set {
                if ((this.ContentCaseTypeField.Equals(value) != true)) {
                    this.ContentCaseTypeField = value;
                    this.RaisePropertyChanged("ContentCaseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentString {
            get {
                return this.ContentStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentStringField, value) != true)) {
                    this.ContentStringField = value;
                    this.RaisePropertyChanged("ContentString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrderPdf {
            get {
                return this.DisplayOrderPdfField;
            }
            set {
                if ((this.DisplayOrderPdfField.Equals(value) != true)) {
                    this.DisplayOrderPdfField = value;
                    this.RaisePropertyChanged("DisplayOrderPdf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrderTxtControl {
            get {
                return this.DisplayOrderTxtControlField;
            }
            set {
                if ((this.DisplayOrderTxtControlField.Equals(value) != true)) {
                    this.DisplayOrderTxtControlField = value;
                    this.RaisePropertyChanged("DisplayOrderTxtControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExField1 {
            get {
                return this.ExField1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ExField1Field, value) != true)) {
                    this.ExField1Field = value;
                    this.RaisePropertyChanged("ExField1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExField2 {
            get {
                return this.ExField2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ExField2Field, value) != true)) {
                    this.ExField2Field = value;
                    this.RaisePropertyChanged("ExField2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontName {
            get {
                return this.FontNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FontNameField, value) != true)) {
                    this.FontNameField = value;
                    this.RaisePropertyChanged("FontName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FontSize {
            get {
                return this.FontSizeField;
            }
            set {
                if ((this.FontSizeField.Equals(value) != true)) {
                    this.FontSizeField = value;
                    this.RaisePropertyChanged("FontSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FontStyleID {
            get {
                return this.FontStyleIDField;
            }
            set {
                if ((this.FontStyleIDField.Equals(value) != true)) {
                    this.FontStyleIDField = value;
                    this.RaisePropertyChanged("FontStyleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GColor {
            get {
                return this.GColorField;
            }
            set {
                if ((this.GColorField.Equals(value) != true)) {
                    this.GColorField = value;
                    this.RaisePropertyChanged("GColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Indent {
            get {
                return this.IndentField;
            }
            set {
                if ((this.IndentField.Equals(value) != true)) {
                    this.IndentField = value;
                    this.RaisePropertyChanged("Indent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBold {
            get {
                return this.IsBoldField;
            }
            set {
                if ((this.IsBoldField.Equals(value) != true)) {
                    this.IsBoldField = value;
                    this.RaisePropertyChanged("IsBold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEditable {
            get {
                return this.IsEditableField;
            }
            set {
                if ((this.IsEditableField.Equals(value) != true)) {
                    this.IsEditableField = value;
                    this.RaisePropertyChanged("IsEditable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFontCustom {
            get {
                return this.IsFontCustomField;
            }
            set {
                if ((this.IsFontCustomField.Equals(value) != true)) {
                    this.IsFontCustomField = value;
                    this.RaisePropertyChanged("IsFontCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFontNamePrivate {
            get {
                return this.IsFontNamePrivateField;
            }
            set {
                if ((this.IsFontNamePrivateField.Equals(value) != true)) {
                    this.IsFontNamePrivateField = value;
                    this.RaisePropertyChanged("IsFontNamePrivate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHidden {
            get {
                return this.IsHiddenField;
            }
            set {
                if ((this.IsHiddenField.Equals(value) != true)) {
                    this.IsHiddenField = value;
                    this.RaisePropertyChanged("IsHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsItalic {
            get {
                return this.IsItalicField;
            }
            set {
                if ((this.IsItalicField.Equals(value) != true)) {
                    this.IsItalicField = value;
                    this.RaisePropertyChanged("IsItalic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMandatory {
            get {
                return this.IsMandatoryField;
            }
            set {
                if ((this.IsMandatoryField.Equals(value) != true)) {
                    this.IsMandatoryField = value;
                    this.RaisePropertyChanged("IsMandatory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewLine {
            get {
                return this.IsNewLineField;
            }
            set {
                if ((this.IsNewLineField.Equals(value) != true)) {
                    this.IsNewLineField = value;
                    this.RaisePropertyChanged("IsNewLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPositionLocked {
            get {
                return this.IsPositionLockedField;
            }
            set {
                if ((this.IsPositionLockedField.Equals(value) != true)) {
                    this.IsPositionLockedField = value;
                    this.RaisePropertyChanged("IsPositionLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRequireNumericValue {
            get {
                return this.IsRequireNumericValueField;
            }
            set {
                if ((this.IsRequireNumericValueField.Equals(value) != true)) {
                    this.IsRequireNumericValueField = value;
                    this.RaisePropertyChanged("IsRequireNumericValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSpotColor {
            get {
                return this.IsSpotColorField;
            }
            set {
                if ((this.IsSpotColorField.Equals(value) != true)) {
                    this.IsSpotColorField = value;
                    this.RaisePropertyChanged("IsSpotColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUnderlinedText {
            get {
                return this.IsUnderlinedTextField;
            }
            set {
                if ((this.IsUnderlinedTextField.Equals(value) != true)) {
                    this.IsUnderlinedTextField = value;
                    this.RaisePropertyChanged("IsUnderlinedText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LineSpacing {
            get {
                return this.LineSpacingField;
            }
            set {
                if ((this.LineSpacingField.Equals(value) != true)) {
                    this.LineSpacingField = value;
                    this.RaisePropertyChanged("LineSpacing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxCharacters {
            get {
                return this.MaxCharactersField;
            }
            set {
                if ((this.MaxCharactersField.Equals(value) != true)) {
                    this.MaxCharactersField = value;
                    this.RaisePropertyChanged("MaxCharacters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxHeight {
            get {
                return this.MaxHeightField;
            }
            set {
                if ((this.MaxHeightField.Equals(value) != true)) {
                    this.MaxHeightField = value;
                    this.RaisePropertyChanged("MaxHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxWidth {
            get {
                return this.MaxWidthField;
            }
            set {
                if ((this.MaxWidthField.Equals(value) != true)) {
                    this.MaxWidthField = value;
                    this.RaisePropertyChanged("MaxWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectID {
            get {
                return this.ObjectIDField;
            }
            set {
                if ((this.ObjectIDField.Equals(value) != true)) {
                    this.ObjectIDField = value;
                    this.RaisePropertyChanged("ObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectType {
            get {
                return this.ObjectTypeField;
            }
            set {
                if ((this.ObjectTypeField.Equals(value) != true)) {
                    this.ObjectTypeField = value;
                    this.RaisePropertyChanged("ObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OffsetX {
            get {
                return this.OffsetXField;
            }
            set {
                if ((this.OffsetXField.Equals(value) != true)) {
                    this.OffsetXField = value;
                    this.RaisePropertyChanged("OffsetX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OffsetY {
            get {
                return this.OffsetYField;
            }
            set {
                if ((this.OffsetYField.Equals(value) != true)) {
                    this.OffsetYField = value;
                    this.RaisePropertyChanged("OffsetY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNo {
            get {
                return this.PageNoField;
            }
            set {
                if ((this.PageNoField.Equals(value) != true)) {
                    this.PageNoField = value;
                    this.RaisePropertyChanged("PageNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PalleteID {
            get {
                return this.PalleteIDField;
            }
            set {
                if ((this.PalleteIDField.Equals(value) != true)) {
                    this.PalleteIDField = value;
                    this.RaisePropertyChanged("PalleteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PositionX {
            get {
                return this.PositionXField;
            }
            set {
                if ((this.PositionXField.Equals(value) != true)) {
                    this.PositionXField = value;
                    this.RaisePropertyChanged("PositionX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PositionY {
            get {
                return this.PositionYField;
            }
            set {
                if ((this.PositionYField.Equals(value) != true)) {
                    this.PositionYField = value;
                    this.RaisePropertyChanged("PositionY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductPageId {
            get {
                return this.ProductPageIdField;
            }
            set {
                if ((this.ProductPageIdField.Equals(value) != true)) {
                    this.ProductPageIdField = value;
                    this.RaisePropertyChanged("ProductPageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RColor {
            get {
                return this.RColorField;
            }
            set {
                if ((this.RColorField.Equals(value) != true)) {
                    this.RColorField = value;
                    this.RaisePropertyChanged("RColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RotationAngle {
            get {
                return this.RotationAngleField;
            }
            set {
                if ((this.RotationAngleField.Equals(value) != true)) {
                    this.RotationAngleField = value;
                    this.RaisePropertyChanged("RotationAngle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotColorName {
            get {
                return this.SpotColorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotColorNameField, value) != true)) {
                    this.SpotColorNameField = value;
                    this.RaisePropertyChanged("SpotColorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TCtlName {
            get {
                return this.TCtlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TCtlNameField, value) != true)) {
                    this.TCtlNameField = value;
                    this.RaisePropertyChanged("TCtlName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Templates Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Tint {
            get {
                return this.TintField;
            }
            set {
                if ((this.TintField.Equals(value) != true)) {
                    this.TintField = value;
                    this.RaisePropertyChanged("Tint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VAllignment {
            get {
                return this.VAllignmentField;
            }
            set {
                if ((this.VAllignmentField.Equals(value) != true)) {
                    this.VAllignmentField = value;
                    this.RaisePropertyChanged("VAllignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSide2Object {
            get {
                return this.isSide2ObjectField;
            }
            set {
                if ((this.isSide2ObjectField.Equals(value) != true)) {
                    this.isSide2ObjectField = value;
                    this.RaisePropertyChanged("isSide2Object");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateSide2Templates", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class TemplateSide2Templates : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private System.Nullable<int> ProductIDField;
        
        private System.Nullable<int> Side2ProductIDField;
        
        private webprintDesigner.ProductServiceReference.Templates TemplatesField;
        
        private webprintDesigner.ProductServiceReference.Templates Templates1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Side2ProductID {
            get {
                return this.Side2ProductIDField;
            }
            set {
                if ((this.Side2ProductIDField.Equals(value) != true)) {
                    this.Side2ProductIDField = value;
                    this.RaisePropertyChanged("Side2ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Templates Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.Templates Templates1 {
            get {
                return this.Templates1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Templates1Field, value) != true)) {
                    this.Templates1Field = value;
                    this.RaisePropertyChanged("Templates1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tbl_ProductCategoryFoldLines", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class tbl_ProductCategoryFoldLines : object, System.ComponentModel.INotifyPropertyChanged {
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private int FoldLineIDField;
        
        private System.Nullable<double> FoldLineOffsetFromOriginField;
        
        private System.Nullable<bool> FoldLineOrientationField;
        
        private System.Nullable<int> ProductCategoryIDField;
        
        private webprintDesigner.ProductServiceReference.tbl_ProductCategory tbl_ProductCategoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FoldLineID {
            get {
                return this.FoldLineIDField;
            }
            set {
                if ((this.FoldLineIDField.Equals(value) != true)) {
                    this.FoldLineIDField = value;
                    this.RaisePropertyChanged("FoldLineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> FoldLineOffsetFromOrigin {
            get {
                return this.FoldLineOffsetFromOriginField;
            }
            set {
                if ((this.FoldLineOffsetFromOriginField.Equals(value) != true)) {
                    this.FoldLineOffsetFromOriginField = value;
                    this.RaisePropertyChanged("FoldLineOffsetFromOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FoldLineOrientation {
            get {
                return this.FoldLineOrientationField;
            }
            set {
                if ((this.FoldLineOrientationField.Equals(value) != true)) {
                    this.FoldLineOrientationField = value;
                    this.RaisePropertyChanged("FoldLineOrientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductCategoryID {
            get {
                return this.ProductCategoryIDField;
            }
            set {
                if ((this.ProductCategoryIDField.Equals(value) != true)) {
                    this.ProductCategoryIDField = value;
                    this.RaisePropertyChanged("ProductCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.tbl_ProductCategory tbl_ProductCategory {
            get {
                return this.tbl_ProductCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.tbl_ProductCategoryField, value) != true)) {
                    this.tbl_ProductCategoryField = value;
                    this.RaisePropertyChanged("tbl_ProductCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vw_ProductCategoriesLeafNodes", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes", IsReference=true)]
    public partial class vw_ProductCategoriesLeafNodes : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CategoryNameField;
        
        private webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTrackerField;
        
        private int ParentCategoryIDField;
        
        private int ProductCategoryIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webprintDesigner.ProductServiceReference.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentCategoryID {
            get {
                return this.ParentCategoryIDField;
            }
            set {
                if ((this.ParentCategoryIDField.Equals(value) != true)) {
                    this.ParentCategoryIDField = value;
                    this.RaisePropertyChanged("ParentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductCategoryID {
            get {
                return this.ProductCategoryIDField;
            }
            set {
                if ((this.ProductCategoryIDField.Equals(value) != true)) {
                    this.ProductCategoryIDField = value;
                    this.RaisePropertyChanged("ProductCategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sp_GetTemplateThemeTags_Result", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes")]
    public partial class sp_GetTemplateThemeTags_Result : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> ProductIDField;
        
        private int TagIDField;
        
        private string TagNameField;
        
        private int selectedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int selected {
            get {
                return this.selectedField;
            }
            set {
                if ((this.selectedField.Equals(value) != true)) {
                    this.selectedField = value;
                    this.RaisePropertyChanged("selected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sp_GetTemplateIndustryTags_Result", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes")]
    public partial class sp_GetTemplateIndustryTags_Result : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> ProductIDField;
        
        private int TagIDField;
        
        private string TagNameField;
        
        private int selectedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int selected {
            get {
                return this.selectedField;
            }
            set {
                if ((this.selectedField.Equals(value) != true)) {
                    this.selectedField = value;
                    this.RaisePropertyChanged("selected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sp_GetMatchingSetTemplateView_Result", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes")]
    public partial class sp_GetMatchingSetTemplateView_Result : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CompletionField;
        
        private System.Nullable<int> ProductIDField;
        
        private string ProductNameField;
        
        private System.Nullable<long> RNField;
        
        private System.Nullable<int> StatusField;
        
        private System.Nullable<int> TemplateCountField;
        
        private string ThumbnailField;
        
        private System.Nullable<int> matchingSetIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Completion {
            get {
                return this.CompletionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompletionField, value) != true)) {
                    this.CompletionField = value;
                    this.RaisePropertyChanged("Completion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RN {
            get {
                return this.RNField;
            }
            set {
                if ((this.RNField.Equals(value) != true)) {
                    this.RNField = value;
                    this.RaisePropertyChanged("RN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TemplateCount {
            get {
                return this.TemplateCountField;
            }
            set {
                if ((this.TemplateCountField.Equals(value) != true)) {
                    this.TemplateCountField = value;
                    this.RaisePropertyChanged("TemplateCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> matchingSetID {
            get {
                return this.matchingSetIDField;
            }
            set {
                if ((this.matchingSetIDField.Equals(value) != true)) {
                    this.matchingSetIDField = value;
                    this.RaisePropertyChanged("matchingSetID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sp_GetMatchingSetTemplatesList_Result", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes")]
    public partial class sp_GetMatchingSetTemplatesList_Result : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CategoryNameField;
        
        private int ProductCategoryIDField;
        
        private System.Nullable<int> ProductIDField;
        
        private string ProductNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductCategoryID {
            get {
                return this.ProductCategoryIDField;
            }
            set {
                if ((this.ProductCategoryIDField.Equals(value) != true)) {
                    this.ProductCategoryIDField = value;
                    this.RaisePropertyChanged("ProductCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuickText", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesignerModelTypes")]
    public partial class QuickText : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string Address1Field;
        
        private string Address2Field;
        
        private string Address3Field;
        
        private string CompanyField;
        
        private string CompanyMessageField;
        
        private string EmailField;
        
        private string FaxField;
        
        private string LogoPathField;
        
        private string NameField;
        
        private string TelephoneField;
        
        private string TitleField;
        
        private string WebsiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyMessage {
            get {
                return this.CompanyMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyMessageField, value) != true)) {
                    this.CompanyMessageField = value;
                    this.RaisePropertyChanged("CompanyMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogoPath {
            get {
                return this.LogoPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoPathField, value) != true)) {
                    this.LogoPathField = value;
                    this.RaisePropertyChanged("LogoPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FontLoadModes", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesigner.Services")]
    public enum FontLoadModes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemOnly = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateOnly = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemAndUsed = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DesignerModes", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesigner.Services")]
    public enum DesignerModes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SimpleEndUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvancedEndUser = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatorMode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnnanomousMode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorporateMode = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveOperationTypes", Namespace="http://schemas.datacontract.org/2004/07/TemplateDesigner.Services")]
    public enum SaveOperationTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveReturnToDetails = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveGenerateOpenPDFPreview = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveGeneratePDFAttachMode = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetMatchingSets", ReplyAction="http://tempuri.org/IProductService/GetMatchingSetsResponse")]
        System.IAsyncResult BeginGetMatchingSets(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.MatchingSets> EndGetMatchingSets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetMatchingSetbyID", ReplyAction="http://tempuri.org/IProductService/GetMatchingSetbyIDResponse")]
        System.IAsyncResult BeginGetMatchingSetbyID(int MatchingSetID, System.AsyncCallback callback, object asyncState);
        
        webprintDesigner.ProductServiceReference.MatchingSets EndGetMatchingSetbyID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetFontList", ReplyAction="http://tempuri.org/IProductService/GetFontListResponse")]
        System.IAsyncResult BeginGetFontList(int ProductId, bool ReturnFontFiles, webprintDesigner.ProductServiceReference.FontLoadModes mode, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateFonts> EndGetFontList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetProductBackgroundImages", ReplyAction="http://tempuri.org/IProductService/GetProductBackgroundImagesResponse")]
        System.IAsyncResult BeginGetProductBackgroundImages(int ProductId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateBackgroundImages> EndGetProductBackgroundImages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetProductBackgroundImg", ReplyAction="http://tempuri.org/IProductService/GetProductBackgroundImgResponse")]
        System.IAsyncResult BeginGetProductBackgroundImg(int ProductId, string BkImg, bool IsSide2, int PageNo, System.AsyncCallback callback, object asyncState);
        
        string EndGetProductBackgroundImg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/DeleteProductBackgroundImage", ReplyAction="http://tempuri.org/IProductService/DeleteProductBackgroundImageResponse")]
        System.IAsyncResult BeginDeleteProductBackgroundImage(int ProductId, int BackgroundImageID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteProductBackgroundImage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetColorStyle", ReplyAction="http://tempuri.org/IProductService/GetColorStyleResponse")]
        System.IAsyncResult BeginGetColorStyle(int ProductId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateColorStyles> EndGetColorStyle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetProductById", ReplyAction="http://tempuri.org/IProductService/GetProductByIdResponse")]
        System.IAsyncResult BeginGetProductById(int ProductId, System.AsyncCallback callback, object asyncState);
        
        webprintDesigner.ProductServiceReference.Templates EndGetProductById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetProductObjects", ReplyAction="http://tempuri.org/IProductService/GetProductObjectsResponse")]
        System.IAsyncResult BeginGetProductObjects(int ProductId, webprintDesigner.ProductServiceReference.DesignerModes Mode, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> EndGetProductObjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/SaveObjectsAndGenratePDF", ReplyAction="http://tempuri.org/IProductService/SaveObjectsAndGenratePDFResponse")]
        System.IAsyncResult BeginSaveObjectsAndGenratePDF(int ProductId, string Bkimg, string Bkimg2, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> objObjectsList, webprintDesigner.ProductServiceReference.DesignerModes Mode, webprintDesigner.ProductServiceReference.SaveOperationTypes SaveOperationType, System.AsyncCallback callback, object asyncState);
        
        string EndSaveObjectsAndGenratePDF(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetCategories", ReplyAction="http://tempuri.org/IProductService/GetCategoriesResponse")]
        System.IAsyncResult BeginGetCategories(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.vw_ProductCategoriesLeafNodes> EndGetCategories(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetCategoriesByMatchingSetID", ReplyAction="http://tempuri.org/IProductService/GetCategoriesByMatchingSetIDResponse")]
        System.IAsyncResult BeginGetCategoriesByMatchingSetID(int MatchingSetID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategory> EndGetCategoriesByMatchingSetID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetBaseColors", ReplyAction="http://tempuri.org/IProductService/GetBaseColorsResponse")]
        System.IAsyncResult BeginGetBaseColors(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.BaseColors> EndGetBaseColors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetMatchingSetTheme", ReplyAction="http://tempuri.org/IProductService/GetMatchingSetThemeResponse")]
        System.IAsyncResult BeginGetMatchingSetTheme(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetMatchingSetTheme(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetTemplateThemeTags", ReplyAction="http://tempuri.org/IProductService/GetTemplateThemeTagsResponse")]
        System.IAsyncResult BeginGetTemplateThemeTags(System.Nullable<int> ProductID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateThemeTags_Result> EndGetTemplateThemeTags(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetTemplateIndustryTags", ReplyAction="http://tempuri.org/IProductService/GetTemplateIndustryTagsResponse")]
        System.IAsyncResult BeginGetTemplateIndustryTags(System.Nullable<int> ProductID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateIndustryTags_Result> EndGetTemplateIndustryTags(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetTemplates", ReplyAction="http://tempuri.org/IProductService/GetTemplatesResponse")]
        System.IAsyncResult BeginGetTemplates(string keywords, int ProductCategoryID, int PageNo, int PageSize, bool callbind, int status, int UserID, string Role, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.Templates> EndGetTemplates(out int PageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetMatchingSetTemplates", ReplyAction="http://tempuri.org/IProductService/GetMatchingSetTemplatesResponse")]
        System.IAsyncResult BeginGetMatchingSetTemplates(string keywords, int MatchingSetID, int PageNo, int PageSize, bool callbind, int status, int UserID, string Role, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplateView_Result> EndGetMatchingSetTemplates(out int PageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetMatchingSetTemplatesList", ReplyAction="http://tempuri.org/IProductService/GetMatchingSetTemplatesListResponse")]
        System.IAsyncResult BeginGetMatchingSetTemplatesList(int MatchingSetID, string ProductName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplatesList_Result> EndGetMatchingSetTemplatesList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetFoldLinesByProductCategoryID", ReplyAction="http://tempuri.org/IProductService/GetFoldLinesByProductCategoryIDResponse")]
        System.IAsyncResult BeginGetFoldLinesByProductCategoryID(int ProductCategoryID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategoryFoldLines> EndGetFoldLinesByProductCategoryID(out bool ApplyFoldLines, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/SaveTemplates", ReplyAction="http://tempuri.org/IProductService/SaveTemplatesResponse")]
        System.IAsyncResult BeginSaveTemplates(webprintDesigner.ProductServiceReference.Templates oTemplate, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateIndustryTags> lstIndustryTags, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateThemeTags> lstThemeTags, bool IsAdd, bool IsCatChanged, System.AsyncCallback callback, object asyncState);
        
        bool EndSaveTemplates(out int NewTemplateID, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/DeleteTemplate", ReplyAction="http://tempuri.org/IProductService/DeleteTemplateResponse")]
        System.IAsyncResult BeginDeleteTemplate(int ProductID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteTemplate(out int CategoryID, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/CopyTemplate", ReplyAction="http://tempuri.org/IProductService/CopyTemplateResponse")]
        System.IAsyncResult BeginCopyTemplate(int ProductID, int SubmittedBy, string SubmittedByName, System.AsyncCallback callback, object asyncState);
        
        int EndCopyTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/CopyMatchingSet", ReplyAction="http://tempuri.org/IProductService/CopyMatchingSetResponse")]
        System.IAsyncResult BeginCopyMatchingSet(int ProductID, int SubmittedBy, string SubmittedByName, System.AsyncCallback callback, object asyncState);
        
        int EndCopyMatchingSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/UpdateMatchingSetTemplates", ReplyAction="http://tempuri.org/IProductService/UpdateMatchingSetTemplatesResponse")]
        System.IAsyncResult BeginUpdateMatchingSetTemplates(System.Collections.ObjectModel.ObservableCollection<int> ProductIDs, string ProductName, string NarrativeTag, System.Nullable<int> BaseColorID, System.Collections.ObjectModel.ObservableCollection<int> IndustryTagIDs, System.Collections.ObjectModel.ObservableCollection<int> ThemeTagIDs, int action, int userId, string fullname, string rejectReason, System.Nullable<int> AdminRating, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateMatchingSetTemplates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetContactQuickTextFields", ReplyAction="http://tempuri.org/IProductService/GetContactQuickTextFieldsResponse")]
        System.IAsyncResult BeginGetContactQuickTextFields(int CustomerID, int ContactID, System.AsyncCallback callback, object asyncState);
        
        webprintDesigner.ProductServiceReference.QuickText EndGetContactQuickTextFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/UpdateQuickText", ReplyAction="http://tempuri.org/IProductService/UpdateQuickTextResponse")]
        System.IAsyncResult BeginUpdateQuickText(webprintDesigner.ProductServiceReference.QuickText oQuickTextData, int ContactID, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateQuickText(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/CropImage", ReplyAction="http://tempuri.org/IProductService/CropImageResponse")]
        System.IAsyncResult BeginCropImage(string ImgName, int ImgX, int ImgY, int ImgWidth, int ImgHeight, System.AsyncCallback callback, object asyncState);
        
        bool EndCropImage(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : webprintDesigner.ProductServiceReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMatchingSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMatchingSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.MatchingSets> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.MatchingSets>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMatchingSetbyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMatchingSetbyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public webprintDesigner.ProductServiceReference.MatchingSets Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((webprintDesigner.ProductServiceReference.MatchingSets)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFontListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFontListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateFonts> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateFonts>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductBackgroundImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductBackgroundImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateBackgroundImages> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateBackgroundImages>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductBackgroundImgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductBackgroundImgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteProductBackgroundImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteProductBackgroundImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetColorStyleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetColorStyleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateColorStyles> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateColorStyles>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public webprintDesigner.ProductServiceReference.Templates Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((webprintDesigner.ProductServiceReference.Templates)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveObjectsAndGenratePDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveObjectsAndGenratePDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.vw_ProductCategoriesLeafNodes> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.vw_ProductCategoriesLeafNodes>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCategoriesByMatchingSetIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCategoriesByMatchingSetIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategory> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategory>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBaseColorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBaseColorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.BaseColors> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.BaseColors>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMatchingSetThemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMatchingSetThemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTemplateThemeTagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTemplateThemeTagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateThemeTags_Result> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateThemeTags_Result>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTemplateIndustryTagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTemplateIndustryTagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateIndustryTags_Result> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateIndustryTags_Result>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int PageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.Templates> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.Templates>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMatchingSetTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMatchingSetTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int PageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplateView_Result> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplateView_Result>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMatchingSetTemplatesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMatchingSetTemplatesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplatesList_Result> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplatesList_Result>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFoldLinesByProductCategoryIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFoldLinesByProductCategoryIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool ApplyFoldLines {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategoryFoldLines> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategoryFoldLines>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int NewTemplateID {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int CategoryID {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyMatchingSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyMatchingSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateMatchingSetTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateMatchingSetTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactQuickTextFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactQuickTextFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public webprintDesigner.ProductServiceReference.QuickText Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((webprintDesigner.ProductServiceReference.QuickText)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateQuickTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateQuickTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CropImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CropImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<webprintDesigner.ProductServiceReference.IProductService>, webprintDesigner.ProductServiceReference.IProductService {
        
        private BeginOperationDelegate onBeginGetMatchingSetsDelegate;
        
        private EndOperationDelegate onEndGetMatchingSetsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMatchingSetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMatchingSetbyIDDelegate;
        
        private EndOperationDelegate onEndGetMatchingSetbyIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetMatchingSetbyIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFontListDelegate;
        
        private EndOperationDelegate onEndGetFontListDelegate;
        
        private System.Threading.SendOrPostCallback onGetFontListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductBackgroundImagesDelegate;
        
        private EndOperationDelegate onEndGetProductBackgroundImagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductBackgroundImagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductBackgroundImgDelegate;
        
        private EndOperationDelegate onEndGetProductBackgroundImgDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductBackgroundImgCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProductBackgroundImageDelegate;
        
        private EndOperationDelegate onEndDeleteProductBackgroundImageDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProductBackgroundImageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetColorStyleDelegate;
        
        private EndOperationDelegate onEndGetColorStyleDelegate;
        
        private System.Threading.SendOrPostCallback onGetColorStyleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductByIdDelegate;
        
        private EndOperationDelegate onEndGetProductByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductObjectsDelegate;
        
        private EndOperationDelegate onEndGetProductObjectsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductObjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveObjectsAndGenratePDFDelegate;
        
        private EndOperationDelegate onEndSaveObjectsAndGenratePDFDelegate;
        
        private System.Threading.SendOrPostCallback onSaveObjectsAndGenratePDFCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCategoriesDelegate;
        
        private EndOperationDelegate onEndGetCategoriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCategoriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCategoriesByMatchingSetIDDelegate;
        
        private EndOperationDelegate onEndGetCategoriesByMatchingSetIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetCategoriesByMatchingSetIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBaseColorsDelegate;
        
        private EndOperationDelegate onEndGetBaseColorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBaseColorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMatchingSetThemeDelegate;
        
        private EndOperationDelegate onEndGetMatchingSetThemeDelegate;
        
        private System.Threading.SendOrPostCallback onGetMatchingSetThemeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTemplateThemeTagsDelegate;
        
        private EndOperationDelegate onEndGetTemplateThemeTagsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTemplateThemeTagsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTemplateIndustryTagsDelegate;
        
        private EndOperationDelegate onEndGetTemplateIndustryTagsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTemplateIndustryTagsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTemplatesDelegate;
        
        private EndOperationDelegate onEndGetTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMatchingSetTemplatesDelegate;
        
        private EndOperationDelegate onEndGetMatchingSetTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMatchingSetTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMatchingSetTemplatesListDelegate;
        
        private EndOperationDelegate onEndGetMatchingSetTemplatesListDelegate;
        
        private System.Threading.SendOrPostCallback onGetMatchingSetTemplatesListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFoldLinesByProductCategoryIDDelegate;
        
        private EndOperationDelegate onEndGetFoldLinesByProductCategoryIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetFoldLinesByProductCategoryIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTemplatesDelegate;
        
        private EndOperationDelegate onEndSaveTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTemplateDelegate;
        
        private EndOperationDelegate onEndDeleteTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyTemplateDelegate;
        
        private EndOperationDelegate onEndCopyTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onCopyTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyMatchingSetDelegate;
        
        private EndOperationDelegate onEndCopyMatchingSetDelegate;
        
        private System.Threading.SendOrPostCallback onCopyMatchingSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMatchingSetTemplatesDelegate;
        
        private EndOperationDelegate onEndUpdateMatchingSetTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMatchingSetTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactQuickTextFieldsDelegate;
        
        private EndOperationDelegate onEndGetContactQuickTextFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactQuickTextFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateQuickTextDelegate;
        
        private EndOperationDelegate onEndUpdateQuickTextDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateQuickTextCompletedDelegate;
        
        private BeginOperationDelegate onBeginCropImageDelegate;
        
        private EndOperationDelegate onEndCropImageDelegate;
        
        private System.Threading.SendOrPostCallback onCropImageCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetMatchingSetsCompletedEventArgs> GetMatchingSetsCompleted;
        
        public event System.EventHandler<GetMatchingSetbyIDCompletedEventArgs> GetMatchingSetbyIDCompleted;
        
        public event System.EventHandler<GetFontListCompletedEventArgs> GetFontListCompleted;
        
        public event System.EventHandler<GetProductBackgroundImagesCompletedEventArgs> GetProductBackgroundImagesCompleted;
        
        public event System.EventHandler<GetProductBackgroundImgCompletedEventArgs> GetProductBackgroundImgCompleted;
        
        public event System.EventHandler<DeleteProductBackgroundImageCompletedEventArgs> DeleteProductBackgroundImageCompleted;
        
        public event System.EventHandler<GetColorStyleCompletedEventArgs> GetColorStyleCompleted;
        
        public event System.EventHandler<GetProductByIdCompletedEventArgs> GetProductByIdCompleted;
        
        public event System.EventHandler<GetProductObjectsCompletedEventArgs> GetProductObjectsCompleted;
        
        public event System.EventHandler<SaveObjectsAndGenratePDFCompletedEventArgs> SaveObjectsAndGenratePDFCompleted;
        
        public event System.EventHandler<GetCategoriesCompletedEventArgs> GetCategoriesCompleted;
        
        public event System.EventHandler<GetCategoriesByMatchingSetIDCompletedEventArgs> GetCategoriesByMatchingSetIDCompleted;
        
        public event System.EventHandler<GetBaseColorsCompletedEventArgs> GetBaseColorsCompleted;
        
        public event System.EventHandler<GetMatchingSetThemeCompletedEventArgs> GetMatchingSetThemeCompleted;
        
        public event System.EventHandler<GetTemplateThemeTagsCompletedEventArgs> GetTemplateThemeTagsCompleted;
        
        public event System.EventHandler<GetTemplateIndustryTagsCompletedEventArgs> GetTemplateIndustryTagsCompleted;
        
        public event System.EventHandler<GetTemplatesCompletedEventArgs> GetTemplatesCompleted;
        
        public event System.EventHandler<GetMatchingSetTemplatesCompletedEventArgs> GetMatchingSetTemplatesCompleted;
        
        public event System.EventHandler<GetMatchingSetTemplatesListCompletedEventArgs> GetMatchingSetTemplatesListCompleted;
        
        public event System.EventHandler<GetFoldLinesByProductCategoryIDCompletedEventArgs> GetFoldLinesByProductCategoryIDCompleted;
        
        public event System.EventHandler<SaveTemplatesCompletedEventArgs> SaveTemplatesCompleted;
        
        public event System.EventHandler<DeleteTemplateCompletedEventArgs> DeleteTemplateCompleted;
        
        public event System.EventHandler<CopyTemplateCompletedEventArgs> CopyTemplateCompleted;
        
        public event System.EventHandler<CopyMatchingSetCompletedEventArgs> CopyMatchingSetCompleted;
        
        public event System.EventHandler<UpdateMatchingSetTemplatesCompletedEventArgs> UpdateMatchingSetTemplatesCompleted;
        
        public event System.EventHandler<GetContactQuickTextFieldsCompletedEventArgs> GetContactQuickTextFieldsCompleted;
        
        public event System.EventHandler<UpdateQuickTextCompletedEventArgs> UpdateQuickTextCompleted;
        
        public event System.EventHandler<CropImageCompletedEventArgs> CropImageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetMatchingSets(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMatchingSets(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.MatchingSets> webprintDesigner.ProductServiceReference.IProductService.EndGetMatchingSets(System.IAsyncResult result) {
            return base.Channel.EndGetMatchingSets(result);
        }
        
        private System.IAsyncResult OnBeginGetMatchingSets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetMatchingSets(callback, asyncState);
        }
        
        private object[] OnEndGetMatchingSets(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.MatchingSets> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetMatchingSets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMatchingSetsCompleted(object state) {
            if ((this.GetMatchingSetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMatchingSetsCompleted(this, new GetMatchingSetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMatchingSetsAsync() {
            this.GetMatchingSetsAsync(null);
        }
        
        public void GetMatchingSetsAsync(object userState) {
            if ((this.onBeginGetMatchingSetsDelegate == null)) {
                this.onBeginGetMatchingSetsDelegate = new BeginOperationDelegate(this.OnBeginGetMatchingSets);
            }
            if ((this.onEndGetMatchingSetsDelegate == null)) {
                this.onEndGetMatchingSetsDelegate = new EndOperationDelegate(this.OnEndGetMatchingSets);
            }
            if ((this.onGetMatchingSetsCompletedDelegate == null)) {
                this.onGetMatchingSetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMatchingSetsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMatchingSetsDelegate, null, this.onEndGetMatchingSetsDelegate, this.onGetMatchingSetsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetMatchingSetbyID(int MatchingSetID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMatchingSetbyID(MatchingSetID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        webprintDesigner.ProductServiceReference.MatchingSets webprintDesigner.ProductServiceReference.IProductService.EndGetMatchingSetbyID(System.IAsyncResult result) {
            return base.Channel.EndGetMatchingSetbyID(result);
        }
        
        private System.IAsyncResult OnBeginGetMatchingSetbyID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int MatchingSetID = ((int)(inValues[0]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetMatchingSetbyID(MatchingSetID, callback, asyncState);
        }
        
        private object[] OnEndGetMatchingSetbyID(System.IAsyncResult result) {
            webprintDesigner.ProductServiceReference.MatchingSets retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetMatchingSetbyID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMatchingSetbyIDCompleted(object state) {
            if ((this.GetMatchingSetbyIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMatchingSetbyIDCompleted(this, new GetMatchingSetbyIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMatchingSetbyIDAsync(int MatchingSetID) {
            this.GetMatchingSetbyIDAsync(MatchingSetID, null);
        }
        
        public void GetMatchingSetbyIDAsync(int MatchingSetID, object userState) {
            if ((this.onBeginGetMatchingSetbyIDDelegate == null)) {
                this.onBeginGetMatchingSetbyIDDelegate = new BeginOperationDelegate(this.OnBeginGetMatchingSetbyID);
            }
            if ((this.onEndGetMatchingSetbyIDDelegate == null)) {
                this.onEndGetMatchingSetbyIDDelegate = new EndOperationDelegate(this.OnEndGetMatchingSetbyID);
            }
            if ((this.onGetMatchingSetbyIDCompletedDelegate == null)) {
                this.onGetMatchingSetbyIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMatchingSetbyIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetMatchingSetbyIDDelegate, new object[] {
                        MatchingSetID}, this.onEndGetMatchingSetbyIDDelegate, this.onGetMatchingSetbyIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetFontList(int ProductId, bool ReturnFontFiles, webprintDesigner.ProductServiceReference.FontLoadModes mode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFontList(ProductId, ReturnFontFiles, mode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateFonts> webprintDesigner.ProductServiceReference.IProductService.EndGetFontList(System.IAsyncResult result) {
            return base.Channel.EndGetFontList(result);
        }
        
        private System.IAsyncResult OnBeginGetFontList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductId = ((int)(inValues[0]));
            bool ReturnFontFiles = ((bool)(inValues[1]));
            webprintDesigner.ProductServiceReference.FontLoadModes mode = ((webprintDesigner.ProductServiceReference.FontLoadModes)(inValues[2]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetFontList(ProductId, ReturnFontFiles, mode, callback, asyncState);
        }
        
        private object[] OnEndGetFontList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateFonts> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetFontList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFontListCompleted(object state) {
            if ((this.GetFontListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFontListCompleted(this, new GetFontListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFontListAsync(int ProductId, bool ReturnFontFiles, webprintDesigner.ProductServiceReference.FontLoadModes mode) {
            this.GetFontListAsync(ProductId, ReturnFontFiles, mode, null);
        }
        
        public void GetFontListAsync(int ProductId, bool ReturnFontFiles, webprintDesigner.ProductServiceReference.FontLoadModes mode, object userState) {
            if ((this.onBeginGetFontListDelegate == null)) {
                this.onBeginGetFontListDelegate = new BeginOperationDelegate(this.OnBeginGetFontList);
            }
            if ((this.onEndGetFontListDelegate == null)) {
                this.onEndGetFontListDelegate = new EndOperationDelegate(this.OnEndGetFontList);
            }
            if ((this.onGetFontListCompletedDelegate == null)) {
                this.onGetFontListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFontListCompleted);
            }
            base.InvokeAsync(this.onBeginGetFontListDelegate, new object[] {
                        ProductId,
                        ReturnFontFiles,
                        mode}, this.onEndGetFontListDelegate, this.onGetFontListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetProductBackgroundImages(int ProductId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductBackgroundImages(ProductId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateBackgroundImages> webprintDesigner.ProductServiceReference.IProductService.EndGetProductBackgroundImages(System.IAsyncResult result) {
            return base.Channel.EndGetProductBackgroundImages(result);
        }
        
        private System.IAsyncResult OnBeginGetProductBackgroundImages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductId = ((int)(inValues[0]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetProductBackgroundImages(ProductId, callback, asyncState);
        }
        
        private object[] OnEndGetProductBackgroundImages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateBackgroundImages> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetProductBackgroundImages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductBackgroundImagesCompleted(object state) {
            if ((this.GetProductBackgroundImagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductBackgroundImagesCompleted(this, new GetProductBackgroundImagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductBackgroundImagesAsync(int ProductId) {
            this.GetProductBackgroundImagesAsync(ProductId, null);
        }
        
        public void GetProductBackgroundImagesAsync(int ProductId, object userState) {
            if ((this.onBeginGetProductBackgroundImagesDelegate == null)) {
                this.onBeginGetProductBackgroundImagesDelegate = new BeginOperationDelegate(this.OnBeginGetProductBackgroundImages);
            }
            if ((this.onEndGetProductBackgroundImagesDelegate == null)) {
                this.onEndGetProductBackgroundImagesDelegate = new EndOperationDelegate(this.OnEndGetProductBackgroundImages);
            }
            if ((this.onGetProductBackgroundImagesCompletedDelegate == null)) {
                this.onGetProductBackgroundImagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductBackgroundImagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductBackgroundImagesDelegate, new object[] {
                        ProductId}, this.onEndGetProductBackgroundImagesDelegate, this.onGetProductBackgroundImagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetProductBackgroundImg(int ProductId, string BkImg, bool IsSide2, int PageNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductBackgroundImg(ProductId, BkImg, IsSide2, PageNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string webprintDesigner.ProductServiceReference.IProductService.EndGetProductBackgroundImg(System.IAsyncResult result) {
            return base.Channel.EndGetProductBackgroundImg(result);
        }
        
        private System.IAsyncResult OnBeginGetProductBackgroundImg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductId = ((int)(inValues[0]));
            string BkImg = ((string)(inValues[1]));
            bool IsSide2 = ((bool)(inValues[2]));
            int PageNo = ((int)(inValues[3]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetProductBackgroundImg(ProductId, BkImg, IsSide2, PageNo, callback, asyncState);
        }
        
        private object[] OnEndGetProductBackgroundImg(System.IAsyncResult result) {
            string retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetProductBackgroundImg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductBackgroundImgCompleted(object state) {
            if ((this.GetProductBackgroundImgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductBackgroundImgCompleted(this, new GetProductBackgroundImgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductBackgroundImgAsync(int ProductId, string BkImg, bool IsSide2, int PageNo) {
            this.GetProductBackgroundImgAsync(ProductId, BkImg, IsSide2, PageNo, null);
        }
        
        public void GetProductBackgroundImgAsync(int ProductId, string BkImg, bool IsSide2, int PageNo, object userState) {
            if ((this.onBeginGetProductBackgroundImgDelegate == null)) {
                this.onBeginGetProductBackgroundImgDelegate = new BeginOperationDelegate(this.OnBeginGetProductBackgroundImg);
            }
            if ((this.onEndGetProductBackgroundImgDelegate == null)) {
                this.onEndGetProductBackgroundImgDelegate = new EndOperationDelegate(this.OnEndGetProductBackgroundImg);
            }
            if ((this.onGetProductBackgroundImgCompletedDelegate == null)) {
                this.onGetProductBackgroundImgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductBackgroundImgCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductBackgroundImgDelegate, new object[] {
                        ProductId,
                        BkImg,
                        IsSide2,
                        PageNo}, this.onEndGetProductBackgroundImgDelegate, this.onGetProductBackgroundImgCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginDeleteProductBackgroundImage(int ProductId, int BackgroundImageID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProductBackgroundImage(ProductId, BackgroundImageID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool webprintDesigner.ProductServiceReference.IProductService.EndDeleteProductBackgroundImage(System.IAsyncResult result) {
            return base.Channel.EndDeleteProductBackgroundImage(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProductBackgroundImage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductId = ((int)(inValues[0]));
            int BackgroundImageID = ((int)(inValues[1]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginDeleteProductBackgroundImage(ProductId, BackgroundImageID, callback, asyncState);
        }
        
        private object[] OnEndDeleteProductBackgroundImage(System.IAsyncResult result) {
            bool retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndDeleteProductBackgroundImage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteProductBackgroundImageCompleted(object state) {
            if ((this.DeleteProductBackgroundImageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProductBackgroundImageCompleted(this, new DeleteProductBackgroundImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProductBackgroundImageAsync(int ProductId, int BackgroundImageID) {
            this.DeleteProductBackgroundImageAsync(ProductId, BackgroundImageID, null);
        }
        
        public void DeleteProductBackgroundImageAsync(int ProductId, int BackgroundImageID, object userState) {
            if ((this.onBeginDeleteProductBackgroundImageDelegate == null)) {
                this.onBeginDeleteProductBackgroundImageDelegate = new BeginOperationDelegate(this.OnBeginDeleteProductBackgroundImage);
            }
            if ((this.onEndDeleteProductBackgroundImageDelegate == null)) {
                this.onEndDeleteProductBackgroundImageDelegate = new EndOperationDelegate(this.OnEndDeleteProductBackgroundImage);
            }
            if ((this.onDeleteProductBackgroundImageCompletedDelegate == null)) {
                this.onDeleteProductBackgroundImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProductBackgroundImageCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProductBackgroundImageDelegate, new object[] {
                        ProductId,
                        BackgroundImageID}, this.onEndDeleteProductBackgroundImageDelegate, this.onDeleteProductBackgroundImageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetColorStyle(int ProductId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetColorStyle(ProductId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateColorStyles> webprintDesigner.ProductServiceReference.IProductService.EndGetColorStyle(System.IAsyncResult result) {
            return base.Channel.EndGetColorStyle(result);
        }
        
        private System.IAsyncResult OnBeginGetColorStyle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductId = ((int)(inValues[0]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetColorStyle(ProductId, callback, asyncState);
        }
        
        private object[] OnEndGetColorStyle(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateColorStyles> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetColorStyle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetColorStyleCompleted(object state) {
            if ((this.GetColorStyleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetColorStyleCompleted(this, new GetColorStyleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetColorStyleAsync(int ProductId) {
            this.GetColorStyleAsync(ProductId, null);
        }
        
        public void GetColorStyleAsync(int ProductId, object userState) {
            if ((this.onBeginGetColorStyleDelegate == null)) {
                this.onBeginGetColorStyleDelegate = new BeginOperationDelegate(this.OnBeginGetColorStyle);
            }
            if ((this.onEndGetColorStyleDelegate == null)) {
                this.onEndGetColorStyleDelegate = new EndOperationDelegate(this.OnEndGetColorStyle);
            }
            if ((this.onGetColorStyleCompletedDelegate == null)) {
                this.onGetColorStyleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetColorStyleCompleted);
            }
            base.InvokeAsync(this.onBeginGetColorStyleDelegate, new object[] {
                        ProductId}, this.onEndGetColorStyleDelegate, this.onGetColorStyleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetProductById(int ProductId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductById(ProductId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        webprintDesigner.ProductServiceReference.Templates webprintDesigner.ProductServiceReference.IProductService.EndGetProductById(System.IAsyncResult result) {
            return base.Channel.EndGetProductById(result);
        }
        
        private System.IAsyncResult OnBeginGetProductById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductId = ((int)(inValues[0]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetProductById(ProductId, callback, asyncState);
        }
        
        private object[] OnEndGetProductById(System.IAsyncResult result) {
            webprintDesigner.ProductServiceReference.Templates retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetProductById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductByIdCompleted(object state) {
            if ((this.GetProductByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductByIdCompleted(this, new GetProductByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductByIdAsync(int ProductId) {
            this.GetProductByIdAsync(ProductId, null);
        }
        
        public void GetProductByIdAsync(int ProductId, object userState) {
            if ((this.onBeginGetProductByIdDelegate == null)) {
                this.onBeginGetProductByIdDelegate = new BeginOperationDelegate(this.OnBeginGetProductById);
            }
            if ((this.onEndGetProductByIdDelegate == null)) {
                this.onEndGetProductByIdDelegate = new EndOperationDelegate(this.OnEndGetProductById);
            }
            if ((this.onGetProductByIdCompletedDelegate == null)) {
                this.onGetProductByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductByIdDelegate, new object[] {
                        ProductId}, this.onEndGetProductByIdDelegate, this.onGetProductByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetProductObjects(int ProductId, webprintDesigner.ProductServiceReference.DesignerModes Mode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductObjects(ProductId, Mode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> webprintDesigner.ProductServiceReference.IProductService.EndGetProductObjects(System.IAsyncResult result) {
            return base.Channel.EndGetProductObjects(result);
        }
        
        private System.IAsyncResult OnBeginGetProductObjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductId = ((int)(inValues[0]));
            webprintDesigner.ProductServiceReference.DesignerModes Mode = ((webprintDesigner.ProductServiceReference.DesignerModes)(inValues[1]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetProductObjects(ProductId, Mode, callback, asyncState);
        }
        
        private object[] OnEndGetProductObjects(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetProductObjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductObjectsCompleted(object state) {
            if ((this.GetProductObjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductObjectsCompleted(this, new GetProductObjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductObjectsAsync(int ProductId, webprintDesigner.ProductServiceReference.DesignerModes Mode) {
            this.GetProductObjectsAsync(ProductId, Mode, null);
        }
        
        public void GetProductObjectsAsync(int ProductId, webprintDesigner.ProductServiceReference.DesignerModes Mode, object userState) {
            if ((this.onBeginGetProductObjectsDelegate == null)) {
                this.onBeginGetProductObjectsDelegate = new BeginOperationDelegate(this.OnBeginGetProductObjects);
            }
            if ((this.onEndGetProductObjectsDelegate == null)) {
                this.onEndGetProductObjectsDelegate = new EndOperationDelegate(this.OnEndGetProductObjects);
            }
            if ((this.onGetProductObjectsCompletedDelegate == null)) {
                this.onGetProductObjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductObjectsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductObjectsDelegate, new object[] {
                        ProductId,
                        Mode}, this.onEndGetProductObjectsDelegate, this.onGetProductObjectsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginSaveObjectsAndGenratePDF(int ProductId, string Bkimg, string Bkimg2, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> objObjectsList, webprintDesigner.ProductServiceReference.DesignerModes Mode, webprintDesigner.ProductServiceReference.SaveOperationTypes SaveOperationType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveObjectsAndGenratePDF(ProductId, Bkimg, Bkimg2, objObjectsList, Mode, SaveOperationType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string webprintDesigner.ProductServiceReference.IProductService.EndSaveObjectsAndGenratePDF(System.IAsyncResult result) {
            return base.Channel.EndSaveObjectsAndGenratePDF(result);
        }
        
        private System.IAsyncResult OnBeginSaveObjectsAndGenratePDF(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductId = ((int)(inValues[0]));
            string Bkimg = ((string)(inValues[1]));
            string Bkimg2 = ((string)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> objObjectsList = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects>)(inValues[3]));
            webprintDesigner.ProductServiceReference.DesignerModes Mode = ((webprintDesigner.ProductServiceReference.DesignerModes)(inValues[4]));
            webprintDesigner.ProductServiceReference.SaveOperationTypes SaveOperationType = ((webprintDesigner.ProductServiceReference.SaveOperationTypes)(inValues[5]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginSaveObjectsAndGenratePDF(ProductId, Bkimg, Bkimg2, objObjectsList, Mode, SaveOperationType, callback, asyncState);
        }
        
        private object[] OnEndSaveObjectsAndGenratePDF(System.IAsyncResult result) {
            string retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndSaveObjectsAndGenratePDF(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveObjectsAndGenratePDFCompleted(object state) {
            if ((this.SaveObjectsAndGenratePDFCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveObjectsAndGenratePDFCompleted(this, new SaveObjectsAndGenratePDFCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveObjectsAndGenratePDFAsync(int ProductId, string Bkimg, string Bkimg2, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> objObjectsList, webprintDesigner.ProductServiceReference.DesignerModes Mode, webprintDesigner.ProductServiceReference.SaveOperationTypes SaveOperationType) {
            this.SaveObjectsAndGenratePDFAsync(ProductId, Bkimg, Bkimg2, objObjectsList, Mode, SaveOperationType, null);
        }
        
        public void SaveObjectsAndGenratePDFAsync(int ProductId, string Bkimg, string Bkimg2, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> objObjectsList, webprintDesigner.ProductServiceReference.DesignerModes Mode, webprintDesigner.ProductServiceReference.SaveOperationTypes SaveOperationType, object userState) {
            if ((this.onBeginSaveObjectsAndGenratePDFDelegate == null)) {
                this.onBeginSaveObjectsAndGenratePDFDelegate = new BeginOperationDelegate(this.OnBeginSaveObjectsAndGenratePDF);
            }
            if ((this.onEndSaveObjectsAndGenratePDFDelegate == null)) {
                this.onEndSaveObjectsAndGenratePDFDelegate = new EndOperationDelegate(this.OnEndSaveObjectsAndGenratePDF);
            }
            if ((this.onSaveObjectsAndGenratePDFCompletedDelegate == null)) {
                this.onSaveObjectsAndGenratePDFCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveObjectsAndGenratePDFCompleted);
            }
            base.InvokeAsync(this.onBeginSaveObjectsAndGenratePDFDelegate, new object[] {
                        ProductId,
                        Bkimg,
                        Bkimg2,
                        objObjectsList,
                        Mode,
                        SaveOperationType}, this.onEndSaveObjectsAndGenratePDFDelegate, this.onSaveObjectsAndGenratePDFCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetCategories(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCategories(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.vw_ProductCategoriesLeafNodes> webprintDesigner.ProductServiceReference.IProductService.EndGetCategories(System.IAsyncResult result) {
            return base.Channel.EndGetCategories(result);
        }
        
        private System.IAsyncResult OnBeginGetCategories(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetCategories(callback, asyncState);
        }
        
        private object[] OnEndGetCategories(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.vw_ProductCategoriesLeafNodes> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetCategories(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCategoriesCompleted(object state) {
            if ((this.GetCategoriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCategoriesCompleted(this, new GetCategoriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCategoriesAsync() {
            this.GetCategoriesAsync(null);
        }
        
        public void GetCategoriesAsync(object userState) {
            if ((this.onBeginGetCategoriesDelegate == null)) {
                this.onBeginGetCategoriesDelegate = new BeginOperationDelegate(this.OnBeginGetCategories);
            }
            if ((this.onEndGetCategoriesDelegate == null)) {
                this.onEndGetCategoriesDelegate = new EndOperationDelegate(this.OnEndGetCategories);
            }
            if ((this.onGetCategoriesCompletedDelegate == null)) {
                this.onGetCategoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCategoriesDelegate, null, this.onEndGetCategoriesDelegate, this.onGetCategoriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetCategoriesByMatchingSetID(int MatchingSetID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCategoriesByMatchingSetID(MatchingSetID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategory> webprintDesigner.ProductServiceReference.IProductService.EndGetCategoriesByMatchingSetID(System.IAsyncResult result) {
            return base.Channel.EndGetCategoriesByMatchingSetID(result);
        }
        
        private System.IAsyncResult OnBeginGetCategoriesByMatchingSetID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int MatchingSetID = ((int)(inValues[0]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetCategoriesByMatchingSetID(MatchingSetID, callback, asyncState);
        }
        
        private object[] OnEndGetCategoriesByMatchingSetID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategory> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetCategoriesByMatchingSetID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCategoriesByMatchingSetIDCompleted(object state) {
            if ((this.GetCategoriesByMatchingSetIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCategoriesByMatchingSetIDCompleted(this, new GetCategoriesByMatchingSetIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCategoriesByMatchingSetIDAsync(int MatchingSetID) {
            this.GetCategoriesByMatchingSetIDAsync(MatchingSetID, null);
        }
        
        public void GetCategoriesByMatchingSetIDAsync(int MatchingSetID, object userState) {
            if ((this.onBeginGetCategoriesByMatchingSetIDDelegate == null)) {
                this.onBeginGetCategoriesByMatchingSetIDDelegate = new BeginOperationDelegate(this.OnBeginGetCategoriesByMatchingSetID);
            }
            if ((this.onEndGetCategoriesByMatchingSetIDDelegate == null)) {
                this.onEndGetCategoriesByMatchingSetIDDelegate = new EndOperationDelegate(this.OnEndGetCategoriesByMatchingSetID);
            }
            if ((this.onGetCategoriesByMatchingSetIDCompletedDelegate == null)) {
                this.onGetCategoriesByMatchingSetIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoriesByMatchingSetIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetCategoriesByMatchingSetIDDelegate, new object[] {
                        MatchingSetID}, this.onEndGetCategoriesByMatchingSetIDDelegate, this.onGetCategoriesByMatchingSetIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetBaseColors(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBaseColors(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.BaseColors> webprintDesigner.ProductServiceReference.IProductService.EndGetBaseColors(System.IAsyncResult result) {
            return base.Channel.EndGetBaseColors(result);
        }
        
        private System.IAsyncResult OnBeginGetBaseColors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetBaseColors(callback, asyncState);
        }
        
        private object[] OnEndGetBaseColors(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.BaseColors> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetBaseColors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBaseColorsCompleted(object state) {
            if ((this.GetBaseColorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBaseColorsCompleted(this, new GetBaseColorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBaseColorsAsync() {
            this.GetBaseColorsAsync(null);
        }
        
        public void GetBaseColorsAsync(object userState) {
            if ((this.onBeginGetBaseColorsDelegate == null)) {
                this.onBeginGetBaseColorsDelegate = new BeginOperationDelegate(this.OnBeginGetBaseColors);
            }
            if ((this.onEndGetBaseColorsDelegate == null)) {
                this.onEndGetBaseColorsDelegate = new EndOperationDelegate(this.OnEndGetBaseColors);
            }
            if ((this.onGetBaseColorsCompletedDelegate == null)) {
                this.onGetBaseColorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBaseColorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBaseColorsDelegate, null, this.onEndGetBaseColorsDelegate, this.onGetBaseColorsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetMatchingSetTheme(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMatchingSetTheme(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> webprintDesigner.ProductServiceReference.IProductService.EndGetMatchingSetTheme(System.IAsyncResult result) {
            return base.Channel.EndGetMatchingSetTheme(result);
        }
        
        private System.IAsyncResult OnBeginGetMatchingSetTheme(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetMatchingSetTheme(callback, asyncState);
        }
        
        private object[] OnEndGetMatchingSetTheme(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetMatchingSetTheme(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMatchingSetThemeCompleted(object state) {
            if ((this.GetMatchingSetThemeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMatchingSetThemeCompleted(this, new GetMatchingSetThemeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMatchingSetThemeAsync() {
            this.GetMatchingSetThemeAsync(null);
        }
        
        public void GetMatchingSetThemeAsync(object userState) {
            if ((this.onBeginGetMatchingSetThemeDelegate == null)) {
                this.onBeginGetMatchingSetThemeDelegate = new BeginOperationDelegate(this.OnBeginGetMatchingSetTheme);
            }
            if ((this.onEndGetMatchingSetThemeDelegate == null)) {
                this.onEndGetMatchingSetThemeDelegate = new EndOperationDelegate(this.OnEndGetMatchingSetTheme);
            }
            if ((this.onGetMatchingSetThemeCompletedDelegate == null)) {
                this.onGetMatchingSetThemeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMatchingSetThemeCompleted);
            }
            base.InvokeAsync(this.onBeginGetMatchingSetThemeDelegate, null, this.onEndGetMatchingSetThemeDelegate, this.onGetMatchingSetThemeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetTemplateThemeTags(System.Nullable<int> ProductID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTemplateThemeTags(ProductID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateThemeTags_Result> webprintDesigner.ProductServiceReference.IProductService.EndGetTemplateThemeTags(System.IAsyncResult result) {
            return base.Channel.EndGetTemplateThemeTags(result);
        }
        
        private System.IAsyncResult OnBeginGetTemplateThemeTags(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> ProductID = ((System.Nullable<int>)(inValues[0]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetTemplateThemeTags(ProductID, callback, asyncState);
        }
        
        private object[] OnEndGetTemplateThemeTags(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateThemeTags_Result> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetTemplateThemeTags(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTemplateThemeTagsCompleted(object state) {
            if ((this.GetTemplateThemeTagsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTemplateThemeTagsCompleted(this, new GetTemplateThemeTagsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTemplateThemeTagsAsync(System.Nullable<int> ProductID) {
            this.GetTemplateThemeTagsAsync(ProductID, null);
        }
        
        public void GetTemplateThemeTagsAsync(System.Nullable<int> ProductID, object userState) {
            if ((this.onBeginGetTemplateThemeTagsDelegate == null)) {
                this.onBeginGetTemplateThemeTagsDelegate = new BeginOperationDelegate(this.OnBeginGetTemplateThemeTags);
            }
            if ((this.onEndGetTemplateThemeTagsDelegate == null)) {
                this.onEndGetTemplateThemeTagsDelegate = new EndOperationDelegate(this.OnEndGetTemplateThemeTags);
            }
            if ((this.onGetTemplateThemeTagsCompletedDelegate == null)) {
                this.onGetTemplateThemeTagsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTemplateThemeTagsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTemplateThemeTagsDelegate, new object[] {
                        ProductID}, this.onEndGetTemplateThemeTagsDelegate, this.onGetTemplateThemeTagsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetTemplateIndustryTags(System.Nullable<int> ProductID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTemplateIndustryTags(ProductID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateIndustryTags_Result> webprintDesigner.ProductServiceReference.IProductService.EndGetTemplateIndustryTags(System.IAsyncResult result) {
            return base.Channel.EndGetTemplateIndustryTags(result);
        }
        
        private System.IAsyncResult OnBeginGetTemplateIndustryTags(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> ProductID = ((System.Nullable<int>)(inValues[0]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetTemplateIndustryTags(ProductID, callback, asyncState);
        }
        
        private object[] OnEndGetTemplateIndustryTags(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateIndustryTags_Result> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetTemplateIndustryTags(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTemplateIndustryTagsCompleted(object state) {
            if ((this.GetTemplateIndustryTagsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTemplateIndustryTagsCompleted(this, new GetTemplateIndustryTagsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTemplateIndustryTagsAsync(System.Nullable<int> ProductID) {
            this.GetTemplateIndustryTagsAsync(ProductID, null);
        }
        
        public void GetTemplateIndustryTagsAsync(System.Nullable<int> ProductID, object userState) {
            if ((this.onBeginGetTemplateIndustryTagsDelegate == null)) {
                this.onBeginGetTemplateIndustryTagsDelegate = new BeginOperationDelegate(this.OnBeginGetTemplateIndustryTags);
            }
            if ((this.onEndGetTemplateIndustryTagsDelegate == null)) {
                this.onEndGetTemplateIndustryTagsDelegate = new EndOperationDelegate(this.OnEndGetTemplateIndustryTags);
            }
            if ((this.onGetTemplateIndustryTagsCompletedDelegate == null)) {
                this.onGetTemplateIndustryTagsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTemplateIndustryTagsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTemplateIndustryTagsDelegate, new object[] {
                        ProductID}, this.onEndGetTemplateIndustryTagsDelegate, this.onGetTemplateIndustryTagsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetTemplates(string keywords, int ProductCategoryID, int PageNo, int PageSize, bool callbind, int status, int UserID, string Role, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTemplates(keywords, ProductCategoryID, PageNo, PageSize, callbind, status, UserID, Role, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.Templates> webprintDesigner.ProductServiceReference.IProductService.EndGetTemplates(out int PageCount, System.IAsyncResult result) {
            return base.Channel.EndGetTemplates(out PageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keywords = ((string)(inValues[0]));
            int ProductCategoryID = ((int)(inValues[1]));
            int PageNo = ((int)(inValues[2]));
            int PageSize = ((int)(inValues[3]));
            bool callbind = ((bool)(inValues[4]));
            int status = ((int)(inValues[5]));
            int UserID = ((int)(inValues[6]));
            string Role = ((string)(inValues[7]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetTemplates(keywords, ProductCategoryID, PageNo, PageSize, callbind, status, UserID, Role, callback, asyncState);
        }
        
        private object[] OnEndGetTemplates(System.IAsyncResult result) {
            int PageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.Templates> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetTemplates(out PageCount, result);
            return new object[] {
                    PageCount,
                    retVal};
        }
        
        private void OnGetTemplatesCompleted(object state) {
            if ((this.GetTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTemplatesCompleted(this, new GetTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTemplatesAsync(string keywords, int ProductCategoryID, int PageNo, int PageSize, bool callbind, int status, int UserID, string Role) {
            this.GetTemplatesAsync(keywords, ProductCategoryID, PageNo, PageSize, callbind, status, UserID, Role, null);
        }
        
        public void GetTemplatesAsync(string keywords, int ProductCategoryID, int PageNo, int PageSize, bool callbind, int status, int UserID, string Role, object userState) {
            if ((this.onBeginGetTemplatesDelegate == null)) {
                this.onBeginGetTemplatesDelegate = new BeginOperationDelegate(this.OnBeginGetTemplates);
            }
            if ((this.onEndGetTemplatesDelegate == null)) {
                this.onEndGetTemplatesDelegate = new EndOperationDelegate(this.OnEndGetTemplates);
            }
            if ((this.onGetTemplatesCompletedDelegate == null)) {
                this.onGetTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetTemplatesDelegate, new object[] {
                        keywords,
                        ProductCategoryID,
                        PageNo,
                        PageSize,
                        callbind,
                        status,
                        UserID,
                        Role}, this.onEndGetTemplatesDelegate, this.onGetTemplatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetMatchingSetTemplates(string keywords, int MatchingSetID, int PageNo, int PageSize, bool callbind, int status, int UserID, string Role, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMatchingSetTemplates(keywords, MatchingSetID, PageNo, PageSize, callbind, status, UserID, Role, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplateView_Result> webprintDesigner.ProductServiceReference.IProductService.EndGetMatchingSetTemplates(out int PageCount, System.IAsyncResult result) {
            return base.Channel.EndGetMatchingSetTemplates(out PageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetMatchingSetTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keywords = ((string)(inValues[0]));
            int MatchingSetID = ((int)(inValues[1]));
            int PageNo = ((int)(inValues[2]));
            int PageSize = ((int)(inValues[3]));
            bool callbind = ((bool)(inValues[4]));
            int status = ((int)(inValues[5]));
            int UserID = ((int)(inValues[6]));
            string Role = ((string)(inValues[7]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetMatchingSetTemplates(keywords, MatchingSetID, PageNo, PageSize, callbind, status, UserID, Role, callback, asyncState);
        }
        
        private object[] OnEndGetMatchingSetTemplates(System.IAsyncResult result) {
            int PageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplateView_Result> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetMatchingSetTemplates(out PageCount, result);
            return new object[] {
                    PageCount,
                    retVal};
        }
        
        private void OnGetMatchingSetTemplatesCompleted(object state) {
            if ((this.GetMatchingSetTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMatchingSetTemplatesCompleted(this, new GetMatchingSetTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMatchingSetTemplatesAsync(string keywords, int MatchingSetID, int PageNo, int PageSize, bool callbind, int status, int UserID, string Role) {
            this.GetMatchingSetTemplatesAsync(keywords, MatchingSetID, PageNo, PageSize, callbind, status, UserID, Role, null);
        }
        
        public void GetMatchingSetTemplatesAsync(string keywords, int MatchingSetID, int PageNo, int PageSize, bool callbind, int status, int UserID, string Role, object userState) {
            if ((this.onBeginGetMatchingSetTemplatesDelegate == null)) {
                this.onBeginGetMatchingSetTemplatesDelegate = new BeginOperationDelegate(this.OnBeginGetMatchingSetTemplates);
            }
            if ((this.onEndGetMatchingSetTemplatesDelegate == null)) {
                this.onEndGetMatchingSetTemplatesDelegate = new EndOperationDelegate(this.OnEndGetMatchingSetTemplates);
            }
            if ((this.onGetMatchingSetTemplatesCompletedDelegate == null)) {
                this.onGetMatchingSetTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMatchingSetTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMatchingSetTemplatesDelegate, new object[] {
                        keywords,
                        MatchingSetID,
                        PageNo,
                        PageSize,
                        callbind,
                        status,
                        UserID,
                        Role}, this.onEndGetMatchingSetTemplatesDelegate, this.onGetMatchingSetTemplatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetMatchingSetTemplatesList(int MatchingSetID, string ProductName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMatchingSetTemplatesList(MatchingSetID, ProductName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplatesList_Result> webprintDesigner.ProductServiceReference.IProductService.EndGetMatchingSetTemplatesList(System.IAsyncResult result) {
            return base.Channel.EndGetMatchingSetTemplatesList(result);
        }
        
        private System.IAsyncResult OnBeginGetMatchingSetTemplatesList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int MatchingSetID = ((int)(inValues[0]));
            string ProductName = ((string)(inValues[1]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetMatchingSetTemplatesList(MatchingSetID, ProductName, callback, asyncState);
        }
        
        private object[] OnEndGetMatchingSetTemplatesList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplatesList_Result> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetMatchingSetTemplatesList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMatchingSetTemplatesListCompleted(object state) {
            if ((this.GetMatchingSetTemplatesListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMatchingSetTemplatesListCompleted(this, new GetMatchingSetTemplatesListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMatchingSetTemplatesListAsync(int MatchingSetID, string ProductName) {
            this.GetMatchingSetTemplatesListAsync(MatchingSetID, ProductName, null);
        }
        
        public void GetMatchingSetTemplatesListAsync(int MatchingSetID, string ProductName, object userState) {
            if ((this.onBeginGetMatchingSetTemplatesListDelegate == null)) {
                this.onBeginGetMatchingSetTemplatesListDelegate = new BeginOperationDelegate(this.OnBeginGetMatchingSetTemplatesList);
            }
            if ((this.onEndGetMatchingSetTemplatesListDelegate == null)) {
                this.onEndGetMatchingSetTemplatesListDelegate = new EndOperationDelegate(this.OnEndGetMatchingSetTemplatesList);
            }
            if ((this.onGetMatchingSetTemplatesListCompletedDelegate == null)) {
                this.onGetMatchingSetTemplatesListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMatchingSetTemplatesListCompleted);
            }
            base.InvokeAsync(this.onBeginGetMatchingSetTemplatesListDelegate, new object[] {
                        MatchingSetID,
                        ProductName}, this.onEndGetMatchingSetTemplatesListDelegate, this.onGetMatchingSetTemplatesListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetFoldLinesByProductCategoryID(int ProductCategoryID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFoldLinesByProductCategoryID(ProductCategoryID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategoryFoldLines> webprintDesigner.ProductServiceReference.IProductService.EndGetFoldLinesByProductCategoryID(out bool ApplyFoldLines, System.IAsyncResult result) {
            return base.Channel.EndGetFoldLinesByProductCategoryID(out ApplyFoldLines, result);
        }
        
        private System.IAsyncResult OnBeginGetFoldLinesByProductCategoryID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductCategoryID = ((int)(inValues[0]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetFoldLinesByProductCategoryID(ProductCategoryID, callback, asyncState);
        }
        
        private object[] OnEndGetFoldLinesByProductCategoryID(System.IAsyncResult result) {
            bool ApplyFoldLines = this.GetDefaultValueForInitialization<bool>();
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategoryFoldLines> retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetFoldLinesByProductCategoryID(out ApplyFoldLines, result);
            return new object[] {
                    ApplyFoldLines,
                    retVal};
        }
        
        private void OnGetFoldLinesByProductCategoryIDCompleted(object state) {
            if ((this.GetFoldLinesByProductCategoryIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFoldLinesByProductCategoryIDCompleted(this, new GetFoldLinesByProductCategoryIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFoldLinesByProductCategoryIDAsync(int ProductCategoryID) {
            this.GetFoldLinesByProductCategoryIDAsync(ProductCategoryID, null);
        }
        
        public void GetFoldLinesByProductCategoryIDAsync(int ProductCategoryID, object userState) {
            if ((this.onBeginGetFoldLinesByProductCategoryIDDelegate == null)) {
                this.onBeginGetFoldLinesByProductCategoryIDDelegate = new BeginOperationDelegate(this.OnBeginGetFoldLinesByProductCategoryID);
            }
            if ((this.onEndGetFoldLinesByProductCategoryIDDelegate == null)) {
                this.onEndGetFoldLinesByProductCategoryIDDelegate = new EndOperationDelegate(this.OnEndGetFoldLinesByProductCategoryID);
            }
            if ((this.onGetFoldLinesByProductCategoryIDCompletedDelegate == null)) {
                this.onGetFoldLinesByProductCategoryIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFoldLinesByProductCategoryIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetFoldLinesByProductCategoryIDDelegate, new object[] {
                        ProductCategoryID}, this.onEndGetFoldLinesByProductCategoryIDDelegate, this.onGetFoldLinesByProductCategoryIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginSaveTemplates(webprintDesigner.ProductServiceReference.Templates oTemplate, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateIndustryTags> lstIndustryTags, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateThemeTags> lstThemeTags, bool IsAdd, bool IsCatChanged, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTemplates(oTemplate, lstIndustryTags, lstThemeTags, IsAdd, IsCatChanged, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool webprintDesigner.ProductServiceReference.IProductService.EndSaveTemplates(out int NewTemplateID, System.IAsyncResult result) {
            return base.Channel.EndSaveTemplates(out NewTemplateID, result);
        }
        
        private System.IAsyncResult OnBeginSaveTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            webprintDesigner.ProductServiceReference.Templates oTemplate = ((webprintDesigner.ProductServiceReference.Templates)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateIndustryTags> lstIndustryTags = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateIndustryTags>)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateThemeTags> lstThemeTags = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateThemeTags>)(inValues[2]));
            bool IsAdd = ((bool)(inValues[3]));
            bool IsCatChanged = ((bool)(inValues[4]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginSaveTemplates(oTemplate, lstIndustryTags, lstThemeTags, IsAdd, IsCatChanged, callback, asyncState);
        }
        
        private object[] OnEndSaveTemplates(System.IAsyncResult result) {
            int NewTemplateID = this.GetDefaultValueForInitialization<int>();
            bool retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndSaveTemplates(out NewTemplateID, result);
            return new object[] {
                    NewTemplateID,
                    retVal};
        }
        
        private void OnSaveTemplatesCompleted(object state) {
            if ((this.SaveTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTemplatesCompleted(this, new SaveTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTemplatesAsync(webprintDesigner.ProductServiceReference.Templates oTemplate, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateIndustryTags> lstIndustryTags, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateThemeTags> lstThemeTags, bool IsAdd, bool IsCatChanged) {
            this.SaveTemplatesAsync(oTemplate, lstIndustryTags, lstThemeTags, IsAdd, IsCatChanged, null);
        }
        
        public void SaveTemplatesAsync(webprintDesigner.ProductServiceReference.Templates oTemplate, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateIndustryTags> lstIndustryTags, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateThemeTags> lstThemeTags, bool IsAdd, bool IsCatChanged, object userState) {
            if ((this.onBeginSaveTemplatesDelegate == null)) {
                this.onBeginSaveTemplatesDelegate = new BeginOperationDelegate(this.OnBeginSaveTemplates);
            }
            if ((this.onEndSaveTemplatesDelegate == null)) {
                this.onEndSaveTemplatesDelegate = new EndOperationDelegate(this.OnEndSaveTemplates);
            }
            if ((this.onSaveTemplatesCompletedDelegate == null)) {
                this.onSaveTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTemplatesDelegate, new object[] {
                        oTemplate,
                        lstIndustryTags,
                        lstThemeTags,
                        IsAdd,
                        IsCatChanged}, this.onEndSaveTemplatesDelegate, this.onSaveTemplatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginDeleteTemplate(int ProductID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTemplate(ProductID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool webprintDesigner.ProductServiceReference.IProductService.EndDeleteTemplate(out int CategoryID, System.IAsyncResult result) {
            return base.Channel.EndDeleteTemplate(out CategoryID, result);
        }
        
        private System.IAsyncResult OnBeginDeleteTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductID = ((int)(inValues[0]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginDeleteTemplate(ProductID, callback, asyncState);
        }
        
        private object[] OnEndDeleteTemplate(System.IAsyncResult result) {
            int CategoryID = this.GetDefaultValueForInitialization<int>();
            bool retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndDeleteTemplate(out CategoryID, result);
            return new object[] {
                    CategoryID,
                    retVal};
        }
        
        private void OnDeleteTemplateCompleted(object state) {
            if ((this.DeleteTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTemplateCompleted(this, new DeleteTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTemplateAsync(int ProductID) {
            this.DeleteTemplateAsync(ProductID, null);
        }
        
        public void DeleteTemplateAsync(int ProductID, object userState) {
            if ((this.onBeginDeleteTemplateDelegate == null)) {
                this.onBeginDeleteTemplateDelegate = new BeginOperationDelegate(this.OnBeginDeleteTemplate);
            }
            if ((this.onEndDeleteTemplateDelegate == null)) {
                this.onEndDeleteTemplateDelegate = new EndOperationDelegate(this.OnEndDeleteTemplate);
            }
            if ((this.onDeleteTemplateCompletedDelegate == null)) {
                this.onDeleteTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTemplateDelegate, new object[] {
                        ProductID}, this.onEndDeleteTemplateDelegate, this.onDeleteTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginCopyTemplate(int ProductID, int SubmittedBy, string SubmittedByName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyTemplate(ProductID, SubmittedBy, SubmittedByName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int webprintDesigner.ProductServiceReference.IProductService.EndCopyTemplate(System.IAsyncResult result) {
            return base.Channel.EndCopyTemplate(result);
        }
        
        private System.IAsyncResult OnBeginCopyTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductID = ((int)(inValues[0]));
            int SubmittedBy = ((int)(inValues[1]));
            string SubmittedByName = ((string)(inValues[2]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginCopyTemplate(ProductID, SubmittedBy, SubmittedByName, callback, asyncState);
        }
        
        private object[] OnEndCopyTemplate(System.IAsyncResult result) {
            int retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndCopyTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyTemplateCompleted(object state) {
            if ((this.CopyTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyTemplateCompleted(this, new CopyTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyTemplateAsync(int ProductID, int SubmittedBy, string SubmittedByName) {
            this.CopyTemplateAsync(ProductID, SubmittedBy, SubmittedByName, null);
        }
        
        public void CopyTemplateAsync(int ProductID, int SubmittedBy, string SubmittedByName, object userState) {
            if ((this.onBeginCopyTemplateDelegate == null)) {
                this.onBeginCopyTemplateDelegate = new BeginOperationDelegate(this.OnBeginCopyTemplate);
            }
            if ((this.onEndCopyTemplateDelegate == null)) {
                this.onEndCopyTemplateDelegate = new EndOperationDelegate(this.OnEndCopyTemplate);
            }
            if ((this.onCopyTemplateCompletedDelegate == null)) {
                this.onCopyTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginCopyTemplateDelegate, new object[] {
                        ProductID,
                        SubmittedBy,
                        SubmittedByName}, this.onEndCopyTemplateDelegate, this.onCopyTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginCopyMatchingSet(int ProductID, int SubmittedBy, string SubmittedByName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyMatchingSet(ProductID, SubmittedBy, SubmittedByName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int webprintDesigner.ProductServiceReference.IProductService.EndCopyMatchingSet(System.IAsyncResult result) {
            return base.Channel.EndCopyMatchingSet(result);
        }
        
        private System.IAsyncResult OnBeginCopyMatchingSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ProductID = ((int)(inValues[0]));
            int SubmittedBy = ((int)(inValues[1]));
            string SubmittedByName = ((string)(inValues[2]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginCopyMatchingSet(ProductID, SubmittedBy, SubmittedByName, callback, asyncState);
        }
        
        private object[] OnEndCopyMatchingSet(System.IAsyncResult result) {
            int retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndCopyMatchingSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyMatchingSetCompleted(object state) {
            if ((this.CopyMatchingSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyMatchingSetCompleted(this, new CopyMatchingSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyMatchingSetAsync(int ProductID, int SubmittedBy, string SubmittedByName) {
            this.CopyMatchingSetAsync(ProductID, SubmittedBy, SubmittedByName, null);
        }
        
        public void CopyMatchingSetAsync(int ProductID, int SubmittedBy, string SubmittedByName, object userState) {
            if ((this.onBeginCopyMatchingSetDelegate == null)) {
                this.onBeginCopyMatchingSetDelegate = new BeginOperationDelegate(this.OnBeginCopyMatchingSet);
            }
            if ((this.onEndCopyMatchingSetDelegate == null)) {
                this.onEndCopyMatchingSetDelegate = new EndOperationDelegate(this.OnEndCopyMatchingSet);
            }
            if ((this.onCopyMatchingSetCompletedDelegate == null)) {
                this.onCopyMatchingSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyMatchingSetCompleted);
            }
            base.InvokeAsync(this.onBeginCopyMatchingSetDelegate, new object[] {
                        ProductID,
                        SubmittedBy,
                        SubmittedByName}, this.onEndCopyMatchingSetDelegate, this.onCopyMatchingSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginUpdateMatchingSetTemplates(System.Collections.ObjectModel.ObservableCollection<int> ProductIDs, string ProductName, string NarrativeTag, System.Nullable<int> BaseColorID, System.Collections.ObjectModel.ObservableCollection<int> IndustryTagIDs, System.Collections.ObjectModel.ObservableCollection<int> ThemeTagIDs, int action, int userId, string fullname, string rejectReason, System.Nullable<int> AdminRating, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMatchingSetTemplates(ProductIDs, ProductName, NarrativeTag, BaseColorID, IndustryTagIDs, ThemeTagIDs, action, userId, fullname, rejectReason, AdminRating, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool webprintDesigner.ProductServiceReference.IProductService.EndUpdateMatchingSetTemplates(System.IAsyncResult result) {
            return base.Channel.EndUpdateMatchingSetTemplates(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMatchingSetTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> ProductIDs = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            string ProductName = ((string)(inValues[1]));
            string NarrativeTag = ((string)(inValues[2]));
            System.Nullable<int> BaseColorID = ((System.Nullable<int>)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<int> IndustryTagIDs = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<int> ThemeTagIDs = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[5]));
            int action = ((int)(inValues[6]));
            int userId = ((int)(inValues[7]));
            string fullname = ((string)(inValues[8]));
            string rejectReason = ((string)(inValues[9]));
            System.Nullable<int> AdminRating = ((System.Nullable<int>)(inValues[10]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginUpdateMatchingSetTemplates(ProductIDs, ProductName, NarrativeTag, BaseColorID, IndustryTagIDs, ThemeTagIDs, action, userId, fullname, rejectReason, AdminRating, callback, asyncState);
        }
        
        private object[] OnEndUpdateMatchingSetTemplates(System.IAsyncResult result) {
            bool retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndUpdateMatchingSetTemplates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateMatchingSetTemplatesCompleted(object state) {
            if ((this.UpdateMatchingSetTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMatchingSetTemplatesCompleted(this, new UpdateMatchingSetTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMatchingSetTemplatesAsync(System.Collections.ObjectModel.ObservableCollection<int> ProductIDs, string ProductName, string NarrativeTag, System.Nullable<int> BaseColorID, System.Collections.ObjectModel.ObservableCollection<int> IndustryTagIDs, System.Collections.ObjectModel.ObservableCollection<int> ThemeTagIDs, int action, int userId, string fullname, string rejectReason, System.Nullable<int> AdminRating) {
            this.UpdateMatchingSetTemplatesAsync(ProductIDs, ProductName, NarrativeTag, BaseColorID, IndustryTagIDs, ThemeTagIDs, action, userId, fullname, rejectReason, AdminRating, null);
        }
        
        public void UpdateMatchingSetTemplatesAsync(System.Collections.ObjectModel.ObservableCollection<int> ProductIDs, string ProductName, string NarrativeTag, System.Nullable<int> BaseColorID, System.Collections.ObjectModel.ObservableCollection<int> IndustryTagIDs, System.Collections.ObjectModel.ObservableCollection<int> ThemeTagIDs, int action, int userId, string fullname, string rejectReason, System.Nullable<int> AdminRating, object userState) {
            if ((this.onBeginUpdateMatchingSetTemplatesDelegate == null)) {
                this.onBeginUpdateMatchingSetTemplatesDelegate = new BeginOperationDelegate(this.OnBeginUpdateMatchingSetTemplates);
            }
            if ((this.onEndUpdateMatchingSetTemplatesDelegate == null)) {
                this.onEndUpdateMatchingSetTemplatesDelegate = new EndOperationDelegate(this.OnEndUpdateMatchingSetTemplates);
            }
            if ((this.onUpdateMatchingSetTemplatesCompletedDelegate == null)) {
                this.onUpdateMatchingSetTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMatchingSetTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMatchingSetTemplatesDelegate, new object[] {
                        ProductIDs,
                        ProductName,
                        NarrativeTag,
                        BaseColorID,
                        IndustryTagIDs,
                        ThemeTagIDs,
                        action,
                        userId,
                        fullname,
                        rejectReason,
                        AdminRating}, this.onEndUpdateMatchingSetTemplatesDelegate, this.onUpdateMatchingSetTemplatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginGetContactQuickTextFields(int CustomerID, int ContactID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContactQuickTextFields(CustomerID, ContactID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        webprintDesigner.ProductServiceReference.QuickText webprintDesigner.ProductServiceReference.IProductService.EndGetContactQuickTextFields(System.IAsyncResult result) {
            return base.Channel.EndGetContactQuickTextFields(result);
        }
        
        private System.IAsyncResult OnBeginGetContactQuickTextFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CustomerID = ((int)(inValues[0]));
            int ContactID = ((int)(inValues[1]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginGetContactQuickTextFields(CustomerID, ContactID, callback, asyncState);
        }
        
        private object[] OnEndGetContactQuickTextFields(System.IAsyncResult result) {
            webprintDesigner.ProductServiceReference.QuickText retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndGetContactQuickTextFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactQuickTextFieldsCompleted(object state) {
            if ((this.GetContactQuickTextFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactQuickTextFieldsCompleted(this, new GetContactQuickTextFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactQuickTextFieldsAsync(int CustomerID, int ContactID) {
            this.GetContactQuickTextFieldsAsync(CustomerID, ContactID, null);
        }
        
        public void GetContactQuickTextFieldsAsync(int CustomerID, int ContactID, object userState) {
            if ((this.onBeginGetContactQuickTextFieldsDelegate == null)) {
                this.onBeginGetContactQuickTextFieldsDelegate = new BeginOperationDelegate(this.OnBeginGetContactQuickTextFields);
            }
            if ((this.onEndGetContactQuickTextFieldsDelegate == null)) {
                this.onEndGetContactQuickTextFieldsDelegate = new EndOperationDelegate(this.OnEndGetContactQuickTextFields);
            }
            if ((this.onGetContactQuickTextFieldsCompletedDelegate == null)) {
                this.onGetContactQuickTextFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactQuickTextFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactQuickTextFieldsDelegate, new object[] {
                        CustomerID,
                        ContactID}, this.onEndGetContactQuickTextFieldsDelegate, this.onGetContactQuickTextFieldsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginUpdateQuickText(webprintDesigner.ProductServiceReference.QuickText oQuickTextData, int ContactID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateQuickText(oQuickTextData, ContactID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool webprintDesigner.ProductServiceReference.IProductService.EndUpdateQuickText(System.IAsyncResult result) {
            return base.Channel.EndUpdateQuickText(result);
        }
        
        private System.IAsyncResult OnBeginUpdateQuickText(object[] inValues, System.AsyncCallback callback, object asyncState) {
            webprintDesigner.ProductServiceReference.QuickText oQuickTextData = ((webprintDesigner.ProductServiceReference.QuickText)(inValues[0]));
            int ContactID = ((int)(inValues[1]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginUpdateQuickText(oQuickTextData, ContactID, callback, asyncState);
        }
        
        private object[] OnEndUpdateQuickText(System.IAsyncResult result) {
            bool retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndUpdateQuickText(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateQuickTextCompleted(object state) {
            if ((this.UpdateQuickTextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateQuickTextCompleted(this, new UpdateQuickTextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateQuickTextAsync(webprintDesigner.ProductServiceReference.QuickText oQuickTextData, int ContactID) {
            this.UpdateQuickTextAsync(oQuickTextData, ContactID, null);
        }
        
        public void UpdateQuickTextAsync(webprintDesigner.ProductServiceReference.QuickText oQuickTextData, int ContactID, object userState) {
            if ((this.onBeginUpdateQuickTextDelegate == null)) {
                this.onBeginUpdateQuickTextDelegate = new BeginOperationDelegate(this.OnBeginUpdateQuickText);
            }
            if ((this.onEndUpdateQuickTextDelegate == null)) {
                this.onEndUpdateQuickTextDelegate = new EndOperationDelegate(this.OnEndUpdateQuickText);
            }
            if ((this.onUpdateQuickTextCompletedDelegate == null)) {
                this.onUpdateQuickTextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateQuickTextCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateQuickTextDelegate, new object[] {
                        oQuickTextData,
                        ContactID}, this.onEndUpdateQuickTextDelegate, this.onUpdateQuickTextCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult webprintDesigner.ProductServiceReference.IProductService.BeginCropImage(string ImgName, int ImgX, int ImgY, int ImgWidth, int ImgHeight, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCropImage(ImgName, ImgX, ImgY, ImgWidth, ImgHeight, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool webprintDesigner.ProductServiceReference.IProductService.EndCropImage(System.IAsyncResult result) {
            return base.Channel.EndCropImage(result);
        }
        
        private System.IAsyncResult OnBeginCropImage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ImgName = ((string)(inValues[0]));
            int ImgX = ((int)(inValues[1]));
            int ImgY = ((int)(inValues[2]));
            int ImgWidth = ((int)(inValues[3]));
            int ImgHeight = ((int)(inValues[4]));
            return ((webprintDesigner.ProductServiceReference.IProductService)(this)).BeginCropImage(ImgName, ImgX, ImgY, ImgWidth, ImgHeight, callback, asyncState);
        }
        
        private object[] OnEndCropImage(System.IAsyncResult result) {
            bool retVal = ((webprintDesigner.ProductServiceReference.IProductService)(this)).EndCropImage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCropImageCompleted(object state) {
            if ((this.CropImageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CropImageCompleted(this, new CropImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CropImageAsync(string ImgName, int ImgX, int ImgY, int ImgWidth, int ImgHeight) {
            this.CropImageAsync(ImgName, ImgX, ImgY, ImgWidth, ImgHeight, null);
        }
        
        public void CropImageAsync(string ImgName, int ImgX, int ImgY, int ImgWidth, int ImgHeight, object userState) {
            if ((this.onBeginCropImageDelegate == null)) {
                this.onBeginCropImageDelegate = new BeginOperationDelegate(this.OnBeginCropImage);
            }
            if ((this.onEndCropImageDelegate == null)) {
                this.onEndCropImageDelegate = new EndOperationDelegate(this.OnEndCropImage);
            }
            if ((this.onCropImageCompletedDelegate == null)) {
                this.onCropImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCropImageCompleted);
            }
            base.InvokeAsync(this.onBeginCropImageDelegate, new object[] {
                        ImgName,
                        ImgX,
                        ImgY,
                        ImgWidth,
                        ImgHeight}, this.onEndCropImageDelegate, this.onCropImageCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override webprintDesigner.ProductServiceReference.IProductService CreateChannel() {
            return new ProductServiceClientChannel(this);
        }
        
        private class ProductServiceClientChannel : ChannelBase<webprintDesigner.ProductServiceReference.IProductService>, webprintDesigner.ProductServiceReference.IProductService {
            
            public ProductServiceClientChannel(System.ServiceModel.ClientBase<webprintDesigner.ProductServiceReference.IProductService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetMatchingSets(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMatchingSets", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.MatchingSets> EndGetMatchingSets(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.MatchingSets> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.MatchingSets>)(base.EndInvoke("GetMatchingSets", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMatchingSetbyID(int MatchingSetID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = MatchingSetID;
                System.IAsyncResult _result = base.BeginInvoke("GetMatchingSetbyID", _args, callback, asyncState);
                return _result;
            }
            
            public webprintDesigner.ProductServiceReference.MatchingSets EndGetMatchingSetbyID(System.IAsyncResult result) {
                object[] _args = new object[0];
                webprintDesigner.ProductServiceReference.MatchingSets _result = ((webprintDesigner.ProductServiceReference.MatchingSets)(base.EndInvoke("GetMatchingSetbyID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFontList(int ProductId, bool ReturnFontFiles, webprintDesigner.ProductServiceReference.FontLoadModes mode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ProductId;
                _args[1] = ReturnFontFiles;
                _args[2] = mode;
                System.IAsyncResult _result = base.BeginInvoke("GetFontList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateFonts> EndGetFontList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateFonts> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateFonts>)(base.EndInvoke("GetFontList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProductBackgroundImages(int ProductId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ProductId;
                System.IAsyncResult _result = base.BeginInvoke("GetProductBackgroundImages", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateBackgroundImages> EndGetProductBackgroundImages(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateBackgroundImages> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateBackgroundImages>)(base.EndInvoke("GetProductBackgroundImages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProductBackgroundImg(int ProductId, string BkImg, bool IsSide2, int PageNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = ProductId;
                _args[1] = BkImg;
                _args[2] = IsSide2;
                _args[3] = PageNo;
                System.IAsyncResult _result = base.BeginInvoke("GetProductBackgroundImg", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetProductBackgroundImg(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetProductBackgroundImg", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteProductBackgroundImage(int ProductId, int BackgroundImageID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ProductId;
                _args[1] = BackgroundImageID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteProductBackgroundImage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteProductBackgroundImage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteProductBackgroundImage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetColorStyle(int ProductId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ProductId;
                System.IAsyncResult _result = base.BeginInvoke("GetColorStyle", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateColorStyles> EndGetColorStyle(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateColorStyles> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateColorStyles>)(base.EndInvoke("GetColorStyle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProductById(int ProductId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ProductId;
                System.IAsyncResult _result = base.BeginInvoke("GetProductById", _args, callback, asyncState);
                return _result;
            }
            
            public webprintDesigner.ProductServiceReference.Templates EndGetProductById(System.IAsyncResult result) {
                object[] _args = new object[0];
                webprintDesigner.ProductServiceReference.Templates _result = ((webprintDesigner.ProductServiceReference.Templates)(base.EndInvoke("GetProductById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProductObjects(int ProductId, webprintDesigner.ProductServiceReference.DesignerModes Mode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ProductId;
                _args[1] = Mode;
                System.IAsyncResult _result = base.BeginInvoke("GetProductObjects", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> EndGetProductObjects(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects>)(base.EndInvoke("GetProductObjects", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveObjectsAndGenratePDF(int ProductId, string Bkimg, string Bkimg2, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateObjects> objObjectsList, webprintDesigner.ProductServiceReference.DesignerModes Mode, webprintDesigner.ProductServiceReference.SaveOperationTypes SaveOperationType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = ProductId;
                _args[1] = Bkimg;
                _args[2] = Bkimg2;
                _args[3] = objObjectsList;
                _args[4] = Mode;
                _args[5] = SaveOperationType;
                System.IAsyncResult _result = base.BeginInvoke("SaveObjectsAndGenratePDF", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveObjectsAndGenratePDF(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveObjectsAndGenratePDF", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCategories(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCategories", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.vw_ProductCategoriesLeafNodes> EndGetCategories(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.vw_ProductCategoriesLeafNodes> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.vw_ProductCategoriesLeafNodes>)(base.EndInvoke("GetCategories", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCategoriesByMatchingSetID(int MatchingSetID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = MatchingSetID;
                System.IAsyncResult _result = base.BeginInvoke("GetCategoriesByMatchingSetID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategory> EndGetCategoriesByMatchingSetID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategory> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategory>)(base.EndInvoke("GetCategoriesByMatchingSetID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBaseColors(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBaseColors", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.BaseColors> EndGetBaseColors(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.BaseColors> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.BaseColors>)(base.EndInvoke("GetBaseColors", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMatchingSetTheme(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMatchingSetTheme", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetMatchingSetTheme(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetMatchingSetTheme", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTemplateThemeTags(System.Nullable<int> ProductID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ProductID;
                System.IAsyncResult _result = base.BeginInvoke("GetTemplateThemeTags", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateThemeTags_Result> EndGetTemplateThemeTags(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateThemeTags_Result> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateThemeTags_Result>)(base.EndInvoke("GetTemplateThemeTags", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTemplateIndustryTags(System.Nullable<int> ProductID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ProductID;
                System.IAsyncResult _result = base.BeginInvoke("GetTemplateIndustryTags", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateIndustryTags_Result> EndGetTemplateIndustryTags(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateIndustryTags_Result> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetTemplateIndustryTags_Result>)(base.EndInvoke("GetTemplateIndustryTags", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTemplates(string keywords, int ProductCategoryID, int PageNo, int PageSize, bool callbind, int status, int UserID, string Role, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = keywords;
                _args[1] = ProductCategoryID;
                _args[2] = PageNo;
                _args[3] = PageSize;
                _args[4] = callbind;
                _args[5] = status;
                _args[6] = UserID;
                _args[7] = Role;
                System.IAsyncResult _result = base.BeginInvoke("GetTemplates", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.Templates> EndGetTemplates(out int PageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.Templates> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.Templates>)(base.EndInvoke("GetTemplates", _args, result)));
                PageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMatchingSetTemplates(string keywords, int MatchingSetID, int PageNo, int PageSize, bool callbind, int status, int UserID, string Role, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = keywords;
                _args[1] = MatchingSetID;
                _args[2] = PageNo;
                _args[3] = PageSize;
                _args[4] = callbind;
                _args[5] = status;
                _args[6] = UserID;
                _args[7] = Role;
                System.IAsyncResult _result = base.BeginInvoke("GetMatchingSetTemplates", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplateView_Result> EndGetMatchingSetTemplates(out int PageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplateView_Result> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplateView_Result>)(base.EndInvoke("GetMatchingSetTemplates", _args, result)));
                PageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMatchingSetTemplatesList(int MatchingSetID, string ProductName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = MatchingSetID;
                _args[1] = ProductName;
                System.IAsyncResult _result = base.BeginInvoke("GetMatchingSetTemplatesList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplatesList_Result> EndGetMatchingSetTemplatesList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplatesList_Result> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.sp_GetMatchingSetTemplatesList_Result>)(base.EndInvoke("GetMatchingSetTemplatesList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFoldLinesByProductCategoryID(int ProductCategoryID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ProductCategoryID;
                System.IAsyncResult _result = base.BeginInvoke("GetFoldLinesByProductCategoryID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategoryFoldLines> EndGetFoldLinesByProductCategoryID(out bool ApplyFoldLines, System.IAsyncResult result) {
                object[] _args = new object[1];
                System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategoryFoldLines> _result = ((System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.tbl_ProductCategoryFoldLines>)(base.EndInvoke("GetFoldLinesByProductCategoryID", _args, result)));
                ApplyFoldLines = ((bool)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveTemplates(webprintDesigner.ProductServiceReference.Templates oTemplate, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateIndustryTags> lstIndustryTags, System.Collections.ObjectModel.ObservableCollection<webprintDesigner.ProductServiceReference.TemplateThemeTags> lstThemeTags, bool IsAdd, bool IsCatChanged, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = oTemplate;
                _args[1] = lstIndustryTags;
                _args[2] = lstThemeTags;
                _args[3] = IsAdd;
                _args[4] = IsCatChanged;
                System.IAsyncResult _result = base.BeginInvoke("SaveTemplates", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveTemplates(out int NewTemplateID, System.IAsyncResult result) {
                object[] _args = new object[1];
                bool _result = ((bool)(base.EndInvoke("SaveTemplates", _args, result)));
                NewTemplateID = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTemplate(int ProductID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ProductID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteTemplate(out int CategoryID, System.IAsyncResult result) {
                object[] _args = new object[1];
                bool _result = ((bool)(base.EndInvoke("DeleteTemplate", _args, result)));
                CategoryID = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyTemplate(int ProductID, int SubmittedBy, string SubmittedByName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ProductID;
                _args[1] = SubmittedBy;
                _args[2] = SubmittedByName;
                System.IAsyncResult _result = base.BeginInvoke("CopyTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCopyTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("CopyTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyMatchingSet(int ProductID, int SubmittedBy, string SubmittedByName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ProductID;
                _args[1] = SubmittedBy;
                _args[2] = SubmittedByName;
                System.IAsyncResult _result = base.BeginInvoke("CopyMatchingSet", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCopyMatchingSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("CopyMatchingSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateMatchingSetTemplates(System.Collections.ObjectModel.ObservableCollection<int> ProductIDs, string ProductName, string NarrativeTag, System.Nullable<int> BaseColorID, System.Collections.ObjectModel.ObservableCollection<int> IndustryTagIDs, System.Collections.ObjectModel.ObservableCollection<int> ThemeTagIDs, int action, int userId, string fullname, string rejectReason, System.Nullable<int> AdminRating, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[11];
                _args[0] = ProductIDs;
                _args[1] = ProductName;
                _args[2] = NarrativeTag;
                _args[3] = BaseColorID;
                _args[4] = IndustryTagIDs;
                _args[5] = ThemeTagIDs;
                _args[6] = action;
                _args[7] = userId;
                _args[8] = fullname;
                _args[9] = rejectReason;
                _args[10] = AdminRating;
                System.IAsyncResult _result = base.BeginInvoke("UpdateMatchingSetTemplates", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateMatchingSetTemplates(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateMatchingSetTemplates", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetContactQuickTextFields(int CustomerID, int ContactID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = CustomerID;
                _args[1] = ContactID;
                System.IAsyncResult _result = base.BeginInvoke("GetContactQuickTextFields", _args, callback, asyncState);
                return _result;
            }
            
            public webprintDesigner.ProductServiceReference.QuickText EndGetContactQuickTextFields(System.IAsyncResult result) {
                object[] _args = new object[0];
                webprintDesigner.ProductServiceReference.QuickText _result = ((webprintDesigner.ProductServiceReference.QuickText)(base.EndInvoke("GetContactQuickTextFields", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateQuickText(webprintDesigner.ProductServiceReference.QuickText oQuickTextData, int ContactID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = oQuickTextData;
                _args[1] = ContactID;
                System.IAsyncResult _result = base.BeginInvoke("UpdateQuickText", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateQuickText(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateQuickText", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCropImage(string ImgName, int ImgX, int ImgY, int ImgWidth, int ImgHeight, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = ImgName;
                _args[1] = ImgX;
                _args[2] = ImgY;
                _args[3] = ImgWidth;
                _args[4] = ImgHeight;
                System.IAsyncResult _result = base.BeginInvoke("CropImage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCropImage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CropImage", _args, result)));
                return _result;
            }
        }
    }
}
