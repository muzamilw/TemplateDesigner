//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace TemplateDesignerModelTypes
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(tbl_ProductCategory))]
    public partial class tbl_ProductCategoryFoldLines: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int FoldLineID
        {
            get { return _foldLineID; }
            set
            {
                if (_foldLineID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'FoldLineID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _foldLineID = value;
                    OnPropertyChanged("FoldLineID");
                }
            }
        }
        private int _foldLineID;
    
        [DataMember]
        public Nullable<int> ProductCategoryID
        {
            get { return _productCategoryID; }
            set
            {
                if (_productCategoryID != value)
                {
                    ChangeTracker.RecordOriginalValue("ProductCategoryID", _productCategoryID);
                    if (!IsDeserializing)
                    {
                        if (tbl_ProductCategory != null && tbl_ProductCategory.ProductCategoryID != value)
                        {
                            tbl_ProductCategory = null;
                        }
                    }
                    _productCategoryID = value;
                    OnPropertyChanged("ProductCategoryID");
                }
            }
        }
        private Nullable<int> _productCategoryID;
    
        [DataMember]
        public Nullable<bool> FoldLineOrientation
        {
            get { return _foldLineOrientation; }
            set
            {
                if (_foldLineOrientation != value)
                {
                    _foldLineOrientation = value;
                    OnPropertyChanged("FoldLineOrientation");
                }
            }
        }
        private Nullable<bool> _foldLineOrientation;
    
        [DataMember]
        public Nullable<double> FoldLineOffsetFromOrigin
        {
            get { return _foldLineOffsetFromOrigin; }
            set
            {
                if (_foldLineOffsetFromOrigin != value)
                {
                    _foldLineOffsetFromOrigin = value;
                    OnPropertyChanged("FoldLineOffsetFromOrigin");
                }
            }
        }
        private Nullable<double> _foldLineOffsetFromOrigin;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public tbl_ProductCategory tbl_ProductCategory
        {
            get { return _tbl_ProductCategory; }
            set
            {
                if (!ReferenceEquals(_tbl_ProductCategory, value))
                {
                    var previousValue = _tbl_ProductCategory;
                    _tbl_ProductCategory = value;
                    Fixuptbl_ProductCategory(previousValue);
                    OnNavigationPropertyChanged("tbl_ProductCategory");
                }
            }
        }
        private tbl_ProductCategory _tbl_ProductCategory;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            tbl_ProductCategory = null;
        }

        #endregion
        #region Association Fixup
    
        private void Fixuptbl_ProductCategory(tbl_ProductCategory previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.tbl_ProductCategoryFoldLines.Contains(this))
            {
                previousValue.tbl_ProductCategoryFoldLines.Remove(this);
            }
    
            if (tbl_ProductCategory != null)
            {
                if (!tbl_ProductCategory.tbl_ProductCategoryFoldLines.Contains(this))
                {
                    tbl_ProductCategory.tbl_ProductCategoryFoldLines.Add(this);
                }
    
                ProductCategoryID = tbl_ProductCategory.ProductCategoryID;
            }
            else if (!skipKeys)
            {
                ProductCategoryID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("tbl_ProductCategory")
                    && (ChangeTracker.OriginalValues["tbl_ProductCategory"] == tbl_ProductCategory))
                {
                    ChangeTracker.OriginalValues.Remove("tbl_ProductCategory");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("tbl_ProductCategory", previousValue);
                }
                if (tbl_ProductCategory != null && !tbl_ProductCategory.ChangeTracker.ChangeTrackingEnabled)
                {
                    tbl_ProductCategory.StartTracking();
                }
            }
        }

        #endregion
    }
}
